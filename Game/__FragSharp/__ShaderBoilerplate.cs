// This file was auto-generated by FragSharp. It will be regenerated on the next compilation.
// Manual changes made will not persist and may cause incorrect behavior between compilations.

using System;
using System.Collections.Generic;

using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;

using FragSharpFramework;

namespace FragSharpFramework
{
    public class FragSharp
    {
        public static ContentManager Content;
        public static GraphicsDevice GraphicsDevice;
        public static void Initialize(ContentManager Content, GraphicsDevice GraphicsDevice)
        {
            FragSharp.Content = Content;
            FragSharp.GraphicsDevice = GraphicsDevice;
            Game.DrawAntiMagic.Init();
            Game.MakeSymmetric.Init();
            Game.MakeUnitsSymmetric.Init();
            Game.MakeTargetSymmetric.Init();
            Game.FixBuildings_1.Init();
            Game.FixBuildings_2.Init();
            Game.DrawGeoInfo.Init();
            Game.DrawDirwardInfo.Init();
            Game.DrawPolarInfo.Init();
            Game.DrawTiles.Init();
            Game.DrawOutsideTiles.Init();
            Game.Geodesic_Outline.Init();
            Game.Geodesic_OutlineCleanup.Init();
            Game.Geodesic_StorePos.Init();
            Game.Geodesic_ExtremityPropagation.Init();
            Game.Geodesic_SetGeoId.Init();
            Game.Geodesic_PolarDistance.Init();
            Game.Geodesic_SetCircumference.Init();
            Game.Geodesic_Polarity.Init();
            Game.Geodesic_FillMissingPolarity.Init();
            Game.Geodesic_ClearImportance.Init();
            Game.Geodesic_DirwardExtend.Init();
            Game.Geodesic_ConvertToBlocking.Init();
            Game.Geodesic_Flatten.Init();
            Game.Geodesic_Boundary.Init();
            Game.Action_PaintTiles.Init();
            Game.PaintTiles_UpdateData.Init();
            Game.PaintTiles_UpdateUnits.Init();
            Game.PaintTiles_UpdateTiles.Init();
            Game.ActionDelete_Data.Init();
            Game.UpdateFakeSelect.Init();
            Game.ActionSelect.Init();
            Game.ActionSelectInBox.Init();
            Game.DataDrawMouse.Init();
            Game.DataDrawMouseCircle.Init();
            Game.ActionSpawn_Filter.Init();
            Game.ActionSpawn_Data.Init();
            Game.ActionSpawn_Unit.Init();
            Game.ActionSpawn_Target.Init();
            Game.ActionSpawn_Corpse.Init();
            Game.HashReduce.Init();
            Game.Hash.Init();
            Game.DataHash.Init();
            Game.UpdateMagic.Init();
            Game.Kill.Init();
            Game.PropagateNecromancyAuro.Init();
            Game.PropagateAntiMagicAuro.Init();
            Game.Identity.Init();
            Game.Shift.Init();
            Game.DestroyAllBuildings.Init();
            Game.DragonLordEngaged.Init();
            Game.RemoveDragonLordData.Init();
            Game.RemoveDragonLordUnit.Init();
            Game.SetTeams.Init();
            Game.UnitMigrate.Init();
            Game.BenchmarkTest_TextureLookup4x4.Init();
            Game.BenchmarkTest_TextureLookup1x1.Init();
            Game.BenchmarkTest_TextureLookupWithConditional.Init();
            Game.BenchmarkTest_TextureLookupWithComplexMath.Init();
            Game.BenchmarkTest_TextureLookup1x5.Init();
            Game.BenchmarkTest_MathPacking.Init();
            Game.BenchmarkTest_MathPackingVec.Init();
            Game.DrawTerritoryPlayer.Init();
            Game.DrawTerritoryColors.Init();
            Game.DrawBuildingsIcons.Init();
            Game.DrawBuildings.Init();
            Game.DrawCorpses.Init();
            Game.DrawPrecomputation_Cur.Init();
            Game.DrawPrecomputation_Pre.Init();
            Game.DrawSolid.Init();
            Game.DrawTexture.Init();
            Game.DrawColoredTexture.Init();
            Game.DrawTextureSmooth.Init();
            Game.DyingDragonLordGridCoord.Init();
            Game.DragonLordGridCoord.Init();
            Game.BoundingTr.Init();
            Game.BoundingBl.Init();
            Game._BoundingTr.Init();
            Game._BoundingBl.Init();
            Game._PreferTl.Init();
            Game.CheckForAttacking.Init();
            Game.BuildingInfusion_Delete.Init();
            Game.BuildingInfusion_Selection.Init();
            Game.BuildingDiffusion_Selection.Init();
            Game.BuildingInfusion_Data.Init();
            Game.BuildingDiffusion_Data.Init();
            Game.BuildingDiffusion_Target.Init();
            Game.SpawnUnits.Init();
            Game.SetSpawn_Unit.Init();
            Game.SetSpawn_Target.Init();
            Game.SetSpawn_Data.Init();
            Game.AddCorpses.Init();
            Game.UpdateRandomField.Init();
            Game.DoUnitSummary_1.Init();
            Game.DoUnitSummary_2.Init();
            Game.CountUnitTypeForAllPlayers.Init();
            Game.CountReduce_4x1byte.Init();
            Game.CountUnits.Init();
            Game.CountAllUnits.Init();
            Game.CountMovingAttackingDyingExploding.Init();
            Game.CountReduce_3byte1byte.Init();
            Game.SetSelectedAction.Init();
            Game.ActionAttackSquare.Init();
            Game.ActionAttackPoint.Init();
            Game.ActionAttack2.Init();
            Game.Pathfinding_ToSpecial.Init();
            Game.Pathfinding_ToPlayers.Init();
            Game.Pathfinding_ToOtherTeams.Init();
            Game.Movement_Phase1.Init();
            Game.Movement_Phase2.Init();
            Game.Movement_Convect.Init();
            Game.Movement_UpdateDirection_RemoveDead.Init();
            Game.Movement_SetPolarity_Phase1.Init();
            Game.Movement_SetPolarity_Phase2.Init();
            Game.DrawUnitsZoomedOutBlur.Init();
            Game.DrawUnits.Init();
        }
    }
}





namespace Game
{
    public partial class DrawAntiMagic
    {
        private static Effect CompiledEffect_casting_team_0;
        private static EffectParameter param_casting_team_0_vs_param_cameraPos;
        private static EffectParameter param_casting_team_0_vs_param_cameraAspect;
        private static EffectParameter param_casting_team_0_fs_param_AntiMagic_Texture;
        private static EffectParameter param_casting_team_0_fs_param_AntiMagic_size;
        private static EffectParameter param_casting_team_0_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_casting_team_0p003921569;
        private static EffectParameter param_casting_team_0p003921569_vs_param_cameraPos;
        private static EffectParameter param_casting_team_0p003921569_vs_param_cameraAspect;
        private static EffectParameter param_casting_team_0p003921569_fs_param_AntiMagic_Texture;
        private static EffectParameter param_casting_team_0p003921569_fs_param_AntiMagic_size;
        private static EffectParameter param_casting_team_0p003921569_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_casting_team_0p007843138;
        private static EffectParameter param_casting_team_0p007843138_vs_param_cameraPos;
        private static EffectParameter param_casting_team_0p007843138_vs_param_cameraAspect;
        private static EffectParameter param_casting_team_0p007843138_fs_param_AntiMagic_Texture;
        private static EffectParameter param_casting_team_0p007843138_fs_param_AntiMagic_size;
        private static EffectParameter param_casting_team_0p007843138_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_casting_team_0p01176471;
        private static EffectParameter param_casting_team_0p01176471_vs_param_cameraPos;
        private static EffectParameter param_casting_team_0p01176471_vs_param_cameraAspect;
        private static EffectParameter param_casting_team_0p01176471_fs_param_AntiMagic_Texture;
        private static EffectParameter param_casting_team_0p01176471_fs_param_AntiMagic_size;
        private static EffectParameter param_casting_team_0p01176471_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_casting_team_0p01568628;
        private static EffectParameter param_casting_team_0p01568628_vs_param_cameraPos;
        private static EffectParameter param_casting_team_0p01568628_vs_param_cameraAspect;
        private static EffectParameter param_casting_team_0p01568628_fs_param_AntiMagic_Texture;
        private static EffectParameter param_casting_team_0p01568628_fs_param_AntiMagic_size;
        private static EffectParameter param_casting_team_0p01568628_fs_param_AntiMagic_dxdy;

        public static void Init()
        {
            CompiledEffect_casting_team_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawAntiMagic_casting_team=0");
            param_casting_team_0_vs_param_cameraPos = CompiledEffect_casting_team_0.Parameters["vs_param_cameraPos"];
            param_casting_team_0_vs_param_cameraAspect = CompiledEffect_casting_team_0.Parameters["vs_param_cameraAspect"];
            param_casting_team_0_fs_param_AntiMagic_Texture = CompiledEffect_casting_team_0.Parameters["fs_param_AntiMagic_Texture"];
            param_casting_team_0_fs_param_AntiMagic_size = CompiledEffect_casting_team_0.Parameters["fs_param_AntiMagic_size"];
            param_casting_team_0_fs_param_AntiMagic_dxdy = CompiledEffect_casting_team_0.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_casting_team_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawAntiMagic_casting_team=0.003921569");
            param_casting_team_0p003921569_vs_param_cameraPos = CompiledEffect_casting_team_0p003921569.Parameters["vs_param_cameraPos"];
            param_casting_team_0p003921569_vs_param_cameraAspect = CompiledEffect_casting_team_0p003921569.Parameters["vs_param_cameraAspect"];
            param_casting_team_0p003921569_fs_param_AntiMagic_Texture = CompiledEffect_casting_team_0p003921569.Parameters["fs_param_AntiMagic_Texture"];
            param_casting_team_0p003921569_fs_param_AntiMagic_size = CompiledEffect_casting_team_0p003921569.Parameters["fs_param_AntiMagic_size"];
            param_casting_team_0p003921569_fs_param_AntiMagic_dxdy = CompiledEffect_casting_team_0p003921569.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_casting_team_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawAntiMagic_casting_team=0.007843138");
            param_casting_team_0p007843138_vs_param_cameraPos = CompiledEffect_casting_team_0p007843138.Parameters["vs_param_cameraPos"];
            param_casting_team_0p007843138_vs_param_cameraAspect = CompiledEffect_casting_team_0p007843138.Parameters["vs_param_cameraAspect"];
            param_casting_team_0p007843138_fs_param_AntiMagic_Texture = CompiledEffect_casting_team_0p007843138.Parameters["fs_param_AntiMagic_Texture"];
            param_casting_team_0p007843138_fs_param_AntiMagic_size = CompiledEffect_casting_team_0p007843138.Parameters["fs_param_AntiMagic_size"];
            param_casting_team_0p007843138_fs_param_AntiMagic_dxdy = CompiledEffect_casting_team_0p007843138.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_casting_team_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawAntiMagic_casting_team=0.01176471");
            param_casting_team_0p01176471_vs_param_cameraPos = CompiledEffect_casting_team_0p01176471.Parameters["vs_param_cameraPos"];
            param_casting_team_0p01176471_vs_param_cameraAspect = CompiledEffect_casting_team_0p01176471.Parameters["vs_param_cameraAspect"];
            param_casting_team_0p01176471_fs_param_AntiMagic_Texture = CompiledEffect_casting_team_0p01176471.Parameters["fs_param_AntiMagic_Texture"];
            param_casting_team_0p01176471_fs_param_AntiMagic_size = CompiledEffect_casting_team_0p01176471.Parameters["fs_param_AntiMagic_size"];
            param_casting_team_0p01176471_fs_param_AntiMagic_dxdy = CompiledEffect_casting_team_0p01176471.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_casting_team_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawAntiMagic_casting_team=0.01568628");
            param_casting_team_0p01568628_vs_param_cameraPos = CompiledEffect_casting_team_0p01568628.Parameters["vs_param_cameraPos"];
            param_casting_team_0p01568628_vs_param_cameraAspect = CompiledEffect_casting_team_0p01568628.Parameters["vs_param_cameraAspect"];
            param_casting_team_0p01568628_fs_param_AntiMagic_Texture = CompiledEffect_casting_team_0p01568628.Parameters["fs_param_AntiMagic_Texture"];
            param_casting_team_0p01568628_fs_param_AntiMagic_size = CompiledEffect_casting_team_0p01568628.Parameters["fs_param_AntiMagic_size"];
            param_casting_team_0p01568628_fs_param_AntiMagic_dxdy = CompiledEffect_casting_team_0p01568628.Parameters["fs_param_AntiMagic_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D AntiMagic, float casting_team, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, AntiMagic, casting_team);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D AntiMagic, float casting_team, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, AntiMagic, casting_team);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D AntiMagic, float casting_team, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, AntiMagic, casting_team);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D AntiMagic, float casting_team, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, AntiMagic, casting_team);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D AntiMagic, float casting_team)
        {
            if (abs((float)(casting_team - 0)) < .0019)
            {
                if (param_casting_team_0_vs_param_cameraPos != null) param_casting_team_0_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_casting_team_0_vs_param_cameraAspect != null) param_casting_team_0_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_casting_team_0_fs_param_AntiMagic_Texture != null) param_casting_team_0_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_casting_team_0_fs_param_AntiMagic_size != null) param_casting_team_0_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_casting_team_0_fs_param_AntiMagic_dxdy != null) param_casting_team_0_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_casting_team_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(casting_team - 0.003921569)) < .0019)
            {
                if (param_casting_team_0p003921569_vs_param_cameraPos != null) param_casting_team_0p003921569_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_casting_team_0p003921569_vs_param_cameraAspect != null) param_casting_team_0p003921569_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_casting_team_0p003921569_fs_param_AntiMagic_Texture != null) param_casting_team_0p003921569_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_casting_team_0p003921569_fs_param_AntiMagic_size != null) param_casting_team_0p003921569_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_casting_team_0p003921569_fs_param_AntiMagic_dxdy != null) param_casting_team_0p003921569_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_casting_team_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(casting_team - 0.007843138)) < .0019)
            {
                if (param_casting_team_0p007843138_vs_param_cameraPos != null) param_casting_team_0p007843138_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_casting_team_0p007843138_vs_param_cameraAspect != null) param_casting_team_0p007843138_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_casting_team_0p007843138_fs_param_AntiMagic_Texture != null) param_casting_team_0p007843138_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_casting_team_0p007843138_fs_param_AntiMagic_size != null) param_casting_team_0p007843138_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_casting_team_0p007843138_fs_param_AntiMagic_dxdy != null) param_casting_team_0p007843138_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_casting_team_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(casting_team - 0.01176471)) < .0019)
            {
                if (param_casting_team_0p01176471_vs_param_cameraPos != null) param_casting_team_0p01176471_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_casting_team_0p01176471_vs_param_cameraAspect != null) param_casting_team_0p01176471_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_casting_team_0p01176471_fs_param_AntiMagic_Texture != null) param_casting_team_0p01176471_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_casting_team_0p01176471_fs_param_AntiMagic_size != null) param_casting_team_0p01176471_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_casting_team_0p01176471_fs_param_AntiMagic_dxdy != null) param_casting_team_0p01176471_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_casting_team_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(casting_team - 0.01568628)) < .0019)
            {
                if (param_casting_team_0p01568628_vs_param_cameraPos != null) param_casting_team_0p01568628_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_casting_team_0p01568628_vs_param_cameraAspect != null) param_casting_team_0p01568628_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_casting_team_0p01568628_fs_param_AntiMagic_Texture != null) param_casting_team_0p01568628_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_casting_team_0p01568628_fs_param_AntiMagic_size != null) param_casting_team_0p01568628_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_casting_team_0p01568628_fs_param_AntiMagic_dxdy != null) param_casting_team_0p01568628_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_casting_team_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}



namespace Game
{
    public partial class MakeSymmetric
    {
        private static Effect CompiledEffect_type_0;
        private static EffectParameter param_type_0_fs_param_Info_Texture;
        private static EffectParameter param_type_0_fs_param_Info_size;
        private static EffectParameter param_type_0_fs_param_Info_dxdy;
        private static Effect CompiledEffect_type_1;
        private static EffectParameter param_type_1_fs_param_Info_Texture;
        private static EffectParameter param_type_1_fs_param_Info_size;
        private static EffectParameter param_type_1_fs_param_Info_dxdy;

        public static void Init()
        {
            CompiledEffect_type_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/MakeSymmetric_type=0");
            param_type_0_fs_param_Info_Texture = CompiledEffect_type_0.Parameters["fs_param_Info_Texture"];
            param_type_0_fs_param_Info_size = CompiledEffect_type_0.Parameters["fs_param_Info_size"];
            param_type_0_fs_param_Info_dxdy = CompiledEffect_type_0.Parameters["fs_param_Info_dxdy"];
            CompiledEffect_type_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/MakeSymmetric_type=1");
            param_type_1_fs_param_Info_Texture = CompiledEffect_type_1.Parameters["fs_param_Info_Texture"];
            param_type_1_fs_param_Info_size = CompiledEffect_type_1.Parameters["fs_param_Info_size"];
            param_type_1_fs_param_Info_dxdy = CompiledEffect_type_1.Parameters["fs_param_Info_dxdy"];
        }
        public static void Apply(Texture2D Info, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Info, type);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Info, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Info, type);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Info, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Info, type);
        }
        public static void Using(Texture2D Info, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Info, type);
        }
        public static void Using(Texture2D Info, float type)
        {
            if (abs((float)(type - 0)) < .0019)
            {
                if (param_type_0_fs_param_Info_Texture != null) param_type_0_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
                if (param_type_0_fs_param_Info_size != null) param_type_0_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
                if (param_type_0_fs_param_Info_dxdy != null) param_type_0_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
                CompiledEffect_type_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 1)) < .0019)
            {
                if (param_type_1_fs_param_Info_Texture != null) param_type_1_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
                if (param_type_1_fs_param_Info_size != null) param_type_1_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
                if (param_type_1_fs_param_Info_dxdy != null) param_type_1_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
                CompiledEffect_type_1.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}



namespace Game
{
    public partial class MakeUnitsSymmetric
    {
        private static Effect CompiledEffect_type_0;
        private static EffectParameter param_type_0_fs_param_Units_Texture;
        private static EffectParameter param_type_0_fs_param_Units_size;
        private static EffectParameter param_type_0_fs_param_Units_dxdy;
        private static EffectParameter param_type_0_fs_param_convert_dragonlords;
        private static Effect CompiledEffect_type_1;
        private static EffectParameter param_type_1_fs_param_Units_Texture;
        private static EffectParameter param_type_1_fs_param_Units_size;
        private static EffectParameter param_type_1_fs_param_Units_dxdy;
        private static EffectParameter param_type_1_fs_param_convert_dragonlords;

        public static void Init()
        {
            CompiledEffect_type_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/MakeUnitsSymmetric_type=0");
            param_type_0_fs_param_Units_Texture = CompiledEffect_type_0.Parameters["fs_param_Units_Texture"];
            param_type_0_fs_param_Units_size = CompiledEffect_type_0.Parameters["fs_param_Units_size"];
            param_type_0_fs_param_Units_dxdy = CompiledEffect_type_0.Parameters["fs_param_Units_dxdy"];
            param_type_0_fs_param_convert_dragonlords = CompiledEffect_type_0.Parameters["fs_param_convert_dragonlords"];
            CompiledEffect_type_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/MakeUnitsSymmetric_type=1");
            param_type_1_fs_param_Units_Texture = CompiledEffect_type_1.Parameters["fs_param_Units_Texture"];
            param_type_1_fs_param_Units_size = CompiledEffect_type_1.Parameters["fs_param_Units_size"];
            param_type_1_fs_param_Units_dxdy = CompiledEffect_type_1.Parameters["fs_param_Units_dxdy"];
            param_type_1_fs_param_convert_dragonlords = CompiledEffect_type_1.Parameters["fs_param_convert_dragonlords"];
        }
        public static void Apply(Texture2D Units, float type, bool convert_dragonlords, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, type, convert_dragonlords);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Units, float type, bool convert_dragonlords, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, type, convert_dragonlords);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Units, float type, bool convert_dragonlords, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, type, convert_dragonlords);
        }
        public static void Using(Texture2D Units, float type, bool convert_dragonlords, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, type, convert_dragonlords);
        }
        public static void Using(Texture2D Units, float type, bool convert_dragonlords)
        {
            if (abs((float)(type - 0)) < .0019)
            {
                if (param_type_0_fs_param_Units_Texture != null) param_type_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0_fs_param_Units_size != null) param_type_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0_fs_param_Units_dxdy != null) param_type_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_type_0_fs_param_convert_dragonlords != null) param_type_0_fs_param_convert_dragonlords.SetValue(FragSharpMarshal.Marshal(convert_dragonlords));
                CompiledEffect_type_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 1)) < .0019)
            {
                if (param_type_1_fs_param_Units_Texture != null) param_type_1_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_1_fs_param_Units_size != null) param_type_1_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_1_fs_param_Units_dxdy != null) param_type_1_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_type_1_fs_param_convert_dragonlords != null) param_type_1_fs_param_convert_dragonlords.SetValue(FragSharpMarshal.Marshal(convert_dragonlords));
                CompiledEffect_type_1.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}



namespace Game
{
    public partial class MakeTargetSymmetric
    {
        private static Effect CompiledEffect_type_0;
        private static EffectParameter param_type_0_fs_param_Target_Texture;
        private static EffectParameter param_type_0_fs_param_Target_size;
        private static EffectParameter param_type_0_fs_param_Target_dxdy;
        private static Effect CompiledEffect_type_1;
        private static EffectParameter param_type_1_fs_param_Target_Texture;
        private static EffectParameter param_type_1_fs_param_Target_size;
        private static EffectParameter param_type_1_fs_param_Target_dxdy;

        public static void Init()
        {
            CompiledEffect_type_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/MakeTargetSymmetric_type=0");
            param_type_0_fs_param_Target_Texture = CompiledEffect_type_0.Parameters["fs_param_Target_Texture"];
            param_type_0_fs_param_Target_size = CompiledEffect_type_0.Parameters["fs_param_Target_size"];
            param_type_0_fs_param_Target_dxdy = CompiledEffect_type_0.Parameters["fs_param_Target_dxdy"];
            CompiledEffect_type_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/MakeTargetSymmetric_type=1");
            param_type_1_fs_param_Target_Texture = CompiledEffect_type_1.Parameters["fs_param_Target_Texture"];
            param_type_1_fs_param_Target_size = CompiledEffect_type_1.Parameters["fs_param_Target_size"];
            param_type_1_fs_param_Target_dxdy = CompiledEffect_type_1.Parameters["fs_param_Target_dxdy"];
        }
        public static void Apply(Texture2D Target, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Target, type);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Target, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Target, type);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Target, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Target, type);
        }
        public static void Using(Texture2D Target, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Target, type);
        }
        public static void Using(Texture2D Target, float type)
        {
            if (abs((float)(type - 0)) < .0019)
            {
                if (param_type_0_fs_param_Target_Texture != null) param_type_0_fs_param_Target_Texture.SetValue(FragSharpMarshal.Marshal(Target));
                if (param_type_0_fs_param_Target_size != null) param_type_0_fs_param_Target_size.SetValue(FragSharpMarshal.Marshal(vec(Target.Width, Target.Height)));
                if (param_type_0_fs_param_Target_dxdy != null) param_type_0_fs_param_Target_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Target.Width, Target.Height)));
                CompiledEffect_type_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 1)) < .0019)
            {
                if (param_type_1_fs_param_Target_Texture != null) param_type_1_fs_param_Target_Texture.SetValue(FragSharpMarshal.Marshal(Target));
                if (param_type_1_fs_param_Target_size != null) param_type_1_fs_param_Target_size.SetValue(FragSharpMarshal.Marshal(vec(Target.Width, Target.Height)));
                if (param_type_1_fs_param_Target_dxdy != null) param_type_1_fs_param_Target_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Target.Width, Target.Height)));
                CompiledEffect_type_1.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class FixBuildings_1
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/FixBuildings_1");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units);
        }
        public static void Using(Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units);
        }
        public static void Using(Texture2D Data, Texture2D Units)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class FixBuildings_2
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/FixBuildings_2");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units);
        }
        public static void Using(Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units);
        }
        public static void Using(Texture2D Data, Texture2D Units)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawGeoInfo
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;
        private static EffectParameter param_fs_param_Texture_Texture;
        private static EffectParameter param_fs_param_Texture_size;
        private static EffectParameter param_fs_param_Texture_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawGeoInfo");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
            param_fs_param_Texture_Texture = CompiledEffect.Parameters["fs_param_Texture_Texture"];
            param_fs_param_Texture_size = CompiledEffect.Parameters["fs_param_Texture_size"];
            param_fs_param_Texture_dxdy = CompiledEffect.Parameters["fs_param_Texture_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Geo, Texture);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Geo, Texture);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Geo, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Geo, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D Texture)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Texture_Texture != null) param_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
            if (param_fs_param_Texture_size != null) param_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
            if (param_fs_param_Texture_dxdy != null) param_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawDirwardInfo
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Dirward_Texture;
        private static EffectParameter param_fs_param_Dirward_size;
        private static EffectParameter param_fs_param_Dirward_dxdy;
        private static EffectParameter param_fs_param_Texture_Texture;
        private static EffectParameter param_fs_param_Texture_size;
        private static EffectParameter param_fs_param_Texture_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawDirwardInfo");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Dirward_Texture = CompiledEffect.Parameters["fs_param_Dirward_Texture"];
            param_fs_param_Dirward_size = CompiledEffect.Parameters["fs_param_Dirward_size"];
            param_fs_param_Dirward_dxdy = CompiledEffect.Parameters["fs_param_Dirward_dxdy"];
            param_fs_param_Texture_Texture = CompiledEffect.Parameters["fs_param_Texture_Texture"];
            param_fs_param_Texture_size = CompiledEffect.Parameters["fs_param_Texture_size"];
            param_fs_param_Texture_dxdy = CompiledEffect.Parameters["fs_param_Texture_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Dirward, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Dirward, Texture);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Dirward, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Dirward, Texture);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Dirward, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Dirward, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Dirward, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Dirward, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Dirward, Texture2D Texture)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Dirward_Texture != null) param_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
            if (param_fs_param_Dirward_size != null) param_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
            if (param_fs_param_Dirward_dxdy != null) param_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
            if (param_fs_param_Texture_Texture != null) param_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
            if (param_fs_param_Texture_size != null) param_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
            if (param_fs_param_Texture_dxdy != null) param_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawPolarInfo
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;
        private static EffectParameter param_fs_param_PolarDistance_Texture;
        private static EffectParameter param_fs_param_PolarDistance_size;
        private static EffectParameter param_fs_param_PolarDistance_dxdy;
        private static EffectParameter param_fs_param_Texture_Texture;
        private static EffectParameter param_fs_param_Texture_size;
        private static EffectParameter param_fs_param_Texture_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawPolarInfo");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
            param_fs_param_PolarDistance_Texture = CompiledEffect.Parameters["fs_param_PolarDistance_Texture"];
            param_fs_param_PolarDistance_size = CompiledEffect.Parameters["fs_param_PolarDistance_size"];
            param_fs_param_PolarDistance_dxdy = CompiledEffect.Parameters["fs_param_PolarDistance_dxdy"];
            param_fs_param_Texture_Texture = CompiledEffect.Parameters["fs_param_Texture_Texture"];
            param_fs_param_Texture_size = CompiledEffect.Parameters["fs_param_Texture_size"];
            param_fs_param_Texture_dxdy = CompiledEffect.Parameters["fs_param_Texture_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D PolarDistance, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Geo, PolarDistance, Texture);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D PolarDistance, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Geo, PolarDistance, Texture);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D PolarDistance, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Geo, PolarDistance, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D PolarDistance, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Geo, PolarDistance, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Geo, Texture2D PolarDistance, Texture2D Texture)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            if (param_fs_param_PolarDistance_Texture != null) param_fs_param_PolarDistance_Texture.SetValue(FragSharpMarshal.Marshal(PolarDistance));
            if (param_fs_param_PolarDistance_size != null) param_fs_param_PolarDistance_size.SetValue(FragSharpMarshal.Marshal(vec(PolarDistance.Width, PolarDistance.Height)));
            if (param_fs_param_PolarDistance_dxdy != null) param_fs_param_PolarDistance_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PolarDistance.Width, PolarDistance.Height)));
            if (param_fs_param_Texture_Texture != null) param_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
            if (param_fs_param_Texture_size != null) param_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
            if (param_fs_param_Texture_dxdy != null) param_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}





namespace Game
{
    public partial class DrawTiles
    {
        private static Effect CompiledEffect_draw_grid_true_solid_blend_flag_true;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_Texture;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_size;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_dxdy;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_Texture;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_size;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_dxdy;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_draw_grid_true_solid_blend_flag_false;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_Texture;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_size;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_dxdy;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_Texture;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_size;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_dxdy;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_draw_grid_false_solid_blend_flag_true;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_Texture;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_size;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_dxdy;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_Texture;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_size;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_dxdy;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_draw_grid_false_solid_blend_flag_false;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_Texture;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_size;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_dxdy;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_Texture;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_size;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_dxdy;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_dxdy;

        public static void Init()
        {
            CompiledEffect_draw_grid_true_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTiles_draw_grid=true_solid_blend_flag=true");
            param_draw_grid_true_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_draw_grid_true_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_Texture = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_Tiles_Texture"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_size = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_Tiles_size"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_dxdy = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_Tiles_dxdy"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_Texture = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_Texture_Texture"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_size = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_Texture_size"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_dxdy = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_Texture_dxdy"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_draw_grid_true_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_draw_grid_true_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTiles_draw_grid=true_solid_blend_flag=false");
            param_draw_grid_true_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_draw_grid_true_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_Texture = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_Tiles_Texture"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_size = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_Tiles_size"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_dxdy = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_Tiles_dxdy"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_Texture = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_Texture_Texture"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_size = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_Texture_size"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_dxdy = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_Texture_dxdy"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_draw_grid_true_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_draw_grid_false_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTiles_draw_grid=false_solid_blend_flag=true");
            param_draw_grid_false_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_draw_grid_false_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_Texture = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_Tiles_Texture"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_size = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_Tiles_size"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_dxdy = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_Tiles_dxdy"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_Texture = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_Texture_Texture"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_size = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_Texture_size"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_dxdy = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_Texture_dxdy"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_draw_grid_false_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_draw_grid_false_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTiles_draw_grid=false_solid_blend_flag=false");
            param_draw_grid_false_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_draw_grid_false_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_Texture = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_Tiles_Texture"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_size = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_Tiles_size"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_dxdy = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_Tiles_dxdy"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_Texture = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_Texture_Texture"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_size = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_Texture_size"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_dxdy = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_Texture_dxdy"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_draw_grid_false_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool draw_grid, bool solid_blend_flag, float solid_blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Tiles, Texture, draw_grid, solid_blend_flag, solid_blend);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool draw_grid, bool solid_blend_flag, float solid_blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Tiles, Texture, draw_grid, solid_blend_flag, solid_blend);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool draw_grid, bool solid_blend_flag, float solid_blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Tiles, Texture, draw_grid, solid_blend_flag, solid_blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool draw_grid, bool solid_blend_flag, float solid_blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Tiles, Texture, draw_grid, solid_blend_flag, solid_blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool draw_grid, bool solid_blend_flag, float solid_blend)
        {
            if (draw_grid == true && solid_blend_flag == true)
            {
                if (param_draw_grid_true_solid_blend_flag_true_vs_param_cameraPos != null) param_draw_grid_true_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_draw_grid_true_solid_blend_flag_true_vs_param_cameraAspect != null) param_draw_grid_true_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_Texture != null) param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_size != null) param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_dxdy != null) param_draw_grid_true_solid_blend_flag_true_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_Texture != null) param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_size != null) param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_dxdy != null) param_draw_grid_true_solid_blend_flag_true_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_solid_blend != null) param_draw_grid_true_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_size != null) param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_draw_grid_true_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_draw_grid_true_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (draw_grid == true && solid_blend_flag == false)
            {
                if (param_draw_grid_true_solid_blend_flag_false_vs_param_cameraPos != null) param_draw_grid_true_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_draw_grid_true_solid_blend_flag_false_vs_param_cameraAspect != null) param_draw_grid_true_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_Texture != null) param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_size != null) param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_dxdy != null) param_draw_grid_true_solid_blend_flag_false_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_Texture != null) param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_size != null) param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_dxdy != null) param_draw_grid_true_solid_blend_flag_false_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_solid_blend != null) param_draw_grid_true_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_size != null) param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_draw_grid_true_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_draw_grid_true_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (draw_grid == false && solid_blend_flag == true)
            {
                if (param_draw_grid_false_solid_blend_flag_true_vs_param_cameraPos != null) param_draw_grid_false_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_draw_grid_false_solid_blend_flag_true_vs_param_cameraAspect != null) param_draw_grid_false_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_Texture != null) param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_size != null) param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_dxdy != null) param_draw_grid_false_solid_blend_flag_true_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_Texture != null) param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_size != null) param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_dxdy != null) param_draw_grid_false_solid_blend_flag_true_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_solid_blend != null) param_draw_grid_false_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_size != null) param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_draw_grid_false_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_draw_grid_false_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (draw_grid == false && solid_blend_flag == false)
            {
                if (param_draw_grid_false_solid_blend_flag_false_vs_param_cameraPos != null) param_draw_grid_false_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_draw_grid_false_solid_blend_flag_false_vs_param_cameraAspect != null) param_draw_grid_false_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_Texture != null) param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_size != null) param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_dxdy != null) param_draw_grid_false_solid_blend_flag_false_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_Texture != null) param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_size != null) param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_dxdy != null) param_draw_grid_false_solid_blend_flag_false_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_solid_blend != null) param_draw_grid_false_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_size != null) param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_draw_grid_false_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_draw_grid_false_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}



namespace Game
{
    public partial class DrawOutsideTiles
    {
        private static Effect CompiledEffect_solid_blend_flag_true;
        private static EffectParameter param_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_solid_blend_flag_true_fs_param_Tiles_Texture;
        private static EffectParameter param_solid_blend_flag_true_fs_param_Tiles_size;
        private static EffectParameter param_solid_blend_flag_true_fs_param_Tiles_dxdy;
        private static EffectParameter param_solid_blend_flag_true_fs_param_Texture_Texture;
        private static EffectParameter param_solid_blend_flag_true_fs_param_Texture_size;
        private static EffectParameter param_solid_blend_flag_true_fs_param_Texture_dxdy;
        private static EffectParameter param_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_solid_blend_flag_false;
        private static EffectParameter param_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_solid_blend_flag_false_fs_param_Tiles_Texture;
        private static EffectParameter param_solid_blend_flag_false_fs_param_Tiles_size;
        private static EffectParameter param_solid_blend_flag_false_fs_param_Tiles_dxdy;
        private static EffectParameter param_solid_blend_flag_false_fs_param_Texture_Texture;
        private static EffectParameter param_solid_blend_flag_false_fs_param_Texture_size;
        private static EffectParameter param_solid_blend_flag_false_fs_param_Texture_dxdy;
        private static EffectParameter param_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_solid_blend_flag_false_fs_param_FarColor_dxdy;

        public static void Init()
        {
            CompiledEffect_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawOutsideTiles_solid_blend_flag=true");
            param_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_solid_blend_flag_true_fs_param_Tiles_Texture = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_Tiles_Texture"];
            param_solid_blend_flag_true_fs_param_Tiles_size = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_Tiles_size"];
            param_solid_blend_flag_true_fs_param_Tiles_dxdy = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_Tiles_dxdy"];
            param_solid_blend_flag_true_fs_param_Texture_Texture = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_Texture_Texture"];
            param_solid_blend_flag_true_fs_param_Texture_size = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_Texture_size"];
            param_solid_blend_flag_true_fs_param_Texture_dxdy = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_Texture_dxdy"];
            param_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawOutsideTiles_solid_blend_flag=false");
            param_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_solid_blend_flag_false_fs_param_Tiles_Texture = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_Tiles_Texture"];
            param_solid_blend_flag_false_fs_param_Tiles_size = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_Tiles_size"];
            param_solid_blend_flag_false_fs_param_Tiles_dxdy = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_Tiles_dxdy"];
            param_solid_blend_flag_false_fs_param_Texture_Texture = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_Texture_Texture"];
            param_solid_blend_flag_false_fs_param_Texture_size = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_Texture_size"];
            param_solid_blend_flag_false_fs_param_Texture_dxdy = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_Texture_dxdy"];
            param_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool solid_blend_flag, float solid_blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Tiles, Texture, solid_blend_flag, solid_blend);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool solid_blend_flag, float solid_blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Tiles, Texture, solid_blend_flag, solid_blend);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool solid_blend_flag, float solid_blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Tiles, Texture, solid_blend_flag, solid_blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool solid_blend_flag, float solid_blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Tiles, Texture, solid_blend_flag, solid_blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Tiles, Texture2D Texture, bool solid_blend_flag, float solid_blend)
        {
            if (solid_blend_flag == true)
            {
                if (param_solid_blend_flag_true_vs_param_cameraPos != null) param_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_solid_blend_flag_true_vs_param_cameraAspect != null) param_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_solid_blend_flag_true_fs_param_Tiles_Texture != null) param_solid_blend_flag_true_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_solid_blend_flag_true_fs_param_Tiles_size != null) param_solid_blend_flag_true_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_solid_blend_flag_true_fs_param_Tiles_dxdy != null) param_solid_blend_flag_true_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_solid_blend_flag_true_fs_param_Texture_Texture != null) param_solid_blend_flag_true_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_solid_blend_flag_true_fs_param_Texture_size != null) param_solid_blend_flag_true_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_solid_blend_flag_true_fs_param_Texture_dxdy != null) param_solid_blend_flag_true_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_solid_blend_flag_true_fs_param_solid_blend != null) param_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_solid_blend_flag_true_fs_param_FarColor_size != null) param_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (solid_blend_flag == false)
            {
                if (param_solid_blend_flag_false_vs_param_cameraPos != null) param_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_solid_blend_flag_false_vs_param_cameraAspect != null) param_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_solid_blend_flag_false_fs_param_Tiles_Texture != null) param_solid_blend_flag_false_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_solid_blend_flag_false_fs_param_Tiles_size != null) param_solid_blend_flag_false_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_solid_blend_flag_false_fs_param_Tiles_dxdy != null) param_solid_blend_flag_false_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_solid_blend_flag_false_fs_param_Texture_Texture != null) param_solid_blend_flag_false_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_solid_blend_flag_false_fs_param_Texture_size != null) param_solid_blend_flag_false_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_solid_blend_flag_false_fs_param_Texture_dxdy != null) param_solid_blend_flag_false_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_solid_blend_flag_false_fs_param_solid_blend != null) param_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_solid_blend_flag_false_fs_param_FarColor_size != null) param_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}



namespace Game
{
    public partial class Geodesic_Outline
    {
        private static Effect CompiledEffect_Anti_true;
        private static EffectParameter param_Anti_true_fs_param_Tiles_Texture;
        private static EffectParameter param_Anti_true_fs_param_Tiles_size;
        private static EffectParameter param_Anti_true_fs_param_Tiles_dxdy;
        private static Effect CompiledEffect_Anti_false;
        private static EffectParameter param_Anti_false_fs_param_Tiles_Texture;
        private static EffectParameter param_Anti_false_fs_param_Tiles_size;
        private static EffectParameter param_Anti_false_fs_param_Tiles_dxdy;

        public static void Init()
        {
            CompiledEffect_Anti_true = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Outline_Anti=true");
            param_Anti_true_fs_param_Tiles_Texture = CompiledEffect_Anti_true.Parameters["fs_param_Tiles_Texture"];
            param_Anti_true_fs_param_Tiles_size = CompiledEffect_Anti_true.Parameters["fs_param_Tiles_size"];
            param_Anti_true_fs_param_Tiles_dxdy = CompiledEffect_Anti_true.Parameters["fs_param_Tiles_dxdy"];
            CompiledEffect_Anti_false = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Outline_Anti=false");
            param_Anti_false_fs_param_Tiles_Texture = CompiledEffect_Anti_false.Parameters["fs_param_Tiles_Texture"];
            param_Anti_false_fs_param_Tiles_size = CompiledEffect_Anti_false.Parameters["fs_param_Tiles_size"];
            param_Anti_false_fs_param_Tiles_dxdy = CompiledEffect_Anti_false.Parameters["fs_param_Tiles_dxdy"];
        }
        public static void Apply(Texture2D Tiles, bool Anti, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Anti);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, bool Anti, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Anti);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, bool Anti, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Anti);
        }
        public static void Using(Texture2D Tiles, bool Anti, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Anti);
        }
        public static void Using(Texture2D Tiles, bool Anti)
        {
            if (Anti == true)
            {
                if (param_Anti_true_fs_param_Tiles_Texture != null) param_Anti_true_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_Anti_true_fs_param_Tiles_size != null) param_Anti_true_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_Anti_true_fs_param_Tiles_dxdy != null) param_Anti_true_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                CompiledEffect_Anti_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (Anti == false)
            {
                if (param_Anti_false_fs_param_Tiles_Texture != null) param_Anti_false_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_Anti_false_fs_param_Tiles_size != null) param_Anti_false_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_Anti_false_fs_param_Tiles_dxdy != null) param_Anti_false_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                CompiledEffect_Anti_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}



namespace Game
{
    public partial class Geodesic_OutlineCleanup
    {
        private static Effect CompiledEffect_Anti_true;
        private static EffectParameter param_Anti_true_fs_param_Tiles_Texture;
        private static EffectParameter param_Anti_true_fs_param_Tiles_size;
        private static EffectParameter param_Anti_true_fs_param_Tiles_dxdy;
        private static EffectParameter param_Anti_true_fs_param_Geo_Texture;
        private static EffectParameter param_Anti_true_fs_param_Geo_size;
        private static EffectParameter param_Anti_true_fs_param_Geo_dxdy;
        private static Effect CompiledEffect_Anti_false;
        private static EffectParameter param_Anti_false_fs_param_Tiles_Texture;
        private static EffectParameter param_Anti_false_fs_param_Tiles_size;
        private static EffectParameter param_Anti_false_fs_param_Tiles_dxdy;
        private static EffectParameter param_Anti_false_fs_param_Geo_Texture;
        private static EffectParameter param_Anti_false_fs_param_Geo_size;
        private static EffectParameter param_Anti_false_fs_param_Geo_dxdy;

        public static void Init()
        {
            CompiledEffect_Anti_true = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_OutlineCleanup_Anti=true");
            param_Anti_true_fs_param_Tiles_Texture = CompiledEffect_Anti_true.Parameters["fs_param_Tiles_Texture"];
            param_Anti_true_fs_param_Tiles_size = CompiledEffect_Anti_true.Parameters["fs_param_Tiles_size"];
            param_Anti_true_fs_param_Tiles_dxdy = CompiledEffect_Anti_true.Parameters["fs_param_Tiles_dxdy"];
            param_Anti_true_fs_param_Geo_Texture = CompiledEffect_Anti_true.Parameters["fs_param_Geo_Texture"];
            param_Anti_true_fs_param_Geo_size = CompiledEffect_Anti_true.Parameters["fs_param_Geo_size"];
            param_Anti_true_fs_param_Geo_dxdy = CompiledEffect_Anti_true.Parameters["fs_param_Geo_dxdy"];
            CompiledEffect_Anti_false = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_OutlineCleanup_Anti=false");
            param_Anti_false_fs_param_Tiles_Texture = CompiledEffect_Anti_false.Parameters["fs_param_Tiles_Texture"];
            param_Anti_false_fs_param_Tiles_size = CompiledEffect_Anti_false.Parameters["fs_param_Tiles_size"];
            param_Anti_false_fs_param_Tiles_dxdy = CompiledEffect_Anti_false.Parameters["fs_param_Tiles_dxdy"];
            param_Anti_false_fs_param_Geo_Texture = CompiledEffect_Anti_false.Parameters["fs_param_Geo_Texture"];
            param_Anti_false_fs_param_Geo_size = CompiledEffect_Anti_false.Parameters["fs_param_Geo_size"];
            param_Anti_false_fs_param_Geo_dxdy = CompiledEffect_Anti_false.Parameters["fs_param_Geo_dxdy"];
        }
        public static void Apply(Texture2D Tiles, Texture2D Geo, bool Anti, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Geo, Anti);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, Texture2D Geo, bool Anti, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Geo, Anti);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, bool Anti, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Geo, Anti);
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, bool Anti, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Geo, Anti);
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, bool Anti)
        {
            if (Anti == true)
            {
                if (param_Anti_true_fs_param_Tiles_Texture != null) param_Anti_true_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_Anti_true_fs_param_Tiles_size != null) param_Anti_true_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_Anti_true_fs_param_Tiles_dxdy != null) param_Anti_true_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_Anti_true_fs_param_Geo_Texture != null) param_Anti_true_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_Anti_true_fs_param_Geo_size != null) param_Anti_true_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_Anti_true_fs_param_Geo_dxdy != null) param_Anti_true_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                CompiledEffect_Anti_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (Anti == false)
            {
                if (param_Anti_false_fs_param_Tiles_Texture != null) param_Anti_false_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_Anti_false_fs_param_Tiles_size != null) param_Anti_false_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_Anti_false_fs_param_Tiles_dxdy != null) param_Anti_false_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_Anti_false_fs_param_Geo_Texture != null) param_Anti_false_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_Anti_false_fs_param_Geo_size != null) param_Anti_false_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_Anti_false_fs_param_Geo_dxdy != null) param_Anti_false_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                CompiledEffect_Anti_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class Geodesic_StorePos
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_StorePos");
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
        }
        public static void Using(Texture2D Geo)
        {
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Geodesic_ExtremityPropagation
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_ExtremityPropagation");
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
        }
        public static void Using(Texture2D Geo)
        {
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Geodesic_SetGeoId
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_SetGeoId");
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
        }
        public static void Using(Texture2D Geo)
        {
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Geodesic_PolarDistance
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;
        private static EffectParameter param_fs_param_Info_Texture;
        private static EffectParameter param_fs_param_Info_size;
        private static EffectParameter param_fs_param_Info_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_PolarDistance");
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
            param_fs_param_Info_Texture = CompiledEffect.Parameters["fs_param_Info_Texture"];
            param_fs_param_Info_size = CompiledEffect.Parameters["fs_param_Info_size"];
            param_fs_param_Info_dxdy = CompiledEffect.Parameters["fs_param_Info_dxdy"];
        }
        public static void Apply(Texture2D Geo, Texture2D Info, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo, Info);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Geo, Texture2D Info, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo, Info);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Geo, Texture2D Info, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo, Info);
        }
        public static void Using(Texture2D Geo, Texture2D Info, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo, Info);
        }
        public static void Using(Texture2D Geo, Texture2D Info)
        {
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Info_Texture != null) param_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
            if (param_fs_param_Info_size != null) param_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
            if (param_fs_param_Info_dxdy != null) param_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Geodesic_SetCircumference
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;
        private static EffectParameter param_fs_param_Info_Texture;
        private static EffectParameter param_fs_param_Info_size;
        private static EffectParameter param_fs_param_Info_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_SetCircumference");
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
            param_fs_param_Info_Texture = CompiledEffect.Parameters["fs_param_Info_Texture"];
            param_fs_param_Info_size = CompiledEffect.Parameters["fs_param_Info_size"];
            param_fs_param_Info_dxdy = CompiledEffect.Parameters["fs_param_Info_dxdy"];
        }
        public static void Apply(Texture2D Geo, Texture2D Info, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo, Info);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Geo, Texture2D Info, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo, Info);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Geo, Texture2D Info, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo, Info);
        }
        public static void Using(Texture2D Geo, Texture2D Info, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo, Info);
        }
        public static void Using(Texture2D Geo, Texture2D Info)
        {
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Info_Texture != null) param_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
            if (param_fs_param_Info_size != null) param_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
            if (param_fs_param_Info_dxdy != null) param_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}





namespace Game
{
    public partial class Geodesic_Polarity
    {
        private static Effect CompiledEffect_dir_0p003921569;
        private static EffectParameter param_dir_0p003921569_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p003921569_fs_param_Dirward_dxdy;
        private static EffectParameter param_dir_0p003921569_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_Geo_size;
        private static EffectParameter param_dir_0p003921569_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p003921569_fs_param_ShiftedGeo_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_ShiftedGeo_size;
        private static EffectParameter param_dir_0p003921569_fs_param_ShiftedGeo_dxdy;
        private static EffectParameter param_dir_0p003921569_fs_param_Info_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_Info_size;
        private static EffectParameter param_dir_0p003921569_fs_param_Info_dxdy;
        private static EffectParameter param_dir_0p003921569_fs_param_ShiftedInfo_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_ShiftedInfo_size;
        private static EffectParameter param_dir_0p003921569_fs_param_ShiftedInfo_dxdy;
        private static Effect CompiledEffect_dir_0p007843138;
        private static EffectParameter param_dir_0p007843138_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p007843138_fs_param_Dirward_dxdy;
        private static EffectParameter param_dir_0p007843138_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_Geo_size;
        private static EffectParameter param_dir_0p007843138_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p007843138_fs_param_ShiftedGeo_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_ShiftedGeo_size;
        private static EffectParameter param_dir_0p007843138_fs_param_ShiftedGeo_dxdy;
        private static EffectParameter param_dir_0p007843138_fs_param_Info_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_Info_size;
        private static EffectParameter param_dir_0p007843138_fs_param_Info_dxdy;
        private static EffectParameter param_dir_0p007843138_fs_param_ShiftedInfo_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_ShiftedInfo_size;
        private static EffectParameter param_dir_0p007843138_fs_param_ShiftedInfo_dxdy;
        private static Effect CompiledEffect_dir_0p01176471;
        private static EffectParameter param_dir_0p01176471_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p01176471_fs_param_Dirward_dxdy;
        private static EffectParameter param_dir_0p01176471_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_Geo_size;
        private static EffectParameter param_dir_0p01176471_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p01176471_fs_param_ShiftedGeo_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_ShiftedGeo_size;
        private static EffectParameter param_dir_0p01176471_fs_param_ShiftedGeo_dxdy;
        private static EffectParameter param_dir_0p01176471_fs_param_Info_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_Info_size;
        private static EffectParameter param_dir_0p01176471_fs_param_Info_dxdy;
        private static EffectParameter param_dir_0p01176471_fs_param_ShiftedInfo_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_ShiftedInfo_size;
        private static EffectParameter param_dir_0p01176471_fs_param_ShiftedInfo_dxdy;
        private static Effect CompiledEffect_dir_0p01568628;
        private static EffectParameter param_dir_0p01568628_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p01568628_fs_param_Dirward_dxdy;
        private static EffectParameter param_dir_0p01568628_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_Geo_size;
        private static EffectParameter param_dir_0p01568628_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p01568628_fs_param_ShiftedGeo_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_ShiftedGeo_size;
        private static EffectParameter param_dir_0p01568628_fs_param_ShiftedGeo_dxdy;
        private static EffectParameter param_dir_0p01568628_fs_param_Info_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_Info_size;
        private static EffectParameter param_dir_0p01568628_fs_param_Info_dxdy;
        private static EffectParameter param_dir_0p01568628_fs_param_ShiftedInfo_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_ShiftedInfo_size;
        private static EffectParameter param_dir_0p01568628_fs_param_ShiftedInfo_dxdy;

        public static void Init()
        {
            CompiledEffect_dir_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Polarity_dir=0.003921569");
            param_dir_0p003921569_fs_param_Dirward_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p003921569_fs_param_Dirward_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_Dirward_size"];
            param_dir_0p003921569_fs_param_Dirward_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_Dirward_dxdy"];
            param_dir_0p003921569_fs_param_Geo_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_Geo_Texture"];
            param_dir_0p003921569_fs_param_Geo_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_Geo_size"];
            param_dir_0p003921569_fs_param_Geo_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p003921569_fs_param_ShiftedGeo_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_ShiftedGeo_Texture"];
            param_dir_0p003921569_fs_param_ShiftedGeo_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_ShiftedGeo_size"];
            param_dir_0p003921569_fs_param_ShiftedGeo_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_ShiftedGeo_dxdy"];
            param_dir_0p003921569_fs_param_Info_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_Info_Texture"];
            param_dir_0p003921569_fs_param_Info_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_Info_size"];
            param_dir_0p003921569_fs_param_Info_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_Info_dxdy"];
            param_dir_0p003921569_fs_param_ShiftedInfo_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_ShiftedInfo_Texture"];
            param_dir_0p003921569_fs_param_ShiftedInfo_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_ShiftedInfo_size"];
            param_dir_0p003921569_fs_param_ShiftedInfo_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_ShiftedInfo_dxdy"];
            CompiledEffect_dir_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Polarity_dir=0.007843138");
            param_dir_0p007843138_fs_param_Dirward_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p007843138_fs_param_Dirward_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_Dirward_size"];
            param_dir_0p007843138_fs_param_Dirward_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_Dirward_dxdy"];
            param_dir_0p007843138_fs_param_Geo_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_Geo_Texture"];
            param_dir_0p007843138_fs_param_Geo_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_Geo_size"];
            param_dir_0p007843138_fs_param_Geo_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p007843138_fs_param_ShiftedGeo_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_ShiftedGeo_Texture"];
            param_dir_0p007843138_fs_param_ShiftedGeo_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_ShiftedGeo_size"];
            param_dir_0p007843138_fs_param_ShiftedGeo_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_ShiftedGeo_dxdy"];
            param_dir_0p007843138_fs_param_Info_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_Info_Texture"];
            param_dir_0p007843138_fs_param_Info_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_Info_size"];
            param_dir_0p007843138_fs_param_Info_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_Info_dxdy"];
            param_dir_0p007843138_fs_param_ShiftedInfo_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_ShiftedInfo_Texture"];
            param_dir_0p007843138_fs_param_ShiftedInfo_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_ShiftedInfo_size"];
            param_dir_0p007843138_fs_param_ShiftedInfo_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_ShiftedInfo_dxdy"];
            CompiledEffect_dir_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Polarity_dir=0.01176471");
            param_dir_0p01176471_fs_param_Dirward_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p01176471_fs_param_Dirward_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_Dirward_size"];
            param_dir_0p01176471_fs_param_Dirward_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_Dirward_dxdy"];
            param_dir_0p01176471_fs_param_Geo_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_Geo_Texture"];
            param_dir_0p01176471_fs_param_Geo_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_Geo_size"];
            param_dir_0p01176471_fs_param_Geo_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p01176471_fs_param_ShiftedGeo_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_ShiftedGeo_Texture"];
            param_dir_0p01176471_fs_param_ShiftedGeo_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_ShiftedGeo_size"];
            param_dir_0p01176471_fs_param_ShiftedGeo_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_ShiftedGeo_dxdy"];
            param_dir_0p01176471_fs_param_Info_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_Info_Texture"];
            param_dir_0p01176471_fs_param_Info_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_Info_size"];
            param_dir_0p01176471_fs_param_Info_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_Info_dxdy"];
            param_dir_0p01176471_fs_param_ShiftedInfo_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_ShiftedInfo_Texture"];
            param_dir_0p01176471_fs_param_ShiftedInfo_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_ShiftedInfo_size"];
            param_dir_0p01176471_fs_param_ShiftedInfo_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_ShiftedInfo_dxdy"];
            CompiledEffect_dir_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Polarity_dir=0.01568628");
            param_dir_0p01568628_fs_param_Dirward_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p01568628_fs_param_Dirward_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_Dirward_size"];
            param_dir_0p01568628_fs_param_Dirward_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_Dirward_dxdy"];
            param_dir_0p01568628_fs_param_Geo_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_Geo_Texture"];
            param_dir_0p01568628_fs_param_Geo_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_Geo_size"];
            param_dir_0p01568628_fs_param_Geo_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p01568628_fs_param_ShiftedGeo_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_ShiftedGeo_Texture"];
            param_dir_0p01568628_fs_param_ShiftedGeo_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_ShiftedGeo_size"];
            param_dir_0p01568628_fs_param_ShiftedGeo_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_ShiftedGeo_dxdy"];
            param_dir_0p01568628_fs_param_Info_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_Info_Texture"];
            param_dir_0p01568628_fs_param_Info_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_Info_size"];
            param_dir_0p01568628_fs_param_Info_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_Info_dxdy"];
            param_dir_0p01568628_fs_param_ShiftedInfo_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_ShiftedInfo_Texture"];
            param_dir_0p01568628_fs_param_ShiftedInfo_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_ShiftedInfo_size"];
            param_dir_0p01568628_fs_param_ShiftedInfo_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_ShiftedInfo_dxdy"];
        }
        public static void Apply(Texture2D Dirward, Texture2D Geo, Texture2D ShiftedGeo, Texture2D Info, Texture2D ShiftedInfo, float dir, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Dirward, Geo, ShiftedGeo, Info, ShiftedInfo, dir);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Dirward, Texture2D Geo, Texture2D ShiftedGeo, Texture2D Info, Texture2D ShiftedInfo, float dir, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Dirward, Geo, ShiftedGeo, Info, ShiftedInfo, dir);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Dirward, Texture2D Geo, Texture2D ShiftedGeo, Texture2D Info, Texture2D ShiftedInfo, float dir, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Dirward, Geo, ShiftedGeo, Info, ShiftedInfo, dir);
        }
        public static void Using(Texture2D Dirward, Texture2D Geo, Texture2D ShiftedGeo, Texture2D Info, Texture2D ShiftedInfo, float dir, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Dirward, Geo, ShiftedGeo, Info, ShiftedInfo, dir);
        }
        public static void Using(Texture2D Dirward, Texture2D Geo, Texture2D ShiftedGeo, Texture2D Info, Texture2D ShiftedInfo, float dir)
        {
            if (abs((float)(dir - 0.003921569)) < .0019)
            {
                if (param_dir_0p003921569_fs_param_Dirward_Texture != null) param_dir_0p003921569_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p003921569_fs_param_Dirward_size != null) param_dir_0p003921569_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p003921569_fs_param_Dirward_dxdy != null) param_dir_0p003921569_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p003921569_fs_param_Geo_Texture != null) param_dir_0p003921569_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p003921569_fs_param_Geo_size != null) param_dir_0p003921569_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p003921569_fs_param_Geo_dxdy != null) param_dir_0p003921569_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p003921569_fs_param_ShiftedGeo_Texture != null) param_dir_0p003921569_fs_param_ShiftedGeo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedGeo));
                if (param_dir_0p003921569_fs_param_ShiftedGeo_size != null) param_dir_0p003921569_fs_param_ShiftedGeo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p003921569_fs_param_ShiftedGeo_dxdy != null) param_dir_0p003921569_fs_param_ShiftedGeo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p003921569_fs_param_Info_Texture != null) param_dir_0p003921569_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
                if (param_dir_0p003921569_fs_param_Info_size != null) param_dir_0p003921569_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
                if (param_dir_0p003921569_fs_param_Info_dxdy != null) param_dir_0p003921569_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
                if (param_dir_0p003921569_fs_param_ShiftedInfo_Texture != null) param_dir_0p003921569_fs_param_ShiftedInfo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedInfo));
                if (param_dir_0p003921569_fs_param_ShiftedInfo_size != null) param_dir_0p003921569_fs_param_ShiftedInfo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                if (param_dir_0p003921569_fs_param_ShiftedInfo_dxdy != null) param_dir_0p003921569_fs_param_ShiftedInfo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                CompiledEffect_dir_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.007843138)) < .0019)
            {
                if (param_dir_0p007843138_fs_param_Dirward_Texture != null) param_dir_0p007843138_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p007843138_fs_param_Dirward_size != null) param_dir_0p007843138_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p007843138_fs_param_Dirward_dxdy != null) param_dir_0p007843138_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p007843138_fs_param_Geo_Texture != null) param_dir_0p007843138_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p007843138_fs_param_Geo_size != null) param_dir_0p007843138_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p007843138_fs_param_Geo_dxdy != null) param_dir_0p007843138_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p007843138_fs_param_ShiftedGeo_Texture != null) param_dir_0p007843138_fs_param_ShiftedGeo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedGeo));
                if (param_dir_0p007843138_fs_param_ShiftedGeo_size != null) param_dir_0p007843138_fs_param_ShiftedGeo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p007843138_fs_param_ShiftedGeo_dxdy != null) param_dir_0p007843138_fs_param_ShiftedGeo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p007843138_fs_param_Info_Texture != null) param_dir_0p007843138_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
                if (param_dir_0p007843138_fs_param_Info_size != null) param_dir_0p007843138_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
                if (param_dir_0p007843138_fs_param_Info_dxdy != null) param_dir_0p007843138_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
                if (param_dir_0p007843138_fs_param_ShiftedInfo_Texture != null) param_dir_0p007843138_fs_param_ShiftedInfo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedInfo));
                if (param_dir_0p007843138_fs_param_ShiftedInfo_size != null) param_dir_0p007843138_fs_param_ShiftedInfo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                if (param_dir_0p007843138_fs_param_ShiftedInfo_dxdy != null) param_dir_0p007843138_fs_param_ShiftedInfo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                CompiledEffect_dir_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.01176471)) < .0019)
            {
                if (param_dir_0p01176471_fs_param_Dirward_Texture != null) param_dir_0p01176471_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p01176471_fs_param_Dirward_size != null) param_dir_0p01176471_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p01176471_fs_param_Dirward_dxdy != null) param_dir_0p01176471_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p01176471_fs_param_Geo_Texture != null) param_dir_0p01176471_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p01176471_fs_param_Geo_size != null) param_dir_0p01176471_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01176471_fs_param_Geo_dxdy != null) param_dir_0p01176471_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01176471_fs_param_ShiftedGeo_Texture != null) param_dir_0p01176471_fs_param_ShiftedGeo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedGeo));
                if (param_dir_0p01176471_fs_param_ShiftedGeo_size != null) param_dir_0p01176471_fs_param_ShiftedGeo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p01176471_fs_param_ShiftedGeo_dxdy != null) param_dir_0p01176471_fs_param_ShiftedGeo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p01176471_fs_param_Info_Texture != null) param_dir_0p01176471_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
                if (param_dir_0p01176471_fs_param_Info_size != null) param_dir_0p01176471_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
                if (param_dir_0p01176471_fs_param_Info_dxdy != null) param_dir_0p01176471_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
                if (param_dir_0p01176471_fs_param_ShiftedInfo_Texture != null) param_dir_0p01176471_fs_param_ShiftedInfo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedInfo));
                if (param_dir_0p01176471_fs_param_ShiftedInfo_size != null) param_dir_0p01176471_fs_param_ShiftedInfo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                if (param_dir_0p01176471_fs_param_ShiftedInfo_dxdy != null) param_dir_0p01176471_fs_param_ShiftedInfo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                CompiledEffect_dir_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.01568628)) < .0019)
            {
                if (param_dir_0p01568628_fs_param_Dirward_Texture != null) param_dir_0p01568628_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p01568628_fs_param_Dirward_size != null) param_dir_0p01568628_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p01568628_fs_param_Dirward_dxdy != null) param_dir_0p01568628_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p01568628_fs_param_Geo_Texture != null) param_dir_0p01568628_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p01568628_fs_param_Geo_size != null) param_dir_0p01568628_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01568628_fs_param_Geo_dxdy != null) param_dir_0p01568628_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01568628_fs_param_ShiftedGeo_Texture != null) param_dir_0p01568628_fs_param_ShiftedGeo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedGeo));
                if (param_dir_0p01568628_fs_param_ShiftedGeo_size != null) param_dir_0p01568628_fs_param_ShiftedGeo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p01568628_fs_param_ShiftedGeo_dxdy != null) param_dir_0p01568628_fs_param_ShiftedGeo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedGeo.Width, ShiftedGeo.Height)));
                if (param_dir_0p01568628_fs_param_Info_Texture != null) param_dir_0p01568628_fs_param_Info_Texture.SetValue(FragSharpMarshal.Marshal(Info));
                if (param_dir_0p01568628_fs_param_Info_size != null) param_dir_0p01568628_fs_param_Info_size.SetValue(FragSharpMarshal.Marshal(vec(Info.Width, Info.Height)));
                if (param_dir_0p01568628_fs_param_Info_dxdy != null) param_dir_0p01568628_fs_param_Info_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Info.Width, Info.Height)));
                if (param_dir_0p01568628_fs_param_ShiftedInfo_Texture != null) param_dir_0p01568628_fs_param_ShiftedInfo_Texture.SetValue(FragSharpMarshal.Marshal(ShiftedInfo));
                if (param_dir_0p01568628_fs_param_ShiftedInfo_size != null) param_dir_0p01568628_fs_param_ShiftedInfo_size.SetValue(FragSharpMarshal.Marshal(vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                if (param_dir_0p01568628_fs_param_ShiftedInfo_dxdy != null) param_dir_0p01568628_fs_param_ShiftedInfo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShiftedInfo.Width, ShiftedInfo.Height)));
                CompiledEffect_dir_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class Geodesic_FillMissingPolarity
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Dirward_Texture;
        private static EffectParameter param_fs_param_Dirward_size;
        private static EffectParameter param_fs_param_Dirward_dxdy;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_FillMissingPolarity");
            param_fs_param_Dirward_Texture = CompiledEffect.Parameters["fs_param_Dirward_Texture"];
            param_fs_param_Dirward_size = CompiledEffect.Parameters["fs_param_Dirward_size"];
            param_fs_param_Dirward_dxdy = CompiledEffect.Parameters["fs_param_Dirward_dxdy"];
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
        }
        public static void Apply(Texture2D Dirward, Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Dirward, Geo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Dirward, Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Dirward, Geo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Dirward, Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Dirward, Geo);
        }
        public static void Using(Texture2D Dirward, Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Dirward, Geo);
        }
        public static void Using(Texture2D Dirward, Texture2D Geo)
        {
            if (param_fs_param_Dirward_Texture != null) param_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
            if (param_fs_param_Dirward_size != null) param_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
            if (param_fs_param_Dirward_dxdy != null) param_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Geodesic_ClearImportance
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Dirward_Texture;
        private static EffectParameter param_fs_param_Dirward_size;
        private static EffectParameter param_fs_param_Dirward_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_ClearImportance");
            param_fs_param_Dirward_Texture = CompiledEffect.Parameters["fs_param_Dirward_Texture"];
            param_fs_param_Dirward_size = CompiledEffect.Parameters["fs_param_Dirward_size"];
            param_fs_param_Dirward_dxdy = CompiledEffect.Parameters["fs_param_Dirward_dxdy"];
        }
        public static void Apply(Texture2D Dirward, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Dirward);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Dirward, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Dirward);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Dirward, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Dirward);
        }
        public static void Using(Texture2D Dirward, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Dirward);
        }
        public static void Using(Texture2D Dirward)
        {
            if (param_fs_param_Dirward_Texture != null) param_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
            if (param_fs_param_Dirward_size != null) param_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
            if (param_fs_param_Dirward_dxdy != null) param_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}





namespace Game
{
    public partial class Geodesic_DirwardExtend
    {
        private static Effect CompiledEffect_dir_0p003921569;
        private static EffectParameter param_dir_0p003921569_fs_param_Tiles_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_Tiles_size;
        private static EffectParameter param_dir_0p003921569_fs_param_Tiles_dxdy;
        private static EffectParameter param_dir_0p003921569_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_Geo_size;
        private static EffectParameter param_dir_0p003921569_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p003921569_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p003921569_fs_param_Dirward_dxdy;
        private static Effect CompiledEffect_dir_0p007843138;
        private static EffectParameter param_dir_0p007843138_fs_param_Tiles_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_Tiles_size;
        private static EffectParameter param_dir_0p007843138_fs_param_Tiles_dxdy;
        private static EffectParameter param_dir_0p007843138_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_Geo_size;
        private static EffectParameter param_dir_0p007843138_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p007843138_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p007843138_fs_param_Dirward_dxdy;
        private static Effect CompiledEffect_dir_0p01176471;
        private static EffectParameter param_dir_0p01176471_fs_param_Tiles_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_Tiles_size;
        private static EffectParameter param_dir_0p01176471_fs_param_Tiles_dxdy;
        private static EffectParameter param_dir_0p01176471_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_Geo_size;
        private static EffectParameter param_dir_0p01176471_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p01176471_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p01176471_fs_param_Dirward_dxdy;
        private static Effect CompiledEffect_dir_0p01568628;
        private static EffectParameter param_dir_0p01568628_fs_param_Tiles_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_Tiles_size;
        private static EffectParameter param_dir_0p01568628_fs_param_Tiles_dxdy;
        private static EffectParameter param_dir_0p01568628_fs_param_Geo_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_Geo_size;
        private static EffectParameter param_dir_0p01568628_fs_param_Geo_dxdy;
        private static EffectParameter param_dir_0p01568628_fs_param_Dirward_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_Dirward_size;
        private static EffectParameter param_dir_0p01568628_fs_param_Dirward_dxdy;

        public static void Init()
        {
            CompiledEffect_dir_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_DirwardExtend_dir=0.003921569");
            param_dir_0p003921569_fs_param_Tiles_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_Tiles_Texture"];
            param_dir_0p003921569_fs_param_Tiles_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_Tiles_size"];
            param_dir_0p003921569_fs_param_Tiles_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_Tiles_dxdy"];
            param_dir_0p003921569_fs_param_Geo_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_Geo_Texture"];
            param_dir_0p003921569_fs_param_Geo_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_Geo_size"];
            param_dir_0p003921569_fs_param_Geo_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p003921569_fs_param_Dirward_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p003921569_fs_param_Dirward_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_Dirward_size"];
            param_dir_0p003921569_fs_param_Dirward_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_Dirward_dxdy"];
            CompiledEffect_dir_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_DirwardExtend_dir=0.007843138");
            param_dir_0p007843138_fs_param_Tiles_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_Tiles_Texture"];
            param_dir_0p007843138_fs_param_Tiles_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_Tiles_size"];
            param_dir_0p007843138_fs_param_Tiles_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_Tiles_dxdy"];
            param_dir_0p007843138_fs_param_Geo_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_Geo_Texture"];
            param_dir_0p007843138_fs_param_Geo_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_Geo_size"];
            param_dir_0p007843138_fs_param_Geo_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p007843138_fs_param_Dirward_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p007843138_fs_param_Dirward_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_Dirward_size"];
            param_dir_0p007843138_fs_param_Dirward_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_Dirward_dxdy"];
            CompiledEffect_dir_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_DirwardExtend_dir=0.01176471");
            param_dir_0p01176471_fs_param_Tiles_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_Tiles_Texture"];
            param_dir_0p01176471_fs_param_Tiles_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_Tiles_size"];
            param_dir_0p01176471_fs_param_Tiles_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_Tiles_dxdy"];
            param_dir_0p01176471_fs_param_Geo_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_Geo_Texture"];
            param_dir_0p01176471_fs_param_Geo_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_Geo_size"];
            param_dir_0p01176471_fs_param_Geo_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p01176471_fs_param_Dirward_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p01176471_fs_param_Dirward_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_Dirward_size"];
            param_dir_0p01176471_fs_param_Dirward_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_Dirward_dxdy"];
            CompiledEffect_dir_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_DirwardExtend_dir=0.01568628");
            param_dir_0p01568628_fs_param_Tiles_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_Tiles_Texture"];
            param_dir_0p01568628_fs_param_Tiles_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_Tiles_size"];
            param_dir_0p01568628_fs_param_Tiles_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_Tiles_dxdy"];
            param_dir_0p01568628_fs_param_Geo_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_Geo_Texture"];
            param_dir_0p01568628_fs_param_Geo_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_Geo_size"];
            param_dir_0p01568628_fs_param_Geo_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_Geo_dxdy"];
            param_dir_0p01568628_fs_param_Dirward_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_Dirward_Texture"];
            param_dir_0p01568628_fs_param_Dirward_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_Dirward_size"];
            param_dir_0p01568628_fs_param_Dirward_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_Dirward_dxdy"];
        }
        public static void Apply(Texture2D Tiles, Texture2D Geo, Texture2D Dirward, float dir, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Geo, Dirward, dir);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, Texture2D Geo, Texture2D Dirward, float dir, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Geo, Dirward, dir);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, Texture2D Dirward, float dir, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Geo, Dirward, dir);
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, Texture2D Dirward, float dir, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Geo, Dirward, dir);
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, Texture2D Dirward, float dir)
        {
            if (abs((float)(dir - 0.003921569)) < .0019)
            {
                if (param_dir_0p003921569_fs_param_Tiles_Texture != null) param_dir_0p003921569_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_dir_0p003921569_fs_param_Tiles_size != null) param_dir_0p003921569_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p003921569_fs_param_Tiles_dxdy != null) param_dir_0p003921569_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p003921569_fs_param_Geo_Texture != null) param_dir_0p003921569_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p003921569_fs_param_Geo_size != null) param_dir_0p003921569_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p003921569_fs_param_Geo_dxdy != null) param_dir_0p003921569_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p003921569_fs_param_Dirward_Texture != null) param_dir_0p003921569_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p003921569_fs_param_Dirward_size != null) param_dir_0p003921569_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p003921569_fs_param_Dirward_dxdy != null) param_dir_0p003921569_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                CompiledEffect_dir_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.007843138)) < .0019)
            {
                if (param_dir_0p007843138_fs_param_Tiles_Texture != null) param_dir_0p007843138_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_dir_0p007843138_fs_param_Tiles_size != null) param_dir_0p007843138_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p007843138_fs_param_Tiles_dxdy != null) param_dir_0p007843138_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p007843138_fs_param_Geo_Texture != null) param_dir_0p007843138_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p007843138_fs_param_Geo_size != null) param_dir_0p007843138_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p007843138_fs_param_Geo_dxdy != null) param_dir_0p007843138_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p007843138_fs_param_Dirward_Texture != null) param_dir_0p007843138_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p007843138_fs_param_Dirward_size != null) param_dir_0p007843138_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p007843138_fs_param_Dirward_dxdy != null) param_dir_0p007843138_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                CompiledEffect_dir_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.01176471)) < .0019)
            {
                if (param_dir_0p01176471_fs_param_Tiles_Texture != null) param_dir_0p01176471_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_dir_0p01176471_fs_param_Tiles_size != null) param_dir_0p01176471_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p01176471_fs_param_Tiles_dxdy != null) param_dir_0p01176471_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p01176471_fs_param_Geo_Texture != null) param_dir_0p01176471_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p01176471_fs_param_Geo_size != null) param_dir_0p01176471_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01176471_fs_param_Geo_dxdy != null) param_dir_0p01176471_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01176471_fs_param_Dirward_Texture != null) param_dir_0p01176471_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p01176471_fs_param_Dirward_size != null) param_dir_0p01176471_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p01176471_fs_param_Dirward_dxdy != null) param_dir_0p01176471_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                CompiledEffect_dir_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.01568628)) < .0019)
            {
                if (param_dir_0p01568628_fs_param_Tiles_Texture != null) param_dir_0p01568628_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_dir_0p01568628_fs_param_Tiles_size != null) param_dir_0p01568628_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p01568628_fs_param_Tiles_dxdy != null) param_dir_0p01568628_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_dir_0p01568628_fs_param_Geo_Texture != null) param_dir_0p01568628_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
                if (param_dir_0p01568628_fs_param_Geo_size != null) param_dir_0p01568628_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01568628_fs_param_Geo_dxdy != null) param_dir_0p01568628_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
                if (param_dir_0p01568628_fs_param_Dirward_Texture != null) param_dir_0p01568628_fs_param_Dirward_Texture.SetValue(FragSharpMarshal.Marshal(Dirward));
                if (param_dir_0p01568628_fs_param_Dirward_size != null) param_dir_0p01568628_fs_param_Dirward_size.SetValue(FragSharpMarshal.Marshal(vec(Dirward.Width, Dirward.Height)));
                if (param_dir_0p01568628_fs_param_Dirward_dxdy != null) param_dir_0p01568628_fs_param_Dirward_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Dirward.Width, Dirward.Height)));
                CompiledEffect_dir_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class Geodesic_ConvertToBlocking
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Tiles_Texture;
        private static EffectParameter param_fs_param_Tiles_size;
        private static EffectParameter param_fs_param_Tiles_dxdy;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_ConvertToBlocking");
            param_fs_param_Tiles_Texture = CompiledEffect.Parameters["fs_param_Tiles_Texture"];
            param_fs_param_Tiles_size = CompiledEffect.Parameters["fs_param_Tiles_size"];
            param_fs_param_Tiles_dxdy = CompiledEffect.Parameters["fs_param_Tiles_dxdy"];
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
        }
        public static void Apply(Texture2D Tiles, Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Geo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Geo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Geo);
        }
        public static void Using(Texture2D Tiles, Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Geo);
        }
        public static void Using(Texture2D Tiles, Texture2D Geo)
        {
            if (param_fs_param_Tiles_Texture != null) param_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
            if (param_fs_param_Tiles_size != null) param_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Tiles_dxdy != null) param_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Geodesic_Flatten
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;
        private static EffectParameter param_fs_param_OuterGeo_Texture;
        private static EffectParameter param_fs_param_OuterGeo_size;
        private static EffectParameter param_fs_param_OuterGeo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Flatten");
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
            param_fs_param_OuterGeo_Texture = CompiledEffect.Parameters["fs_param_OuterGeo_Texture"];
            param_fs_param_OuterGeo_size = CompiledEffect.Parameters["fs_param_OuterGeo_size"];
            param_fs_param_OuterGeo_dxdy = CompiledEffect.Parameters["fs_param_OuterGeo_dxdy"];
        }
        public static void Apply(Texture2D Geo, Texture2D OuterGeo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo, OuterGeo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Geo, Texture2D OuterGeo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo, OuterGeo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Geo, Texture2D OuterGeo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo, OuterGeo);
        }
        public static void Using(Texture2D Geo, Texture2D OuterGeo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo, OuterGeo);
        }
        public static void Using(Texture2D Geo, Texture2D OuterGeo)
        {
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            if (param_fs_param_OuterGeo_Texture != null) param_fs_param_OuterGeo_Texture.SetValue(FragSharpMarshal.Marshal(OuterGeo));
            if (param_fs_param_OuterGeo_size != null) param_fs_param_OuterGeo_size.SetValue(FragSharpMarshal.Marshal(vec(OuterGeo.Width, OuterGeo.Height)));
            if (param_fs_param_OuterGeo_dxdy != null) param_fs_param_OuterGeo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(OuterGeo.Width, OuterGeo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Geodesic_Boundary
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Geodesic_Boundary");
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Geo);
        }
        public static void Using(Texture2D Geo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Geo);
        }
        public static void Using(Texture2D Geo)
        {
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}




namespace Game
{
    public partial class Action_PaintTiles
    {
        private static Effect CompiledEffect_type_0p003921569;
        private static EffectParameter param_type_0p003921569_fs_param_Tiles_Texture;
        private static EffectParameter param_type_0p003921569_fs_param_Tiles_size;
        private static EffectParameter param_type_0p003921569_fs_param_Tiles_dxdy;
        private static EffectParameter param_type_0p003921569_fs_param_Select_Texture;
        private static EffectParameter param_type_0p003921569_fs_param_Select_size;
        private static EffectParameter param_type_0p003921569_fs_param_Select_dxdy;
        private static EffectParameter param_type_0p003921569_fs_param_Random_Texture;
        private static EffectParameter param_type_0p003921569_fs_param_Random_size;
        private static EffectParameter param_type_0p003921569_fs_param_Random_dxdy;
        private static Effect CompiledEffect_type_0p007843138;
        private static EffectParameter param_type_0p007843138_fs_param_Tiles_Texture;
        private static EffectParameter param_type_0p007843138_fs_param_Tiles_size;
        private static EffectParameter param_type_0p007843138_fs_param_Tiles_dxdy;
        private static EffectParameter param_type_0p007843138_fs_param_Select_Texture;
        private static EffectParameter param_type_0p007843138_fs_param_Select_size;
        private static EffectParameter param_type_0p007843138_fs_param_Select_dxdy;
        private static EffectParameter param_type_0p007843138_fs_param_Random_Texture;
        private static EffectParameter param_type_0p007843138_fs_param_Random_size;
        private static EffectParameter param_type_0p007843138_fs_param_Random_dxdy;
        private static Effect CompiledEffect_type_0p01960784;
        private static EffectParameter param_type_0p01960784_fs_param_Tiles_Texture;
        private static EffectParameter param_type_0p01960784_fs_param_Tiles_size;
        private static EffectParameter param_type_0p01960784_fs_param_Tiles_dxdy;
        private static EffectParameter param_type_0p01960784_fs_param_Select_Texture;
        private static EffectParameter param_type_0p01960784_fs_param_Select_size;
        private static EffectParameter param_type_0p01960784_fs_param_Select_dxdy;
        private static EffectParameter param_type_0p01960784_fs_param_Random_Texture;
        private static EffectParameter param_type_0p01960784_fs_param_Random_size;
        private static EffectParameter param_type_0p01960784_fs_param_Random_dxdy;

        public static void Init()
        {
            CompiledEffect_type_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/Action_PaintTiles_type=0.003921569");
            param_type_0p003921569_fs_param_Tiles_Texture = CompiledEffect_type_0p003921569.Parameters["fs_param_Tiles_Texture"];
            param_type_0p003921569_fs_param_Tiles_size = CompiledEffect_type_0p003921569.Parameters["fs_param_Tiles_size"];
            param_type_0p003921569_fs_param_Tiles_dxdy = CompiledEffect_type_0p003921569.Parameters["fs_param_Tiles_dxdy"];
            param_type_0p003921569_fs_param_Select_Texture = CompiledEffect_type_0p003921569.Parameters["fs_param_Select_Texture"];
            param_type_0p003921569_fs_param_Select_size = CompiledEffect_type_0p003921569.Parameters["fs_param_Select_size"];
            param_type_0p003921569_fs_param_Select_dxdy = CompiledEffect_type_0p003921569.Parameters["fs_param_Select_dxdy"];
            param_type_0p003921569_fs_param_Random_Texture = CompiledEffect_type_0p003921569.Parameters["fs_param_Random_Texture"];
            param_type_0p003921569_fs_param_Random_size = CompiledEffect_type_0p003921569.Parameters["fs_param_Random_size"];
            param_type_0p003921569_fs_param_Random_dxdy = CompiledEffect_type_0p003921569.Parameters["fs_param_Random_dxdy"];
            CompiledEffect_type_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/Action_PaintTiles_type=0.007843138");
            param_type_0p007843138_fs_param_Tiles_Texture = CompiledEffect_type_0p007843138.Parameters["fs_param_Tiles_Texture"];
            param_type_0p007843138_fs_param_Tiles_size = CompiledEffect_type_0p007843138.Parameters["fs_param_Tiles_size"];
            param_type_0p007843138_fs_param_Tiles_dxdy = CompiledEffect_type_0p007843138.Parameters["fs_param_Tiles_dxdy"];
            param_type_0p007843138_fs_param_Select_Texture = CompiledEffect_type_0p007843138.Parameters["fs_param_Select_Texture"];
            param_type_0p007843138_fs_param_Select_size = CompiledEffect_type_0p007843138.Parameters["fs_param_Select_size"];
            param_type_0p007843138_fs_param_Select_dxdy = CompiledEffect_type_0p007843138.Parameters["fs_param_Select_dxdy"];
            param_type_0p007843138_fs_param_Random_Texture = CompiledEffect_type_0p007843138.Parameters["fs_param_Random_Texture"];
            param_type_0p007843138_fs_param_Random_size = CompiledEffect_type_0p007843138.Parameters["fs_param_Random_size"];
            param_type_0p007843138_fs_param_Random_dxdy = CompiledEffect_type_0p007843138.Parameters["fs_param_Random_dxdy"];
            CompiledEffect_type_0p01960784 = FragSharp.Content.Load<Effect>("FragSharpShaders/Action_PaintTiles_type=0.01960784");
            param_type_0p01960784_fs_param_Tiles_Texture = CompiledEffect_type_0p01960784.Parameters["fs_param_Tiles_Texture"];
            param_type_0p01960784_fs_param_Tiles_size = CompiledEffect_type_0p01960784.Parameters["fs_param_Tiles_size"];
            param_type_0p01960784_fs_param_Tiles_dxdy = CompiledEffect_type_0p01960784.Parameters["fs_param_Tiles_dxdy"];
            param_type_0p01960784_fs_param_Select_Texture = CompiledEffect_type_0p01960784.Parameters["fs_param_Select_Texture"];
            param_type_0p01960784_fs_param_Select_size = CompiledEffect_type_0p01960784.Parameters["fs_param_Select_size"];
            param_type_0p01960784_fs_param_Select_dxdy = CompiledEffect_type_0p01960784.Parameters["fs_param_Select_dxdy"];
            param_type_0p01960784_fs_param_Random_Texture = CompiledEffect_type_0p01960784.Parameters["fs_param_Random_Texture"];
            param_type_0p01960784_fs_param_Random_size = CompiledEffect_type_0p01960784.Parameters["fs_param_Random_size"];
            param_type_0p01960784_fs_param_Random_dxdy = CompiledEffect_type_0p01960784.Parameters["fs_param_Random_dxdy"];
        }
        public static void Apply(Texture2D Tiles, Texture2D Select, Texture2D Random, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Select, Random, type);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, Texture2D Select, Texture2D Random, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Select, Random, type);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, Texture2D Select, Texture2D Random, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Select, Random, type);
        }
        public static void Using(Texture2D Tiles, Texture2D Select, Texture2D Random, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Select, Random, type);
        }
        public static void Using(Texture2D Tiles, Texture2D Select, Texture2D Random, float type)
        {
            if (abs((float)(type - 0.003921569)) < .0019)
            {
                if (param_type_0p003921569_fs_param_Tiles_Texture != null) param_type_0p003921569_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_type_0p003921569_fs_param_Tiles_size != null) param_type_0p003921569_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_type_0p003921569_fs_param_Tiles_dxdy != null) param_type_0p003921569_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_type_0p003921569_fs_param_Select_Texture != null) param_type_0p003921569_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_type_0p003921569_fs_param_Select_size != null) param_type_0p003921569_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_type_0p003921569_fs_param_Select_dxdy != null) param_type_0p003921569_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_type_0p003921569_fs_param_Random_Texture != null) param_type_0p003921569_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
                if (param_type_0p003921569_fs_param_Random_size != null) param_type_0p003921569_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
                if (param_type_0p003921569_fs_param_Random_dxdy != null) param_type_0p003921569_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
                CompiledEffect_type_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.007843138)) < .0019)
            {
                if (param_type_0p007843138_fs_param_Tiles_Texture != null) param_type_0p007843138_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_type_0p007843138_fs_param_Tiles_size != null) param_type_0p007843138_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_type_0p007843138_fs_param_Tiles_dxdy != null) param_type_0p007843138_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_type_0p007843138_fs_param_Select_Texture != null) param_type_0p007843138_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_type_0p007843138_fs_param_Select_size != null) param_type_0p007843138_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_type_0p007843138_fs_param_Select_dxdy != null) param_type_0p007843138_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_type_0p007843138_fs_param_Random_Texture != null) param_type_0p007843138_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
                if (param_type_0p007843138_fs_param_Random_size != null) param_type_0p007843138_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
                if (param_type_0p007843138_fs_param_Random_dxdy != null) param_type_0p007843138_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
                CompiledEffect_type_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.01960784)) < .0019)
            {
                if (param_type_0p01960784_fs_param_Tiles_Texture != null) param_type_0p01960784_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
                if (param_type_0p01960784_fs_param_Tiles_size != null) param_type_0p01960784_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
                if (param_type_0p01960784_fs_param_Tiles_dxdy != null) param_type_0p01960784_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
                if (param_type_0p01960784_fs_param_Select_Texture != null) param_type_0p01960784_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_type_0p01960784_fs_param_Select_size != null) param_type_0p01960784_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_type_0p01960784_fs_param_Select_dxdy != null) param_type_0p01960784_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_type_0p01960784_fs_param_Random_Texture != null) param_type_0p01960784_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
                if (param_type_0p01960784_fs_param_Random_size != null) param_type_0p01960784_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
                if (param_type_0p01960784_fs_param_Random_dxdy != null) param_type_0p01960784_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
                CompiledEffect_type_0p01960784.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class PaintTiles_UpdateData
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Tiles_Texture;
        private static EffectParameter param_fs_param_Tiles_size;
        private static EffectParameter param_fs_param_Tiles_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/PaintTiles_UpdateData");
            param_fs_param_Tiles_Texture = CompiledEffect.Parameters["fs_param_Tiles_Texture"];
            param_fs_param_Tiles_size = CompiledEffect.Parameters["fs_param_Tiles_size"];
            param_fs_param_Tiles_dxdy = CompiledEffect.Parameters["fs_param_Tiles_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Tiles, Texture2D Units, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Units, Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, Texture2D Units, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Units, Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, Texture2D Units, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Units, Data);
        }
        public static void Using(Texture2D Tiles, Texture2D Units, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Units, Data);
        }
        public static void Using(Texture2D Tiles, Texture2D Units, Texture2D Data)
        {
            if (param_fs_param_Tiles_Texture != null) param_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
            if (param_fs_param_Tiles_size != null) param_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Tiles_dxdy != null) param_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class PaintTiles_UpdateUnits
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Tiles_Texture;
        private static EffectParameter param_fs_param_Tiles_size;
        private static EffectParameter param_fs_param_Tiles_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/PaintTiles_UpdateUnits");
            param_fs_param_Tiles_Texture = CompiledEffect.Parameters["fs_param_Tiles_Texture"];
            param_fs_param_Tiles_size = CompiledEffect.Parameters["fs_param_Tiles_size"];
            param_fs_param_Tiles_dxdy = CompiledEffect.Parameters["fs_param_Tiles_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Tiles, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Units);
        }
        public static void Using(Texture2D Tiles, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Units);
        }
        public static void Using(Texture2D Tiles, Texture2D Units)
        {
            if (param_fs_param_Tiles_Texture != null) param_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
            if (param_fs_param_Tiles_size != null) param_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Tiles_dxdy != null) param_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class PaintTiles_UpdateTiles
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Tiles_Texture;
        private static EffectParameter param_fs_param_Tiles_size;
        private static EffectParameter param_fs_param_Tiles_dxdy;
        private static EffectParameter param_fs_param_Select_Texture;
        private static EffectParameter param_fs_param_Select_size;
        private static EffectParameter param_fs_param_Select_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/PaintTiles_UpdateTiles");
            param_fs_param_Tiles_Texture = CompiledEffect.Parameters["fs_param_Tiles_Texture"];
            param_fs_param_Tiles_size = CompiledEffect.Parameters["fs_param_Tiles_size"];
            param_fs_param_Tiles_dxdy = CompiledEffect.Parameters["fs_param_Tiles_dxdy"];
            param_fs_param_Select_Texture = CompiledEffect.Parameters["fs_param_Select_Texture"];
            param_fs_param_Select_size = CompiledEffect.Parameters["fs_param_Select_size"];
            param_fs_param_Select_dxdy = CompiledEffect.Parameters["fs_param_Select_dxdy"];
        }
        public static void Apply(Texture2D Tiles, Texture2D Select, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Select);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Tiles, Texture2D Select, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Select);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Tiles, Texture2D Select, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Tiles, Select);
        }
        public static void Using(Texture2D Tiles, Texture2D Select, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Tiles, Select);
        }
        public static void Using(Texture2D Tiles, Texture2D Select)
        {
            if (param_fs_param_Tiles_Texture != null) param_fs_param_Tiles_Texture.SetValue(FragSharpMarshal.Marshal(Tiles));
            if (param_fs_param_Tiles_size != null) param_fs_param_Tiles_size.SetValue(FragSharpMarshal.Marshal(vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Tiles_dxdy != null) param_fs_param_Tiles_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Tiles.Width, Tiles.Height)));
            if (param_fs_param_Select_Texture != null) param_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
            if (param_fs_param_Select_size != null) param_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
            if (param_fs_param_Select_dxdy != null) param_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class ActionDelete_Data
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionDelete_Data");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
        }
        public static void Using(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
        }
        public static void Using(Texture2D Data)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class UpdateFakeSelect
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/UpdateFakeSelect");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
        }
        public static void Using(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
        }
        public static void Using(Texture2D Data)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}











namespace Game
{
    public partial class ActionSelect
    {
        private static Effect CompiledEffect_player_0_fake_true;
        private static EffectParameter param_player_0_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_fake_true_fs_param_Select_Texture;
        private static EffectParameter param_player_0_fake_true_fs_param_Select_size;
        private static EffectParameter param_player_0_fake_true_fs_param_Select_dxdy;
        private static EffectParameter param_player_0_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0_fake_false;
        private static EffectParameter param_player_0_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_fake_false_fs_param_Select_Texture;
        private static EffectParameter param_player_0_fake_false_fs_param_Select_size;
        private static EffectParameter param_player_0_fake_false_fs_param_Select_dxdy;
        private static EffectParameter param_player_0_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p003921569_fake_true;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Select_Texture;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Select_size;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p003921569_fake_false;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Select_Texture;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Select_size;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p007843138_fake_true;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Select_Texture;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Select_size;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p007843138_fake_false;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Select_Texture;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Select_size;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01176471_fake_true;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Select_Texture;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Select_size;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01176471_fake_false;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Select_Texture;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Select_size;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01568628_fake_true;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Select_Texture;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Select_size;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01568628_fake_false;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Select_Texture;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Select_size;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Select_dxdy;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_deselect;

        public static void Init()
        {
            CompiledEffect_player_0_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0_fake=true");
            param_player_0_fake_true_fs_param_Data_Texture = CompiledEffect_player_0_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0_fake_true_fs_param_Data_size = CompiledEffect_player_0_fake_true.Parameters["fs_param_Data_size"];
            param_player_0_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0_fake_true_fs_param_Unit_size = CompiledEffect_player_0_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0_fake_true_fs_param_Select_Texture = CompiledEffect_player_0_fake_true.Parameters["fs_param_Select_Texture"];
            param_player_0_fake_true_fs_param_Select_size = CompiledEffect_player_0_fake_true.Parameters["fs_param_Select_size"];
            param_player_0_fake_true_fs_param_Select_dxdy = CompiledEffect_player_0_fake_true.Parameters["fs_param_Select_dxdy"];
            param_player_0_fake_true_fs_param_deselect = CompiledEffect_player_0_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0_fake=false");
            param_player_0_fake_false_fs_param_Data_Texture = CompiledEffect_player_0_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0_fake_false_fs_param_Data_size = CompiledEffect_player_0_fake_false.Parameters["fs_param_Data_size"];
            param_player_0_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0_fake_false_fs_param_Unit_size = CompiledEffect_player_0_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0_fake_false_fs_param_Select_Texture = CompiledEffect_player_0_fake_false.Parameters["fs_param_Select_Texture"];
            param_player_0_fake_false_fs_param_Select_size = CompiledEffect_player_0_fake_false.Parameters["fs_param_Select_size"];
            param_player_0_fake_false_fs_param_Select_dxdy = CompiledEffect_player_0_fake_false.Parameters["fs_param_Select_dxdy"];
            param_player_0_fake_false_fs_param_deselect = CompiledEffect_player_0_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p003921569_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.003921569_fake=true");
            param_player_0p003921569_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fake_true_fs_param_Data_size = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_fake_true_fs_param_Unit_size = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_fake_true_fs_param_Select_Texture = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Select_Texture"];
            param_player_0p003921569_fake_true_fs_param_Select_size = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Select_size"];
            param_player_0p003921569_fake_true_fs_param_Select_dxdy = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Select_dxdy"];
            param_player_0p003921569_fake_true_fs_param_deselect = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p003921569_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.003921569_fake=false");
            param_player_0p003921569_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fake_false_fs_param_Data_size = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_fake_false_fs_param_Unit_size = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_fake_false_fs_param_Select_Texture = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Select_Texture"];
            param_player_0p003921569_fake_false_fs_param_Select_size = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Select_size"];
            param_player_0p003921569_fake_false_fs_param_Select_dxdy = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Select_dxdy"];
            param_player_0p003921569_fake_false_fs_param_deselect = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p007843138_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.007843138_fake=true");
            param_player_0p007843138_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fake_true_fs_param_Data_size = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_fake_true_fs_param_Unit_size = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_fake_true_fs_param_Select_Texture = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Select_Texture"];
            param_player_0p007843138_fake_true_fs_param_Select_size = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Select_size"];
            param_player_0p007843138_fake_true_fs_param_Select_dxdy = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Select_dxdy"];
            param_player_0p007843138_fake_true_fs_param_deselect = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p007843138_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.007843138_fake=false");
            param_player_0p007843138_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fake_false_fs_param_Data_size = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_fake_false_fs_param_Unit_size = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_fake_false_fs_param_Select_Texture = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Select_Texture"];
            param_player_0p007843138_fake_false_fs_param_Select_size = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Select_size"];
            param_player_0p007843138_fake_false_fs_param_Select_dxdy = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Select_dxdy"];
            param_player_0p007843138_fake_false_fs_param_deselect = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01176471_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.01176471_fake=true");
            param_player_0p01176471_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fake_true_fs_param_Data_size = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_fake_true_fs_param_Unit_size = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_fake_true_fs_param_Select_Texture = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Select_Texture"];
            param_player_0p01176471_fake_true_fs_param_Select_size = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Select_size"];
            param_player_0p01176471_fake_true_fs_param_Select_dxdy = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Select_dxdy"];
            param_player_0p01176471_fake_true_fs_param_deselect = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01176471_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.01176471_fake=false");
            param_player_0p01176471_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fake_false_fs_param_Data_size = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_fake_false_fs_param_Unit_size = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_fake_false_fs_param_Select_Texture = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Select_Texture"];
            param_player_0p01176471_fake_false_fs_param_Select_size = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Select_size"];
            param_player_0p01176471_fake_false_fs_param_Select_dxdy = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Select_dxdy"];
            param_player_0p01176471_fake_false_fs_param_deselect = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01568628_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.01568628_fake=true");
            param_player_0p01568628_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fake_true_fs_param_Data_size = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_fake_true_fs_param_Unit_size = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_fake_true_fs_param_Select_Texture = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Select_Texture"];
            param_player_0p01568628_fake_true_fs_param_Select_size = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Select_size"];
            param_player_0p01568628_fake_true_fs_param_Select_dxdy = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Select_dxdy"];
            param_player_0p01568628_fake_true_fs_param_deselect = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01568628_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelect_player=0.01568628_fake=false");
            param_player_0p01568628_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fake_false_fs_param_Data_size = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_fake_false_fs_param_Unit_size = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_fake_false_fs_param_Select_Texture = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Select_Texture"];
            param_player_0p01568628_fake_false_fs_param_Select_size = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Select_size"];
            param_player_0p01568628_fake_false_fs_param_Select_dxdy = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Select_dxdy"];
            param_player_0p01568628_fake_false_fs_param_deselect = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_deselect"];
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D Select, float player, bool deselect, bool fake, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, Select, player, deselect, fake);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D Select, float player, bool deselect, bool fake, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, Select, player, deselect, fake);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D Select, float player, bool deselect, bool fake, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, Select, player, deselect, fake);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D Select, float player, bool deselect, bool fake, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, Select, player, deselect, fake);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D Select, float player, bool deselect, bool fake)
        {
            if (abs((float)(player - 0)) < .0019 && fake == true)
            {
                if (param_player_0_fake_true_fs_param_Data_Texture != null) param_player_0_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fake_true_fs_param_Data_size != null) param_player_0_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fake_true_fs_param_Data_dxdy != null) param_player_0_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fake_true_fs_param_Unit_Texture != null) param_player_0_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_fake_true_fs_param_Unit_size != null) param_player_0_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_true_fs_param_Unit_dxdy != null) param_player_0_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_true_fs_param_Select_Texture != null) param_player_0_fake_true_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0_fake_true_fs_param_Select_size != null) param_player_0_fake_true_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0_fake_true_fs_param_Select_dxdy != null) param_player_0_fake_true_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0_fake_true_fs_param_deselect != null) param_player_0_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && fake == false)
            {
                if (param_player_0_fake_false_fs_param_Data_Texture != null) param_player_0_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fake_false_fs_param_Data_size != null) param_player_0_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fake_false_fs_param_Data_dxdy != null) param_player_0_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fake_false_fs_param_Unit_Texture != null) param_player_0_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_fake_false_fs_param_Unit_size != null) param_player_0_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_false_fs_param_Unit_dxdy != null) param_player_0_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_false_fs_param_Select_Texture != null) param_player_0_fake_false_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0_fake_false_fs_param_Select_size != null) param_player_0_fake_false_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0_fake_false_fs_param_Select_dxdy != null) param_player_0_fake_false_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0_fake_false_fs_param_deselect != null) param_player_0_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && fake == true)
            {
                if (param_player_0p003921569_fake_true_fs_param_Data_Texture != null) param_player_0p003921569_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fake_true_fs_param_Data_size != null) param_player_0p003921569_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Data_dxdy != null) param_player_0p003921569_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Unit_Texture != null) param_player_0p003921569_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_fake_true_fs_param_Unit_size != null) param_player_0p003921569_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Unit_dxdy != null) param_player_0p003921569_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Select_Texture != null) param_player_0p003921569_fake_true_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p003921569_fake_true_fs_param_Select_size != null) param_player_0p003921569_fake_true_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Select_dxdy != null) param_player_0p003921569_fake_true_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p003921569_fake_true_fs_param_deselect != null) param_player_0p003921569_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p003921569_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && fake == false)
            {
                if (param_player_0p003921569_fake_false_fs_param_Data_Texture != null) param_player_0p003921569_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fake_false_fs_param_Data_size != null) param_player_0p003921569_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Data_dxdy != null) param_player_0p003921569_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Unit_Texture != null) param_player_0p003921569_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_fake_false_fs_param_Unit_size != null) param_player_0p003921569_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Unit_dxdy != null) param_player_0p003921569_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Select_Texture != null) param_player_0p003921569_fake_false_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p003921569_fake_false_fs_param_Select_size != null) param_player_0p003921569_fake_false_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Select_dxdy != null) param_player_0p003921569_fake_false_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p003921569_fake_false_fs_param_deselect != null) param_player_0p003921569_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p003921569_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && fake == true)
            {
                if (param_player_0p007843138_fake_true_fs_param_Data_Texture != null) param_player_0p007843138_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fake_true_fs_param_Data_size != null) param_player_0p007843138_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Data_dxdy != null) param_player_0p007843138_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Unit_Texture != null) param_player_0p007843138_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_fake_true_fs_param_Unit_size != null) param_player_0p007843138_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Unit_dxdy != null) param_player_0p007843138_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Select_Texture != null) param_player_0p007843138_fake_true_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p007843138_fake_true_fs_param_Select_size != null) param_player_0p007843138_fake_true_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Select_dxdy != null) param_player_0p007843138_fake_true_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p007843138_fake_true_fs_param_deselect != null) param_player_0p007843138_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p007843138_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && fake == false)
            {
                if (param_player_0p007843138_fake_false_fs_param_Data_Texture != null) param_player_0p007843138_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fake_false_fs_param_Data_size != null) param_player_0p007843138_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Data_dxdy != null) param_player_0p007843138_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Unit_Texture != null) param_player_0p007843138_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_fake_false_fs_param_Unit_size != null) param_player_0p007843138_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Unit_dxdy != null) param_player_0p007843138_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Select_Texture != null) param_player_0p007843138_fake_false_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p007843138_fake_false_fs_param_Select_size != null) param_player_0p007843138_fake_false_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Select_dxdy != null) param_player_0p007843138_fake_false_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p007843138_fake_false_fs_param_deselect != null) param_player_0p007843138_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p007843138_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && fake == true)
            {
                if (param_player_0p01176471_fake_true_fs_param_Data_Texture != null) param_player_0p01176471_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fake_true_fs_param_Data_size != null) param_player_0p01176471_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Data_dxdy != null) param_player_0p01176471_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Unit_Texture != null) param_player_0p01176471_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_fake_true_fs_param_Unit_size != null) param_player_0p01176471_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Unit_dxdy != null) param_player_0p01176471_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Select_Texture != null) param_player_0p01176471_fake_true_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p01176471_fake_true_fs_param_Select_size != null) param_player_0p01176471_fake_true_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Select_dxdy != null) param_player_0p01176471_fake_true_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p01176471_fake_true_fs_param_deselect != null) param_player_0p01176471_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01176471_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && fake == false)
            {
                if (param_player_0p01176471_fake_false_fs_param_Data_Texture != null) param_player_0p01176471_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fake_false_fs_param_Data_size != null) param_player_0p01176471_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Data_dxdy != null) param_player_0p01176471_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Unit_Texture != null) param_player_0p01176471_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_fake_false_fs_param_Unit_size != null) param_player_0p01176471_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Unit_dxdy != null) param_player_0p01176471_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Select_Texture != null) param_player_0p01176471_fake_false_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p01176471_fake_false_fs_param_Select_size != null) param_player_0p01176471_fake_false_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Select_dxdy != null) param_player_0p01176471_fake_false_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p01176471_fake_false_fs_param_deselect != null) param_player_0p01176471_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01176471_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && fake == true)
            {
                if (param_player_0p01568628_fake_true_fs_param_Data_Texture != null) param_player_0p01568628_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fake_true_fs_param_Data_size != null) param_player_0p01568628_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Data_dxdy != null) param_player_0p01568628_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Unit_Texture != null) param_player_0p01568628_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_fake_true_fs_param_Unit_size != null) param_player_0p01568628_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Unit_dxdy != null) param_player_0p01568628_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Select_Texture != null) param_player_0p01568628_fake_true_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p01568628_fake_true_fs_param_Select_size != null) param_player_0p01568628_fake_true_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Select_dxdy != null) param_player_0p01568628_fake_true_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p01568628_fake_true_fs_param_deselect != null) param_player_0p01568628_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01568628_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && fake == false)
            {
                if (param_player_0p01568628_fake_false_fs_param_Data_Texture != null) param_player_0p01568628_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fake_false_fs_param_Data_size != null) param_player_0p01568628_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Data_dxdy != null) param_player_0p01568628_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Unit_Texture != null) param_player_0p01568628_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_fake_false_fs_param_Unit_size != null) param_player_0p01568628_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Unit_dxdy != null) param_player_0p01568628_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Select_Texture != null) param_player_0p01568628_fake_false_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_player_0p01568628_fake_false_fs_param_Select_size != null) param_player_0p01568628_fake_false_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Select_dxdy != null) param_player_0p01568628_fake_false_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_player_0p01568628_fake_false_fs_param_deselect != null) param_player_0p01568628_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01568628_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}











namespace Game
{
    public partial class ActionSelectInBox
    {
        private static Effect CompiledEffect_player_0_fake_true;
        private static EffectParameter param_player_0_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_fake_true_fs_param_bl;
        private static EffectParameter param_player_0_fake_true_fs_param_tr;
        private static EffectParameter param_player_0_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0_fake_false;
        private static EffectParameter param_player_0_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_fake_false_fs_param_bl;
        private static EffectParameter param_player_0_fake_false_fs_param_tr;
        private static EffectParameter param_player_0_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p003921569_fake_true;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_bl;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_tr;
        private static EffectParameter param_player_0p003921569_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p003921569_fake_false;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_bl;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_tr;
        private static EffectParameter param_player_0p003921569_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p007843138_fake_true;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_bl;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_tr;
        private static EffectParameter param_player_0p007843138_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p007843138_fake_false;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_bl;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_tr;
        private static EffectParameter param_player_0p007843138_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01176471_fake_true;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_bl;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_tr;
        private static EffectParameter param_player_0p01176471_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01176471_fake_false;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_bl;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_tr;
        private static EffectParameter param_player_0p01176471_fake_false_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01568628_fake_true;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_bl;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_tr;
        private static EffectParameter param_player_0p01568628_fake_true_fs_param_deselect;
        private static Effect CompiledEffect_player_0p01568628_fake_false;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_bl;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_tr;
        private static EffectParameter param_player_0p01568628_fake_false_fs_param_deselect;

        public static void Init()
        {
            CompiledEffect_player_0_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0_fake=true");
            param_player_0_fake_true_fs_param_Data_Texture = CompiledEffect_player_0_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0_fake_true_fs_param_Data_size = CompiledEffect_player_0_fake_true.Parameters["fs_param_Data_size"];
            param_player_0_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0_fake_true_fs_param_Unit_size = CompiledEffect_player_0_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0_fake_true_fs_param_bl = CompiledEffect_player_0_fake_true.Parameters["fs_param_bl"];
            param_player_0_fake_true_fs_param_tr = CompiledEffect_player_0_fake_true.Parameters["fs_param_tr"];
            param_player_0_fake_true_fs_param_deselect = CompiledEffect_player_0_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0_fake=false");
            param_player_0_fake_false_fs_param_Data_Texture = CompiledEffect_player_0_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0_fake_false_fs_param_Data_size = CompiledEffect_player_0_fake_false.Parameters["fs_param_Data_size"];
            param_player_0_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0_fake_false_fs_param_Unit_size = CompiledEffect_player_0_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0_fake_false_fs_param_bl = CompiledEffect_player_0_fake_false.Parameters["fs_param_bl"];
            param_player_0_fake_false_fs_param_tr = CompiledEffect_player_0_fake_false.Parameters["fs_param_tr"];
            param_player_0_fake_false_fs_param_deselect = CompiledEffect_player_0_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p003921569_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.003921569_fake=true");
            param_player_0p003921569_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fake_true_fs_param_Data_size = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_fake_true_fs_param_Unit_size = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_fake_true_fs_param_bl = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_bl"];
            param_player_0p003921569_fake_true_fs_param_tr = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_tr"];
            param_player_0p003921569_fake_true_fs_param_deselect = CompiledEffect_player_0p003921569_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p003921569_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.003921569_fake=false");
            param_player_0p003921569_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fake_false_fs_param_Data_size = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_fake_false_fs_param_Unit_size = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_fake_false_fs_param_bl = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_bl"];
            param_player_0p003921569_fake_false_fs_param_tr = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_tr"];
            param_player_0p003921569_fake_false_fs_param_deselect = CompiledEffect_player_0p003921569_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p007843138_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.007843138_fake=true");
            param_player_0p007843138_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fake_true_fs_param_Data_size = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_fake_true_fs_param_Unit_size = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_fake_true_fs_param_bl = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_bl"];
            param_player_0p007843138_fake_true_fs_param_tr = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_tr"];
            param_player_0p007843138_fake_true_fs_param_deselect = CompiledEffect_player_0p007843138_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p007843138_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.007843138_fake=false");
            param_player_0p007843138_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fake_false_fs_param_Data_size = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_fake_false_fs_param_Unit_size = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_fake_false_fs_param_bl = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_bl"];
            param_player_0p007843138_fake_false_fs_param_tr = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_tr"];
            param_player_0p007843138_fake_false_fs_param_deselect = CompiledEffect_player_0p007843138_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01176471_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.01176471_fake=true");
            param_player_0p01176471_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fake_true_fs_param_Data_size = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_fake_true_fs_param_Unit_size = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_fake_true_fs_param_bl = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_bl"];
            param_player_0p01176471_fake_true_fs_param_tr = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_tr"];
            param_player_0p01176471_fake_true_fs_param_deselect = CompiledEffect_player_0p01176471_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01176471_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.01176471_fake=false");
            param_player_0p01176471_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fake_false_fs_param_Data_size = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_fake_false_fs_param_Unit_size = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_fake_false_fs_param_bl = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_bl"];
            param_player_0p01176471_fake_false_fs_param_tr = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_tr"];
            param_player_0p01176471_fake_false_fs_param_deselect = CompiledEffect_player_0p01176471_fake_false.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01568628_fake_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.01568628_fake=true");
            param_player_0p01568628_fake_true_fs_param_Data_Texture = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fake_true_fs_param_Data_size = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fake_true_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fake_true_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_fake_true_fs_param_Unit_size = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_fake_true_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_fake_true_fs_param_bl = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_bl"];
            param_player_0p01568628_fake_true_fs_param_tr = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_tr"];
            param_player_0p01568628_fake_true_fs_param_deselect = CompiledEffect_player_0p01568628_fake_true.Parameters["fs_param_deselect"];
            CompiledEffect_player_0p01568628_fake_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSelectInBox_player=0.01568628_fake=false");
            param_player_0p01568628_fake_false_fs_param_Data_Texture = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fake_false_fs_param_Data_size = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fake_false_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fake_false_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_fake_false_fs_param_Unit_size = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_fake_false_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_fake_false_fs_param_bl = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_bl"];
            param_player_0p01568628_fake_false_fs_param_tr = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_tr"];
            param_player_0p01568628_fake_false_fs_param_deselect = CompiledEffect_player_0p01568628_fake_false.Parameters["fs_param_deselect"];
        }
        public static void Apply(Texture2D Data, Texture2D Unit, vec2 bl, vec2 tr, float player, bool deselect, bool fake, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, bl, tr, player, deselect, fake);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Unit, vec2 bl, vec2 tr, float player, bool deselect, bool fake, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, bl, tr, player, deselect, fake);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Unit, vec2 bl, vec2 tr, float player, bool deselect, bool fake, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, bl, tr, player, deselect, fake);
        }
        public static void Using(Texture2D Data, Texture2D Unit, vec2 bl, vec2 tr, float player, bool deselect, bool fake, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, bl, tr, player, deselect, fake);
        }
        public static void Using(Texture2D Data, Texture2D Unit, vec2 bl, vec2 tr, float player, bool deselect, bool fake)
        {
            if (abs((float)(player - 0)) < .0019 && fake == true)
            {
                if (param_player_0_fake_true_fs_param_Data_Texture != null) param_player_0_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fake_true_fs_param_Data_size != null) param_player_0_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fake_true_fs_param_Data_dxdy != null) param_player_0_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fake_true_fs_param_Unit_Texture != null) param_player_0_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_fake_true_fs_param_Unit_size != null) param_player_0_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_true_fs_param_Unit_dxdy != null) param_player_0_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_true_fs_param_bl != null) param_player_0_fake_true_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0_fake_true_fs_param_tr != null) param_player_0_fake_true_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0_fake_true_fs_param_deselect != null) param_player_0_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && fake == false)
            {
                if (param_player_0_fake_false_fs_param_Data_Texture != null) param_player_0_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fake_false_fs_param_Data_size != null) param_player_0_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fake_false_fs_param_Data_dxdy != null) param_player_0_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fake_false_fs_param_Unit_Texture != null) param_player_0_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_fake_false_fs_param_Unit_size != null) param_player_0_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_false_fs_param_Unit_dxdy != null) param_player_0_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_fake_false_fs_param_bl != null) param_player_0_fake_false_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0_fake_false_fs_param_tr != null) param_player_0_fake_false_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0_fake_false_fs_param_deselect != null) param_player_0_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && fake == true)
            {
                if (param_player_0p003921569_fake_true_fs_param_Data_Texture != null) param_player_0p003921569_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fake_true_fs_param_Data_size != null) param_player_0p003921569_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Data_dxdy != null) param_player_0p003921569_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Unit_Texture != null) param_player_0p003921569_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_fake_true_fs_param_Unit_size != null) param_player_0p003921569_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_true_fs_param_Unit_dxdy != null) param_player_0p003921569_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_true_fs_param_bl != null) param_player_0p003921569_fake_true_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p003921569_fake_true_fs_param_tr != null) param_player_0p003921569_fake_true_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p003921569_fake_true_fs_param_deselect != null) param_player_0p003921569_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p003921569_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && fake == false)
            {
                if (param_player_0p003921569_fake_false_fs_param_Data_Texture != null) param_player_0p003921569_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fake_false_fs_param_Data_size != null) param_player_0p003921569_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Data_dxdy != null) param_player_0p003921569_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Unit_Texture != null) param_player_0p003921569_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_fake_false_fs_param_Unit_size != null) param_player_0p003921569_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_false_fs_param_Unit_dxdy != null) param_player_0p003921569_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fake_false_fs_param_bl != null) param_player_0p003921569_fake_false_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p003921569_fake_false_fs_param_tr != null) param_player_0p003921569_fake_false_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p003921569_fake_false_fs_param_deselect != null) param_player_0p003921569_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p003921569_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && fake == true)
            {
                if (param_player_0p007843138_fake_true_fs_param_Data_Texture != null) param_player_0p007843138_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fake_true_fs_param_Data_size != null) param_player_0p007843138_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Data_dxdy != null) param_player_0p007843138_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Unit_Texture != null) param_player_0p007843138_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_fake_true_fs_param_Unit_size != null) param_player_0p007843138_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_true_fs_param_Unit_dxdy != null) param_player_0p007843138_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_true_fs_param_bl != null) param_player_0p007843138_fake_true_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p007843138_fake_true_fs_param_tr != null) param_player_0p007843138_fake_true_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p007843138_fake_true_fs_param_deselect != null) param_player_0p007843138_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p007843138_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && fake == false)
            {
                if (param_player_0p007843138_fake_false_fs_param_Data_Texture != null) param_player_0p007843138_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fake_false_fs_param_Data_size != null) param_player_0p007843138_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Data_dxdy != null) param_player_0p007843138_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Unit_Texture != null) param_player_0p007843138_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_fake_false_fs_param_Unit_size != null) param_player_0p007843138_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_false_fs_param_Unit_dxdy != null) param_player_0p007843138_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fake_false_fs_param_bl != null) param_player_0p007843138_fake_false_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p007843138_fake_false_fs_param_tr != null) param_player_0p007843138_fake_false_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p007843138_fake_false_fs_param_deselect != null) param_player_0p007843138_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p007843138_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && fake == true)
            {
                if (param_player_0p01176471_fake_true_fs_param_Data_Texture != null) param_player_0p01176471_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fake_true_fs_param_Data_size != null) param_player_0p01176471_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Data_dxdy != null) param_player_0p01176471_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Unit_Texture != null) param_player_0p01176471_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_fake_true_fs_param_Unit_size != null) param_player_0p01176471_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_true_fs_param_Unit_dxdy != null) param_player_0p01176471_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_true_fs_param_bl != null) param_player_0p01176471_fake_true_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p01176471_fake_true_fs_param_tr != null) param_player_0p01176471_fake_true_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p01176471_fake_true_fs_param_deselect != null) param_player_0p01176471_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01176471_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && fake == false)
            {
                if (param_player_0p01176471_fake_false_fs_param_Data_Texture != null) param_player_0p01176471_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fake_false_fs_param_Data_size != null) param_player_0p01176471_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Data_dxdy != null) param_player_0p01176471_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Unit_Texture != null) param_player_0p01176471_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_fake_false_fs_param_Unit_size != null) param_player_0p01176471_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_false_fs_param_Unit_dxdy != null) param_player_0p01176471_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fake_false_fs_param_bl != null) param_player_0p01176471_fake_false_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p01176471_fake_false_fs_param_tr != null) param_player_0p01176471_fake_false_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p01176471_fake_false_fs_param_deselect != null) param_player_0p01176471_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01176471_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && fake == true)
            {
                if (param_player_0p01568628_fake_true_fs_param_Data_Texture != null) param_player_0p01568628_fake_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fake_true_fs_param_Data_size != null) param_player_0p01568628_fake_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Data_dxdy != null) param_player_0p01568628_fake_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Unit_Texture != null) param_player_0p01568628_fake_true_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_fake_true_fs_param_Unit_size != null) param_player_0p01568628_fake_true_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_true_fs_param_Unit_dxdy != null) param_player_0p01568628_fake_true_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_true_fs_param_bl != null) param_player_0p01568628_fake_true_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p01568628_fake_true_fs_param_tr != null) param_player_0p01568628_fake_true_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p01568628_fake_true_fs_param_deselect != null) param_player_0p01568628_fake_true_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01568628_fake_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && fake == false)
            {
                if (param_player_0p01568628_fake_false_fs_param_Data_Texture != null) param_player_0p01568628_fake_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fake_false_fs_param_Data_size != null) param_player_0p01568628_fake_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Data_dxdy != null) param_player_0p01568628_fake_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Unit_Texture != null) param_player_0p01568628_fake_false_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_fake_false_fs_param_Unit_size != null) param_player_0p01568628_fake_false_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_false_fs_param_Unit_dxdy != null) param_player_0p01568628_fake_false_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fake_false_fs_param_bl != null) param_player_0p01568628_fake_false_fs_param_bl.SetValue(FragSharpMarshal.Marshal(bl));
                if (param_player_0p01568628_fake_false_fs_param_tr != null) param_player_0p01568628_fake_false_fs_param_tr.SetValue(FragSharpMarshal.Marshal(tr));
                if (param_player_0p01568628_fake_false_fs_param_deselect != null) param_player_0p01568628_fake_false_fs_param_deselect.SetValue(FragSharpMarshal.Marshal(deselect));
                CompiledEffect_player_0p01568628_fake_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class DataDrawMouse
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_data_texture_Texture;
        private static EffectParameter param_player_0_fs_param_data_texture_size;
        private static EffectParameter param_player_0_fs_param_data_texture_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_data_texture_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_data_texture_size;
        private static EffectParameter param_player_0p003921569_fs_param_data_texture_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_data_texture_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_data_texture_size;
        private static EffectParameter param_player_0p007843138_fs_param_data_texture_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_data_texture_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_data_texture_size;
        private static EffectParameter param_player_0p01176471_fs_param_data_texture_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_data_texture_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_data_texture_size;
        private static EffectParameter param_player_0p01568628_fs_param_data_texture_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouse_player=0");
            param_player_0_fs_param_data_texture_Texture = CompiledEffect_player_0.Parameters["fs_param_data_texture_Texture"];
            param_player_0_fs_param_data_texture_size = CompiledEffect_player_0.Parameters["fs_param_data_texture_size"];
            param_player_0_fs_param_data_texture_dxdy = CompiledEffect_player_0.Parameters["fs_param_data_texture_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouse_player=0.003921569");
            param_player_0p003921569_fs_param_data_texture_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_data_texture_Texture"];
            param_player_0p003921569_fs_param_data_texture_size = CompiledEffect_player_0p003921569.Parameters["fs_param_data_texture_size"];
            param_player_0p003921569_fs_param_data_texture_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_data_texture_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouse_player=0.007843138");
            param_player_0p007843138_fs_param_data_texture_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_data_texture_Texture"];
            param_player_0p007843138_fs_param_data_texture_size = CompiledEffect_player_0p007843138.Parameters["fs_param_data_texture_size"];
            param_player_0p007843138_fs_param_data_texture_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_data_texture_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouse_player=0.01176471");
            param_player_0p01176471_fs_param_data_texture_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_data_texture_Texture"];
            param_player_0p01176471_fs_param_data_texture_size = CompiledEffect_player_0p01176471.Parameters["fs_param_data_texture_size"];
            param_player_0p01176471_fs_param_data_texture_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_data_texture_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouse_player=0.01568628");
            param_player_0p01568628_fs_param_data_texture_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_data_texture_Texture"];
            param_player_0p01568628_fs_param_data_texture_size = CompiledEffect_player_0p01568628.Parameters["fs_param_data_texture_size"];
            param_player_0p01568628_fs_param_data_texture_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_data_texture_dxdy"];
        }
        public static void Apply(Texture2D data_texture, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(data_texture, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D data_texture, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(data_texture, player);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D data_texture, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(data_texture, player);
        }
        public static void Using(Texture2D data_texture, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(data_texture, player);
        }
        public static void Using(Texture2D data_texture, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_data_texture_Texture != null) param_player_0_fs_param_data_texture_Texture.SetValue(FragSharpMarshal.Marshal(data_texture));
                if (param_player_0_fs_param_data_texture_size != null) param_player_0_fs_param_data_texture_size.SetValue(FragSharpMarshal.Marshal(vec(data_texture.Width, data_texture.Height)));
                if (param_player_0_fs_param_data_texture_dxdy != null) param_player_0_fs_param_data_texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(data_texture.Width, data_texture.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_data_texture_Texture != null) param_player_0p003921569_fs_param_data_texture_Texture.SetValue(FragSharpMarshal.Marshal(data_texture));
                if (param_player_0p003921569_fs_param_data_texture_size != null) param_player_0p003921569_fs_param_data_texture_size.SetValue(FragSharpMarshal.Marshal(vec(data_texture.Width, data_texture.Height)));
                if (param_player_0p003921569_fs_param_data_texture_dxdy != null) param_player_0p003921569_fs_param_data_texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(data_texture.Width, data_texture.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_data_texture_Texture != null) param_player_0p007843138_fs_param_data_texture_Texture.SetValue(FragSharpMarshal.Marshal(data_texture));
                if (param_player_0p007843138_fs_param_data_texture_size != null) param_player_0p007843138_fs_param_data_texture_size.SetValue(FragSharpMarshal.Marshal(vec(data_texture.Width, data_texture.Height)));
                if (param_player_0p007843138_fs_param_data_texture_dxdy != null) param_player_0p007843138_fs_param_data_texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(data_texture.Width, data_texture.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_data_texture_Texture != null) param_player_0p01176471_fs_param_data_texture_Texture.SetValue(FragSharpMarshal.Marshal(data_texture));
                if (param_player_0p01176471_fs_param_data_texture_size != null) param_player_0p01176471_fs_param_data_texture_size.SetValue(FragSharpMarshal.Marshal(vec(data_texture.Width, data_texture.Height)));
                if (param_player_0p01176471_fs_param_data_texture_dxdy != null) param_player_0p01176471_fs_param_data_texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(data_texture.Width, data_texture.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_data_texture_Texture != null) param_player_0p01568628_fs_param_data_texture_Texture.SetValue(FragSharpMarshal.Marshal(data_texture));
                if (param_player_0p01568628_fs_param_data_texture_size != null) param_player_0p01568628_fs_param_data_texture_size.SetValue(FragSharpMarshal.Marshal(vec(data_texture.Width, data_texture.Height)));
                if (param_player_0p01568628_fs_param_data_texture_dxdy != null) param_player_0p01568628_fs_param_data_texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(data_texture.Width, data_texture.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class DataDrawMouseCircle
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_pos;
        private static EffectParameter param_player_0_fs_param_r2;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_pos;
        private static EffectParameter param_player_0p003921569_fs_param_r2;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_pos;
        private static EffectParameter param_player_0p007843138_fs_param_r2;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_pos;
        private static EffectParameter param_player_0p01176471_fs_param_r2;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_pos;
        private static EffectParameter param_player_0p01568628_fs_param_r2;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouseCircle_player=0");
            param_player_0_fs_param_pos = CompiledEffect_player_0.Parameters["fs_param_pos"];
            param_player_0_fs_param_r2 = CompiledEffect_player_0.Parameters["fs_param_r2"];
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouseCircle_player=0.003921569");
            param_player_0p003921569_fs_param_pos = CompiledEffect_player_0p003921569.Parameters["fs_param_pos"];
            param_player_0p003921569_fs_param_r2 = CompiledEffect_player_0p003921569.Parameters["fs_param_r2"];
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouseCircle_player=0.007843138");
            param_player_0p007843138_fs_param_pos = CompiledEffect_player_0p007843138.Parameters["fs_param_pos"];
            param_player_0p007843138_fs_param_r2 = CompiledEffect_player_0p007843138.Parameters["fs_param_r2"];
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouseCircle_player=0.01176471");
            param_player_0p01176471_fs_param_pos = CompiledEffect_player_0p01176471.Parameters["fs_param_pos"];
            param_player_0p01176471_fs_param_r2 = CompiledEffect_player_0p01176471.Parameters["fs_param_r2"];
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DataDrawMouseCircle_player=0.01568628");
            param_player_0p01568628_fs_param_pos = CompiledEffect_player_0p01568628.Parameters["fs_param_pos"];
            param_player_0p01568628_fs_param_r2 = CompiledEffect_player_0p01568628.Parameters["fs_param_r2"];
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(vec2 pos, float r2, float player, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(pos, r2, player, Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec2 pos, float r2, float player, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(pos, r2, player, Data);
            GridHelper.DrawGrid();
        }
        public static void Using(vec2 pos, float r2, float player, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(pos, r2, player, Data);
        }
        public static void Using(vec2 pos, float r2, float player, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(pos, r2, player, Data);
        }
        public static void Using(vec2 pos, float r2, float player, Texture2D Data)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_pos != null) param_player_0_fs_param_pos.SetValue(FragSharpMarshal.Marshal(pos));
                if (param_player_0_fs_param_r2 != null) param_player_0_fs_param_r2.SetValue(FragSharpMarshal.Marshal(r2));
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_pos != null) param_player_0p003921569_fs_param_pos.SetValue(FragSharpMarshal.Marshal(pos));
                if (param_player_0p003921569_fs_param_r2 != null) param_player_0p003921569_fs_param_r2.SetValue(FragSharpMarshal.Marshal(r2));
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_pos != null) param_player_0p007843138_fs_param_pos.SetValue(FragSharpMarshal.Marshal(pos));
                if (param_player_0p007843138_fs_param_r2 != null) param_player_0p007843138_fs_param_r2.SetValue(FragSharpMarshal.Marshal(r2));
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_pos != null) param_player_0p01176471_fs_param_pos.SetValue(FragSharpMarshal.Marshal(pos));
                if (param_player_0p01176471_fs_param_r2 != null) param_player_0p01176471_fs_param_r2.SetValue(FragSharpMarshal.Marshal(r2));
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_pos != null) param_player_0p01568628_fs_param_pos.SetValue(FragSharpMarshal.Marshal(pos));
                if (param_player_0p01568628_fs_param_r2 != null) param_player_0p01568628_fs_param_r2.SetValue(FragSharpMarshal.Marshal(r2));
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}
















namespace Game
{
    public partial class ActionSpawn_Filter
    {
        private static Effect CompiledEffect_distribution_1_AntiMagicTeam_0;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Select_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Select_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Data_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Data_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Units_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Units_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_1_AntiMagicTeam_0p003921569;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_1_AntiMagicTeam_0p007843138;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_1_AntiMagicTeam_0p01176471;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_1_AntiMagicTeam_0p01568628;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_2_AntiMagicTeam_0;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Select_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Select_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Data_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Data_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Units_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Units_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_2_AntiMagicTeam_0p003921569;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_2_AntiMagicTeam_0p007843138;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_2_AntiMagicTeam_0p01176471;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_2_AntiMagicTeam_0p01568628;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_3_AntiMagicTeam_0;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Select_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Select_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Data_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Data_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Units_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Units_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_3_AntiMagicTeam_0p003921569;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_3_AntiMagicTeam_0p007843138;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_3_AntiMagicTeam_0p01176471;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy;
        private static Effect CompiledEffect_distribution_3_AntiMagicTeam_0p01568628;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size;
        private static EffectParameter param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy;

        public static void Init()
        {
            CompiledEffect_distribution_1_AntiMagicTeam_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=1_AntiMagicTeam=0");
            param_distribution_1_AntiMagicTeam_0_fs_param_Select_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Select_Texture"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Select_size = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Select_size"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Select_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Select_dxdy"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Data_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Data_Texture"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Data_size = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Data_size"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Data_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Data_dxdy"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Units_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Units_Texture"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Units_size = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Units_size"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Units_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Units_dxdy"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Corpses_Texture"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_size = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Corpses_size"];
            param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_size = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_size"];
            param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_1_AntiMagicTeam_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=1_AntiMagicTeam=0.003921569");
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_Texture"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_size = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_size"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_dxdy"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_Texture"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_size = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_size"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_Texture"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_size = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_size"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_Texture"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_size = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_size"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_size"];
            param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_1_AntiMagicTeam_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=1_AntiMagicTeam=0.007843138");
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_Texture"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_size = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_size"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_dxdy"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_Texture"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_size = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_size"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_Texture"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_size = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_size"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_Texture"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_size = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_size"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_size"];
            param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_1_AntiMagicTeam_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=1_AntiMagicTeam=0.01176471");
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_Texture"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_size"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_Texture"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_size"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_Texture"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_size"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_Texture"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_size"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_size"];
            param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_1_AntiMagicTeam_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=1_AntiMagicTeam=0.01568628");
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_Texture"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_size"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_Texture"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_size"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_Texture"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_size"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_Texture"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_size"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_size"];
            param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_2_AntiMagicTeam_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=2_AntiMagicTeam=0");
            param_distribution_2_AntiMagicTeam_0_fs_param_Select_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Select_Texture"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Select_size = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Select_size"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Select_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Select_dxdy"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Data_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Data_Texture"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Data_size = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Data_size"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Data_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Data_dxdy"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Units_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Units_Texture"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Units_size = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Units_size"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Units_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Units_dxdy"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Corpses_Texture"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_size = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Corpses_size"];
            param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_size = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_size"];
            param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_2_AntiMagicTeam_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=2_AntiMagicTeam=0.003921569");
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_Texture"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_size = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_size"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_dxdy"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_Texture"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_size = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_size"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_Texture"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_size = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_size"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_Texture"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_size = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_size"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_size"];
            param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_2_AntiMagicTeam_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=2_AntiMagicTeam=0.007843138");
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_Texture"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_size = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_size"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_dxdy"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_Texture"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_size = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_size"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_Texture"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_size = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_size"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_Texture"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_size = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_size"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_size"];
            param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_2_AntiMagicTeam_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=2_AntiMagicTeam=0.01176471");
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_Texture"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_size"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_Texture"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_size"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_Texture"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_size"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_Texture"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_size"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_size"];
            param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_2_AntiMagicTeam_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=2_AntiMagicTeam=0.01568628");
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_Texture"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_size"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_Texture"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_size"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_Texture"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_size"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_Texture"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_size"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_size"];
            param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_3_AntiMagicTeam_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=3_AntiMagicTeam=0");
            param_distribution_3_AntiMagicTeam_0_fs_param_Select_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Select_Texture"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Select_size = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Select_size"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Select_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Select_dxdy"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Data_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Data_Texture"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Data_size = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Data_size"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Data_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Data_dxdy"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Units_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Units_Texture"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Units_size = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Units_size"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Units_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Units_dxdy"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Corpses_Texture"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_size = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Corpses_size"];
            param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_size = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_size"];
            param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_3_AntiMagicTeam_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=3_AntiMagicTeam=0.003921569");
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_Texture"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_size = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_size"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Select_dxdy"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_Texture"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_size = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_size"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_Texture"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_size = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_size"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_Texture"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_size = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_size"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_size"];
            param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_3_AntiMagicTeam_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=3_AntiMagicTeam=0.007843138");
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_Texture"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_size = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_size"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Select_dxdy"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_Texture"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_size = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_size"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_Texture"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_size = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_size"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_Texture"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_size = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_size"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_size"];
            param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_3_AntiMagicTeam_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=3_AntiMagicTeam=0.01176471");
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_Texture"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_size"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Select_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_Texture"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_size"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_Texture"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_size"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_Texture"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_size"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_size"];
            param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.Parameters["fs_param_AntiMagic_dxdy"];
            CompiledEffect_distribution_3_AntiMagicTeam_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Filter_distribution=3_AntiMagicTeam=0.01568628");
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_Texture"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_size"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Select_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_Texture"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_size"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_Texture"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_size"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_Texture"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_size"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_Corpses_dxdy"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_Texture"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_size"];
            param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy = CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.Parameters["fs_param_AntiMagic_dxdy"];
        }
        public static void Apply(Texture2D Select, Texture2D Data, Texture2D Units, Texture2D Corpses, Texture2D AntiMagic, float distribution, float AntiMagicTeam, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Data, Units, Corpses, AntiMagic, distribution, AntiMagicTeam);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Select, Texture2D Data, Texture2D Units, Texture2D Corpses, Texture2D AntiMagic, float distribution, float AntiMagicTeam, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Data, Units, Corpses, AntiMagic, distribution, AntiMagicTeam);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Select, Texture2D Data, Texture2D Units, Texture2D Corpses, Texture2D AntiMagic, float distribution, float AntiMagicTeam, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Data, Units, Corpses, AntiMagic, distribution, AntiMagicTeam);
        }
        public static void Using(Texture2D Select, Texture2D Data, Texture2D Units, Texture2D Corpses, Texture2D AntiMagic, float distribution, float AntiMagicTeam, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Data, Units, Corpses, AntiMagic, distribution, AntiMagicTeam);
        }
        public static void Using(Texture2D Select, Texture2D Data, Texture2D Units, Texture2D Corpses, Texture2D AntiMagic, float distribution, float AntiMagicTeam)
        {
            if (abs((float)(distribution - 1)) < .0019 && abs((float)(AntiMagicTeam - 0)) < .0019)
            {
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Select_Texture != null) param_distribution_1_AntiMagicTeam_0_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Select_size != null) param_distribution_1_AntiMagicTeam_0_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Select_dxdy != null) param_distribution_1_AntiMagicTeam_0_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Data_Texture != null) param_distribution_1_AntiMagicTeam_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Data_size != null) param_distribution_1_AntiMagicTeam_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Data_dxdy != null) param_distribution_1_AntiMagicTeam_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Units_Texture != null) param_distribution_1_AntiMagicTeam_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Units_size != null) param_distribution_1_AntiMagicTeam_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Units_dxdy != null) param_distribution_1_AntiMagicTeam_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_Texture != null) param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_size != null) param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_dxdy != null) param_distribution_1_AntiMagicTeam_0_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_Texture != null) param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_size != null) param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_dxdy != null) param_distribution_1_AntiMagicTeam_0_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_1_AntiMagicTeam_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 1)) < .0019 && abs((float)(AntiMagicTeam - 0.003921569)) < .0019)
            {
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_Texture != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_size != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_dxdy != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_Texture != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_size != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_dxdy != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_Texture != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_size != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_dxdy != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_size != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy != null) param_distribution_1_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_1_AntiMagicTeam_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 1)) < .0019 && abs((float)(AntiMagicTeam - 0.007843138)) < .0019)
            {
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_Texture != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_size != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_dxdy != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_Texture != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_size != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_dxdy != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_Texture != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_size != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_dxdy != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_size != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy != null) param_distribution_1_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_1_AntiMagicTeam_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 1)) < .0019 && abs((float)(AntiMagicTeam - 0.01176471)) < .0019)
            {
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_Texture != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_size != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_dxdy != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_Texture != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_size != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_dxdy != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_Texture != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_size != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_dxdy != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_size != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy != null) param_distribution_1_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_1_AntiMagicTeam_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 1)) < .0019 && abs((float)(AntiMagicTeam - 0.01568628)) < .0019)
            {
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_Texture != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_size != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_dxdy != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_Texture != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_size != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_dxdy != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_Texture != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_size != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_dxdy != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_size != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy != null) param_distribution_1_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_1_AntiMagicTeam_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 2)) < .0019 && abs((float)(AntiMagicTeam - 0)) < .0019)
            {
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Select_Texture != null) param_distribution_2_AntiMagicTeam_0_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Select_size != null) param_distribution_2_AntiMagicTeam_0_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Select_dxdy != null) param_distribution_2_AntiMagicTeam_0_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Data_Texture != null) param_distribution_2_AntiMagicTeam_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Data_size != null) param_distribution_2_AntiMagicTeam_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Data_dxdy != null) param_distribution_2_AntiMagicTeam_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Units_Texture != null) param_distribution_2_AntiMagicTeam_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Units_size != null) param_distribution_2_AntiMagicTeam_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Units_dxdy != null) param_distribution_2_AntiMagicTeam_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_Texture != null) param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_size != null) param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_dxdy != null) param_distribution_2_AntiMagicTeam_0_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_Texture != null) param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_size != null) param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_dxdy != null) param_distribution_2_AntiMagicTeam_0_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_2_AntiMagicTeam_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 2)) < .0019 && abs((float)(AntiMagicTeam - 0.003921569)) < .0019)
            {
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_Texture != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_size != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_dxdy != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_Texture != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_size != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_dxdy != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_Texture != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_size != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_dxdy != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_size != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy != null) param_distribution_2_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_2_AntiMagicTeam_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 2)) < .0019 && abs((float)(AntiMagicTeam - 0.007843138)) < .0019)
            {
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_Texture != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_size != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_dxdy != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_Texture != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_size != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_dxdy != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_Texture != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_size != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_dxdy != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_size != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy != null) param_distribution_2_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_2_AntiMagicTeam_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 2)) < .0019 && abs((float)(AntiMagicTeam - 0.01176471)) < .0019)
            {
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_Texture != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_size != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_dxdy != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_Texture != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_size != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_dxdy != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_Texture != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_size != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_dxdy != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_size != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy != null) param_distribution_2_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_2_AntiMagicTeam_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 2)) < .0019 && abs((float)(AntiMagicTeam - 0.01568628)) < .0019)
            {
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_Texture != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_size != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_dxdy != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_Texture != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_size != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_dxdy != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_Texture != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_size != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_dxdy != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_size != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy != null) param_distribution_2_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_2_AntiMagicTeam_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 3)) < .0019 && abs((float)(AntiMagicTeam - 0)) < .0019)
            {
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Select_Texture != null) param_distribution_3_AntiMagicTeam_0_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Select_size != null) param_distribution_3_AntiMagicTeam_0_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Select_dxdy != null) param_distribution_3_AntiMagicTeam_0_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Data_Texture != null) param_distribution_3_AntiMagicTeam_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Data_size != null) param_distribution_3_AntiMagicTeam_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Data_dxdy != null) param_distribution_3_AntiMagicTeam_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Units_Texture != null) param_distribution_3_AntiMagicTeam_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Units_size != null) param_distribution_3_AntiMagicTeam_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Units_dxdy != null) param_distribution_3_AntiMagicTeam_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_Texture != null) param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_size != null) param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_dxdy != null) param_distribution_3_AntiMagicTeam_0_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_Texture != null) param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_size != null) param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_dxdy != null) param_distribution_3_AntiMagicTeam_0_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_3_AntiMagicTeam_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 3)) < .0019 && abs((float)(AntiMagicTeam - 0.003921569)) < .0019)
            {
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_Texture != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_size != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_dxdy != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_Texture != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_size != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_dxdy != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_Texture != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_size != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_dxdy != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_size != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy != null) param_distribution_3_AntiMagicTeam_0p003921569_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_3_AntiMagicTeam_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 3)) < .0019 && abs((float)(AntiMagicTeam - 0.007843138)) < .0019)
            {
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_Texture != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_size != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_dxdy != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_Texture != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_size != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_dxdy != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_Texture != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_size != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_dxdy != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_size != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy != null) param_distribution_3_AntiMagicTeam_0p007843138_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_3_AntiMagicTeam_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 3)) < .0019 && abs((float)(AntiMagicTeam - 0.01176471)) < .0019)
            {
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_Texture != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_size != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_dxdy != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_Texture != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_size != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_dxdy != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_Texture != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_size != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_dxdy != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_size != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy != null) param_distribution_3_AntiMagicTeam_0p01176471_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_3_AntiMagicTeam_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(distribution - 3)) < .0019 && abs((float)(AntiMagicTeam - 0.01568628)) < .0019)
            {
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_Texture != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_size != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_dxdy != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_Texture != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_size != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_dxdy != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_Texture != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_size != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_dxdy != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_size != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
                if (param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy != null) param_distribution_3_AntiMagicTeam_0p01568628_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
                CompiledEffect_distribution_3_AntiMagicTeam_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class ActionSpawn_Data
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Select_Texture;
        private static EffectParameter param_fs_param_Select_size;
        private static EffectParameter param_fs_param_Select_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Data");
            param_fs_param_Select_Texture = CompiledEffect.Parameters["fs_param_Select_Texture"];
            param_fs_param_Select_size = CompiledEffect.Parameters["fs_param_Select_size"];
            param_fs_param_Select_dxdy = CompiledEffect.Parameters["fs_param_Select_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Select, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Select, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Select, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Data);
        }
        public static void Using(Texture2D Select, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Data);
        }
        public static void Using(Texture2D Select, Texture2D Data)
        {
            if (param_fs_param_Select_Texture != null) param_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
            if (param_fs_param_Select_size != null) param_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
            if (param_fs_param_Select_dxdy != null) param_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}



namespace Game
{
    public partial class ActionSpawn_Unit
    {
        private static Effect CompiledEffect_raising_true;
        private static EffectParameter param_raising_true_fs_param_Select_Texture;
        private static EffectParameter param_raising_true_fs_param_Select_size;
        private static EffectParameter param_raising_true_fs_param_Select_dxdy;
        private static EffectParameter param_raising_true_fs_param_Units_Texture;
        private static EffectParameter param_raising_true_fs_param_Units_size;
        private static EffectParameter param_raising_true_fs_param_Units_dxdy;
        private static EffectParameter param_raising_true_fs_param_player;
        private static EffectParameter param_raising_true_fs_param_team;
        private static EffectParameter param_raising_true_fs_param_type;
        private static Effect CompiledEffect_raising_false;
        private static EffectParameter param_raising_false_fs_param_Select_Texture;
        private static EffectParameter param_raising_false_fs_param_Select_size;
        private static EffectParameter param_raising_false_fs_param_Select_dxdy;
        private static EffectParameter param_raising_false_fs_param_Units_Texture;
        private static EffectParameter param_raising_false_fs_param_Units_size;
        private static EffectParameter param_raising_false_fs_param_Units_dxdy;
        private static EffectParameter param_raising_false_fs_param_player;
        private static EffectParameter param_raising_false_fs_param_team;
        private static EffectParameter param_raising_false_fs_param_type;

        public static void Init()
        {
            CompiledEffect_raising_true = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Unit_raising=true");
            param_raising_true_fs_param_Select_Texture = CompiledEffect_raising_true.Parameters["fs_param_Select_Texture"];
            param_raising_true_fs_param_Select_size = CompiledEffect_raising_true.Parameters["fs_param_Select_size"];
            param_raising_true_fs_param_Select_dxdy = CompiledEffect_raising_true.Parameters["fs_param_Select_dxdy"];
            param_raising_true_fs_param_Units_Texture = CompiledEffect_raising_true.Parameters["fs_param_Units_Texture"];
            param_raising_true_fs_param_Units_size = CompiledEffect_raising_true.Parameters["fs_param_Units_size"];
            param_raising_true_fs_param_Units_dxdy = CompiledEffect_raising_true.Parameters["fs_param_Units_dxdy"];
            param_raising_true_fs_param_player = CompiledEffect_raising_true.Parameters["fs_param_player"];
            param_raising_true_fs_param_team = CompiledEffect_raising_true.Parameters["fs_param_team"];
            param_raising_true_fs_param_type = CompiledEffect_raising_true.Parameters["fs_param_type"];
            CompiledEffect_raising_false = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Unit_raising=false");
            param_raising_false_fs_param_Select_Texture = CompiledEffect_raising_false.Parameters["fs_param_Select_Texture"];
            param_raising_false_fs_param_Select_size = CompiledEffect_raising_false.Parameters["fs_param_Select_size"];
            param_raising_false_fs_param_Select_dxdy = CompiledEffect_raising_false.Parameters["fs_param_Select_dxdy"];
            param_raising_false_fs_param_Units_Texture = CompiledEffect_raising_false.Parameters["fs_param_Units_Texture"];
            param_raising_false_fs_param_Units_size = CompiledEffect_raising_false.Parameters["fs_param_Units_size"];
            param_raising_false_fs_param_Units_dxdy = CompiledEffect_raising_false.Parameters["fs_param_Units_dxdy"];
            param_raising_false_fs_param_player = CompiledEffect_raising_false.Parameters["fs_param_player"];
            param_raising_false_fs_param_team = CompiledEffect_raising_false.Parameters["fs_param_team"];
            param_raising_false_fs_param_type = CompiledEffect_raising_false.Parameters["fs_param_type"];
        }
        public static void Apply(Texture2D Select, Texture2D Units, float player, float team, float type, bool raising, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Units, player, team, type, raising);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Select, Texture2D Units, float player, float team, float type, bool raising, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Units, player, team, type, raising);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Select, Texture2D Units, float player, float team, float type, bool raising, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Units, player, team, type, raising);
        }
        public static void Using(Texture2D Select, Texture2D Units, float player, float team, float type, bool raising, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Units, player, team, type, raising);
        }
        public static void Using(Texture2D Select, Texture2D Units, float player, float team, float type, bool raising)
        {
            if (raising == true)
            {
                if (param_raising_true_fs_param_Select_Texture != null) param_raising_true_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_raising_true_fs_param_Select_size != null) param_raising_true_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_raising_true_fs_param_Select_dxdy != null) param_raising_true_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_raising_true_fs_param_Units_Texture != null) param_raising_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_raising_true_fs_param_Units_size != null) param_raising_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_raising_true_fs_param_Units_dxdy != null) param_raising_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_raising_true_fs_param_player != null) param_raising_true_fs_param_player.SetValue(FragSharpMarshal.Marshal(player));
                if (param_raising_true_fs_param_team != null) param_raising_true_fs_param_team.SetValue(FragSharpMarshal.Marshal(team));
                if (param_raising_true_fs_param_type != null) param_raising_true_fs_param_type.SetValue(FragSharpMarshal.Marshal(type));
                CompiledEffect_raising_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (raising == false)
            {
                if (param_raising_false_fs_param_Select_Texture != null) param_raising_false_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
                if (param_raising_false_fs_param_Select_size != null) param_raising_false_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
                if (param_raising_false_fs_param_Select_dxdy != null) param_raising_false_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
                if (param_raising_false_fs_param_Units_Texture != null) param_raising_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_raising_false_fs_param_Units_size != null) param_raising_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_raising_false_fs_param_Units_dxdy != null) param_raising_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_raising_false_fs_param_player != null) param_raising_false_fs_param_player.SetValue(FragSharpMarshal.Marshal(player));
                if (param_raising_false_fs_param_team != null) param_raising_false_fs_param_team.SetValue(FragSharpMarshal.Marshal(team));
                if (param_raising_false_fs_param_type != null) param_raising_false_fs_param_type.SetValue(FragSharpMarshal.Marshal(type));
                CompiledEffect_raising_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class ActionSpawn_Target
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Select_Texture;
        private static EffectParameter param_fs_param_Select_size;
        private static EffectParameter param_fs_param_Select_dxdy;
        private static EffectParameter param_fs_param_Target_Texture;
        private static EffectParameter param_fs_param_Target_size;
        private static EffectParameter param_fs_param_Target_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Target");
            param_fs_param_Select_Texture = CompiledEffect.Parameters["fs_param_Select_Texture"];
            param_fs_param_Select_size = CompiledEffect.Parameters["fs_param_Select_size"];
            param_fs_param_Select_dxdy = CompiledEffect.Parameters["fs_param_Select_dxdy"];
            param_fs_param_Target_Texture = CompiledEffect.Parameters["fs_param_Target_Texture"];
            param_fs_param_Target_size = CompiledEffect.Parameters["fs_param_Target_size"];
            param_fs_param_Target_dxdy = CompiledEffect.Parameters["fs_param_Target_dxdy"];
        }
        public static void Apply(Texture2D Select, Texture2D Target, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Target);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Select, Texture2D Target, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Target);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Select, Texture2D Target, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Target);
        }
        public static void Using(Texture2D Select, Texture2D Target, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Target);
        }
        public static void Using(Texture2D Select, Texture2D Target)
        {
            if (param_fs_param_Select_Texture != null) param_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
            if (param_fs_param_Select_size != null) param_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
            if (param_fs_param_Select_dxdy != null) param_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
            if (param_fs_param_Target_Texture != null) param_fs_param_Target_Texture.SetValue(FragSharpMarshal.Marshal(Target));
            if (param_fs_param_Target_size != null) param_fs_param_Target_size.SetValue(FragSharpMarshal.Marshal(vec(Target.Width, Target.Height)));
            if (param_fs_param_Target_dxdy != null) param_fs_param_Target_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Target.Width, Target.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class ActionSpawn_Corpse
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Select_Texture;
        private static EffectParameter param_fs_param_Select_size;
        private static EffectParameter param_fs_param_Select_dxdy;
        private static EffectParameter param_fs_param_Corpses_Texture;
        private static EffectParameter param_fs_param_Corpses_size;
        private static EffectParameter param_fs_param_Corpses_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionSpawn_Corpse");
            param_fs_param_Select_Texture = CompiledEffect.Parameters["fs_param_Select_Texture"];
            param_fs_param_Select_size = CompiledEffect.Parameters["fs_param_Select_size"];
            param_fs_param_Select_dxdy = CompiledEffect.Parameters["fs_param_Select_dxdy"];
            param_fs_param_Corpses_Texture = CompiledEffect.Parameters["fs_param_Corpses_Texture"];
            param_fs_param_Corpses_size = CompiledEffect.Parameters["fs_param_Corpses_size"];
            param_fs_param_Corpses_dxdy = CompiledEffect.Parameters["fs_param_Corpses_dxdy"];
        }
        public static void Apply(Texture2D Select, Texture2D Corpses, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Corpses);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Select, Texture2D Corpses, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Corpses);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Select, Texture2D Corpses, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Corpses);
        }
        public static void Using(Texture2D Select, Texture2D Corpses, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Corpses);
        }
        public static void Using(Texture2D Select, Texture2D Corpses)
        {
            if (param_fs_param_Select_Texture != null) param_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
            if (param_fs_param_Select_size != null) param_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
            if (param_fs_param_Select_dxdy != null) param_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
            if (param_fs_param_Corpses_Texture != null) param_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
            if (param_fs_param_Corpses_size != null) param_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
            if (param_fs_param_Corpses_dxdy != null) param_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class HashReduce
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_PreviousLevel_Texture;
        private static EffectParameter param_fs_param_PreviousLevel_size;
        private static EffectParameter param_fs_param_PreviousLevel_dxdy;
        private static EffectParameter param_fs_param_Noise_Texture;
        private static EffectParameter param_fs_param_Noise_size;
        private static EffectParameter param_fs_param_Noise_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/HashReduce");
            param_fs_param_PreviousLevel_Texture = CompiledEffect.Parameters["fs_param_PreviousLevel_Texture"];
            param_fs_param_PreviousLevel_size = CompiledEffect.Parameters["fs_param_PreviousLevel_size"];
            param_fs_param_PreviousLevel_dxdy = CompiledEffect.Parameters["fs_param_PreviousLevel_dxdy"];
            param_fs_param_Noise_Texture = CompiledEffect.Parameters["fs_param_Noise_Texture"];
            param_fs_param_Noise_size = CompiledEffect.Parameters["fs_param_Noise_size"];
            param_fs_param_Noise_dxdy = CompiledEffect.Parameters["fs_param_Noise_dxdy"];
        }
        public static void Apply(Texture2D PreviousLevel, Texture2D Noise, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel, Noise);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D PreviousLevel, Texture2D Noise, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel, Noise);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D PreviousLevel, Texture2D Noise, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel, Noise);
        }
        public static void Using(Texture2D PreviousLevel, Texture2D Noise, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel, Noise);
        }
        public static void Using(Texture2D PreviousLevel, Texture2D Noise)
        {
            if (param_fs_param_PreviousLevel_Texture != null) param_fs_param_PreviousLevel_Texture.SetValue(FragSharpMarshal.Marshal(PreviousLevel));
            if (param_fs_param_PreviousLevel_size != null) param_fs_param_PreviousLevel_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousLevel.Width, PreviousLevel.Height)));
            if (param_fs_param_PreviousLevel_dxdy != null) param_fs_param_PreviousLevel_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousLevel.Width, PreviousLevel.Height)));
            if (param_fs_param_Noise_Texture != null) param_fs_param_Noise_Texture.SetValue(FragSharpMarshal.Marshal(Noise));
            if (param_fs_param_Noise_size != null) param_fs_param_Noise_size.SetValue(FragSharpMarshal.Marshal(vec(Noise.Width, Noise.Height)));
            if (param_fs_param_Noise_dxdy != null) param_fs_param_Noise_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Noise.Width, Noise.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Hash
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_F_Texture;
        private static EffectParameter param_fs_param_F_size;
        private static EffectParameter param_fs_param_F_dxdy;
        private static EffectParameter param_fs_param_Noise_Texture;
        private static EffectParameter param_fs_param_Noise_size;
        private static EffectParameter param_fs_param_Noise_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Hash");
            param_fs_param_F_Texture = CompiledEffect.Parameters["fs_param_F_Texture"];
            param_fs_param_F_size = CompiledEffect.Parameters["fs_param_F_size"];
            param_fs_param_F_dxdy = CompiledEffect.Parameters["fs_param_F_dxdy"];
            param_fs_param_Noise_Texture = CompiledEffect.Parameters["fs_param_Noise_Texture"];
            param_fs_param_Noise_size = CompiledEffect.Parameters["fs_param_Noise_size"];
            param_fs_param_Noise_dxdy = CompiledEffect.Parameters["fs_param_Noise_dxdy"];
        }
        public static void Apply(Texture2D F, Texture2D Noise, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(F, Noise);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D F, Texture2D Noise, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(F, Noise);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D F, Texture2D Noise, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(F, Noise);
        }
        public static void Using(Texture2D F, Texture2D Noise, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(F, Noise);
        }
        public static void Using(Texture2D F, Texture2D Noise)
        {
            if (param_fs_param_F_Texture != null) param_fs_param_F_Texture.SetValue(FragSharpMarshal.Marshal(F));
            if (param_fs_param_F_size != null) param_fs_param_F_size.SetValue(FragSharpMarshal.Marshal(vec(F.Width, F.Height)));
            if (param_fs_param_F_dxdy != null) param_fs_param_F_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(F.Width, F.Height)));
            if (param_fs_param_Noise_Texture != null) param_fs_param_Noise_Texture.SetValue(FragSharpMarshal.Marshal(Noise));
            if (param_fs_param_Noise_size != null) param_fs_param_Noise_size.SetValue(FragSharpMarshal.Marshal(vec(Noise.Width, Noise.Height)));
            if (param_fs_param_Noise_dxdy != null) param_fs_param_Noise_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Noise.Width, Noise.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DataHash
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Noise_Texture;
        private static EffectParameter param_fs_param_Noise_size;
        private static EffectParameter param_fs_param_Noise_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DataHash");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Noise_Texture = CompiledEffect.Parameters["fs_param_Noise_Texture"];
            param_fs_param_Noise_size = CompiledEffect.Parameters["fs_param_Noise_size"];
            param_fs_param_Noise_dxdy = CompiledEffect.Parameters["fs_param_Noise_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Noise, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Noise);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Noise, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Noise);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Noise, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Noise);
        }
        public static void Using(Texture2D Data, Texture2D Noise, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Noise);
        }
        public static void Using(Texture2D Data, Texture2D Noise)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Noise_Texture != null) param_fs_param_Noise_Texture.SetValue(FragSharpMarshal.Marshal(Noise));
            if (param_fs_param_Noise_size != null) param_fs_param_Noise_size.SetValue(FragSharpMarshal.Marshal(vec(Noise.Width, Noise.Height)));
            if (param_fs_param_Noise_dxdy != null) param_fs_param_Noise_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Noise.Width, Noise.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class UpdateMagic
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;
        private static EffectParameter param_fs_param_CurrentData_Texture;
        private static EffectParameter param_fs_param_CurrentData_size;
        private static EffectParameter param_fs_param_CurrentData_dxdy;
        private static EffectParameter param_fs_param_PreviousData_Texture;
        private static EffectParameter param_fs_param_PreviousData_size;
        private static EffectParameter param_fs_param_PreviousData_dxdy;
        private static EffectParameter param_fs_param_Corpses_Texture;
        private static EffectParameter param_fs_param_Corpses_size;
        private static EffectParameter param_fs_param_Corpses_dxdy;
        private static EffectParameter param_fs_param_Necromancy_Texture;
        private static EffectParameter param_fs_param_Necromancy_size;
        private static EffectParameter param_fs_param_Necromancy_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/UpdateMagic");
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
            param_fs_param_CurrentData_Texture = CompiledEffect.Parameters["fs_param_CurrentData_Texture"];
            param_fs_param_CurrentData_size = CompiledEffect.Parameters["fs_param_CurrentData_size"];
            param_fs_param_CurrentData_dxdy = CompiledEffect.Parameters["fs_param_CurrentData_dxdy"];
            param_fs_param_PreviousData_Texture = CompiledEffect.Parameters["fs_param_PreviousData_Texture"];
            param_fs_param_PreviousData_size = CompiledEffect.Parameters["fs_param_PreviousData_size"];
            param_fs_param_PreviousData_dxdy = CompiledEffect.Parameters["fs_param_PreviousData_dxdy"];
            param_fs_param_Corpses_Texture = CompiledEffect.Parameters["fs_param_Corpses_Texture"];
            param_fs_param_Corpses_size = CompiledEffect.Parameters["fs_param_Corpses_size"];
            param_fs_param_Corpses_dxdy = CompiledEffect.Parameters["fs_param_Corpses_dxdy"];
            param_fs_param_Necromancy_Texture = CompiledEffect.Parameters["fs_param_Necromancy_Texture"];
            param_fs_param_Necromancy_size = CompiledEffect.Parameters["fs_param_Necromancy_size"];
            param_fs_param_Necromancy_dxdy = CompiledEffect.Parameters["fs_param_Necromancy_dxdy"];
        }
        public static void Apply(Texture2D Magic, Texture2D CurrentData, Texture2D PreviousData, Texture2D Corpses, Texture2D Necromancy, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Magic, CurrentData, PreviousData, Corpses, Necromancy);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Magic, Texture2D CurrentData, Texture2D PreviousData, Texture2D Corpses, Texture2D Necromancy, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Magic, CurrentData, PreviousData, Corpses, Necromancy);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Magic, Texture2D CurrentData, Texture2D PreviousData, Texture2D Corpses, Texture2D Necromancy, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Magic, CurrentData, PreviousData, Corpses, Necromancy);
        }
        public static void Using(Texture2D Magic, Texture2D CurrentData, Texture2D PreviousData, Texture2D Corpses, Texture2D Necromancy, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Magic, CurrentData, PreviousData, Corpses, Necromancy);
        }
        public static void Using(Texture2D Magic, Texture2D CurrentData, Texture2D PreviousData, Texture2D Corpses, Texture2D Necromancy)
        {
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            if (param_fs_param_CurrentData_Texture != null) param_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
            if (param_fs_param_CurrentData_size != null) param_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
            if (param_fs_param_CurrentData_dxdy != null) param_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
            if (param_fs_param_PreviousData_Texture != null) param_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
            if (param_fs_param_PreviousData_size != null) param_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
            if (param_fs_param_PreviousData_dxdy != null) param_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
            if (param_fs_param_Corpses_Texture != null) param_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
            if (param_fs_param_Corpses_size != null) param_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
            if (param_fs_param_Corpses_dxdy != null) param_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
            if (param_fs_param_Necromancy_Texture != null) param_fs_param_Necromancy_Texture.SetValue(FragSharpMarshal.Marshal(Necromancy));
            if (param_fs_param_Necromancy_size != null) param_fs_param_Necromancy_size.SetValue(FragSharpMarshal.Marshal(vec(Necromancy.Width, Necromancy.Height)));
            if (param_fs_param_Necromancy_dxdy != null) param_fs_param_Necromancy_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Necromancy.Width, Necromancy.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Kill
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Select_Texture;
        private static EffectParameter param_fs_param_Select_size;
        private static EffectParameter param_fs_param_Select_dxdy;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;
        private static EffectParameter param_fs_param_AntiMagic_Texture;
        private static EffectParameter param_fs_param_AntiMagic_size;
        private static EffectParameter param_fs_param_AntiMagic_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Kill");
            param_fs_param_Select_Texture = CompiledEffect.Parameters["fs_param_Select_Texture"];
            param_fs_param_Select_size = CompiledEffect.Parameters["fs_param_Select_size"];
            param_fs_param_Select_dxdy = CompiledEffect.Parameters["fs_param_Select_dxdy"];
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
            param_fs_param_AntiMagic_Texture = CompiledEffect.Parameters["fs_param_AntiMagic_Texture"];
            param_fs_param_AntiMagic_size = CompiledEffect.Parameters["fs_param_AntiMagic_size"];
            param_fs_param_AntiMagic_dxdy = CompiledEffect.Parameters["fs_param_AntiMagic_dxdy"];
        }
        public static void Apply(Texture2D Select, Texture2D Magic, Texture2D AntiMagic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Magic, AntiMagic);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Select, Texture2D Magic, Texture2D AntiMagic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Magic, AntiMagic);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Select, Texture2D Magic, Texture2D AntiMagic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Select, Magic, AntiMagic);
        }
        public static void Using(Texture2D Select, Texture2D Magic, Texture2D AntiMagic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Select, Magic, AntiMagic);
        }
        public static void Using(Texture2D Select, Texture2D Magic, Texture2D AntiMagic)
        {
            if (param_fs_param_Select_Texture != null) param_fs_param_Select_Texture.SetValue(FragSharpMarshal.Marshal(Select));
            if (param_fs_param_Select_size != null) param_fs_param_Select_size.SetValue(FragSharpMarshal.Marshal(vec(Select.Width, Select.Height)));
            if (param_fs_param_Select_dxdy != null) param_fs_param_Select_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Select.Width, Select.Height)));
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            if (param_fs_param_AntiMagic_Texture != null) param_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
            if (param_fs_param_AntiMagic_size != null) param_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
            if (param_fs_param_AntiMagic_dxdy != null) param_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class PropagateNecromancyAuro
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Necromancy_Texture;
        private static EffectParameter param_fs_param_Necromancy_size;
        private static EffectParameter param_fs_param_Necromancy_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/PropagateNecromancyAuro");
            param_fs_param_Necromancy_Texture = CompiledEffect.Parameters["fs_param_Necromancy_Texture"];
            param_fs_param_Necromancy_size = CompiledEffect.Parameters["fs_param_Necromancy_size"];
            param_fs_param_Necromancy_dxdy = CompiledEffect.Parameters["fs_param_Necromancy_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Necromancy, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Necromancy, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Necromancy, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Necromancy, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Necromancy, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Necromancy, Data, Units);
        }
        public static void Using(Texture2D Necromancy, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Necromancy, Data, Units);
        }
        public static void Using(Texture2D Necromancy, Texture2D Data, Texture2D Units)
        {
            if (param_fs_param_Necromancy_Texture != null) param_fs_param_Necromancy_Texture.SetValue(FragSharpMarshal.Marshal(Necromancy));
            if (param_fs_param_Necromancy_size != null) param_fs_param_Necromancy_size.SetValue(FragSharpMarshal.Marshal(vec(Necromancy.Width, Necromancy.Height)));
            if (param_fs_param_Necromancy_dxdy != null) param_fs_param_Necromancy_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Necromancy.Width, Necromancy.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class PropagateAntiMagicAuro
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_AntiMagic_Texture;
        private static EffectParameter param_fs_param_AntiMagic_size;
        private static EffectParameter param_fs_param_AntiMagic_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/PropagateAntiMagicAuro");
            param_fs_param_AntiMagic_Texture = CompiledEffect.Parameters["fs_param_AntiMagic_Texture"];
            param_fs_param_AntiMagic_size = CompiledEffect.Parameters["fs_param_AntiMagic_size"];
            param_fs_param_AntiMagic_dxdy = CompiledEffect.Parameters["fs_param_AntiMagic_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D AntiMagic, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(AntiMagic, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D AntiMagic, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(AntiMagic, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D AntiMagic, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(AntiMagic, Data, Units);
        }
        public static void Using(Texture2D AntiMagic, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(AntiMagic, Data, Units);
        }
        public static void Using(Texture2D AntiMagic, Texture2D Data, Texture2D Units)
        {
            if (param_fs_param_AntiMagic_Texture != null) param_fs_param_AntiMagic_Texture.SetValue(FragSharpMarshal.Marshal(AntiMagic));
            if (param_fs_param_AntiMagic_size != null) param_fs_param_AntiMagic_size.SetValue(FragSharpMarshal.Marshal(vec(AntiMagic.Width, AntiMagic.Height)));
            if (param_fs_param_AntiMagic_dxdy != null) param_fs_param_AntiMagic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiMagic.Width, AntiMagic.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Identity
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Field_Texture;
        private static EffectParameter param_fs_param_Field_size;
        private static EffectParameter param_fs_param_Field_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Identity");
            param_fs_param_Field_Texture = CompiledEffect.Parameters["fs_param_Field_Texture"];
            param_fs_param_Field_size = CompiledEffect.Parameters["fs_param_Field_size"];
            param_fs_param_Field_dxdy = CompiledEffect.Parameters["fs_param_Field_dxdy"];
        }
        public static void Apply(Texture2D Field, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Field);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Field, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Field);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Field, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Field);
        }
        public static void Using(Texture2D Field, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Field);
        }
        public static void Using(Texture2D Field)
        {
            if (param_fs_param_Field_Texture != null) param_fs_param_Field_Texture.SetValue(FragSharpMarshal.Marshal(Field));
            if (param_fs_param_Field_size != null) param_fs_param_Field_size.SetValue(FragSharpMarshal.Marshal(vec(Field.Width, Field.Height)));
            if (param_fs_param_Field_dxdy != null) param_fs_param_Field_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Field.Width, Field.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}





namespace Game
{
    public partial class Shift
    {
        private static Effect CompiledEffect_dir_0p003921569;
        private static EffectParameter param_dir_0p003921569_fs_param_Random_Texture;
        private static EffectParameter param_dir_0p003921569_fs_param_Random_size;
        private static EffectParameter param_dir_0p003921569_fs_param_Random_dxdy;
        private static Effect CompiledEffect_dir_0p007843138;
        private static EffectParameter param_dir_0p007843138_fs_param_Random_Texture;
        private static EffectParameter param_dir_0p007843138_fs_param_Random_size;
        private static EffectParameter param_dir_0p007843138_fs_param_Random_dxdy;
        private static Effect CompiledEffect_dir_0p01176471;
        private static EffectParameter param_dir_0p01176471_fs_param_Random_Texture;
        private static EffectParameter param_dir_0p01176471_fs_param_Random_size;
        private static EffectParameter param_dir_0p01176471_fs_param_Random_dxdy;
        private static Effect CompiledEffect_dir_0p01568628;
        private static EffectParameter param_dir_0p01568628_fs_param_Random_Texture;
        private static EffectParameter param_dir_0p01568628_fs_param_Random_size;
        private static EffectParameter param_dir_0p01568628_fs_param_Random_dxdy;

        public static void Init()
        {
            CompiledEffect_dir_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/Shift_dir=0.003921569");
            param_dir_0p003921569_fs_param_Random_Texture = CompiledEffect_dir_0p003921569.Parameters["fs_param_Random_Texture"];
            param_dir_0p003921569_fs_param_Random_size = CompiledEffect_dir_0p003921569.Parameters["fs_param_Random_size"];
            param_dir_0p003921569_fs_param_Random_dxdy = CompiledEffect_dir_0p003921569.Parameters["fs_param_Random_dxdy"];
            CompiledEffect_dir_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/Shift_dir=0.007843138");
            param_dir_0p007843138_fs_param_Random_Texture = CompiledEffect_dir_0p007843138.Parameters["fs_param_Random_Texture"];
            param_dir_0p007843138_fs_param_Random_size = CompiledEffect_dir_0p007843138.Parameters["fs_param_Random_size"];
            param_dir_0p007843138_fs_param_Random_dxdy = CompiledEffect_dir_0p007843138.Parameters["fs_param_Random_dxdy"];
            CompiledEffect_dir_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/Shift_dir=0.01176471");
            param_dir_0p01176471_fs_param_Random_Texture = CompiledEffect_dir_0p01176471.Parameters["fs_param_Random_Texture"];
            param_dir_0p01176471_fs_param_Random_size = CompiledEffect_dir_0p01176471.Parameters["fs_param_Random_size"];
            param_dir_0p01176471_fs_param_Random_dxdy = CompiledEffect_dir_0p01176471.Parameters["fs_param_Random_dxdy"];
            CompiledEffect_dir_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/Shift_dir=0.01568628");
            param_dir_0p01568628_fs_param_Random_Texture = CompiledEffect_dir_0p01568628.Parameters["fs_param_Random_Texture"];
            param_dir_0p01568628_fs_param_Random_size = CompiledEffect_dir_0p01568628.Parameters["fs_param_Random_size"];
            param_dir_0p01568628_fs_param_Random_dxdy = CompiledEffect_dir_0p01568628.Parameters["fs_param_Random_dxdy"];
        }
        public static void Apply(Texture2D Random, float dir, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Random, dir);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Random, float dir, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Random, dir);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Random, float dir, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Random, dir);
        }
        public static void Using(Texture2D Random, float dir, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Random, dir);
        }
        public static void Using(Texture2D Random, float dir)
        {
            if (abs((float)(dir - 0.003921569)) < .0019)
            {
                if (param_dir_0p003921569_fs_param_Random_Texture != null) param_dir_0p003921569_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
                if (param_dir_0p003921569_fs_param_Random_size != null) param_dir_0p003921569_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
                if (param_dir_0p003921569_fs_param_Random_dxdy != null) param_dir_0p003921569_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
                CompiledEffect_dir_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.007843138)) < .0019)
            {
                if (param_dir_0p007843138_fs_param_Random_Texture != null) param_dir_0p007843138_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
                if (param_dir_0p007843138_fs_param_Random_size != null) param_dir_0p007843138_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
                if (param_dir_0p007843138_fs_param_Random_dxdy != null) param_dir_0p007843138_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
                CompiledEffect_dir_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.01176471)) < .0019)
            {
                if (param_dir_0p01176471_fs_param_Random_Texture != null) param_dir_0p01176471_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
                if (param_dir_0p01176471_fs_param_Random_size != null) param_dir_0p01176471_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
                if (param_dir_0p01176471_fs_param_Random_dxdy != null) param_dir_0p01176471_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
                CompiledEffect_dir_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(dir - 0.01568628)) < .0019)
            {
                if (param_dir_0p01568628_fs_param_Random_Texture != null) param_dir_0p01568628_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
                if (param_dir_0p01568628_fs_param_Random_size != null) param_dir_0p01568628_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
                if (param_dir_0p01568628_fs_param_Random_dxdy != null) param_dir_0p01568628_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
                CompiledEffect_dir_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class DestroyAllBuildings
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_Units_Texture;
        private static EffectParameter param_player_0_fs_param_Units_size;
        private static EffectParameter param_player_0_fs_param_Units_dxdy;
        private static EffectParameter param_player_0_fs_param_Building_Texture;
        private static EffectParameter param_player_0_fs_param_Building_size;
        private static EffectParameter param_player_0_fs_param_Building_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Building_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Building_size;
        private static EffectParameter param_player_0p003921569_fs_param_Building_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Building_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Building_size;
        private static EffectParameter param_player_0p007843138_fs_param_Building_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Building_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Building_size;
        private static EffectParameter param_player_0p01176471_fs_param_Building_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Building_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Building_size;
        private static EffectParameter param_player_0p01568628_fs_param_Building_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DestroyAllBuildings_player=0");
            param_player_0_fs_param_Units_Texture = CompiledEffect_player_0.Parameters["fs_param_Units_Texture"];
            param_player_0_fs_param_Units_size = CompiledEffect_player_0.Parameters["fs_param_Units_size"];
            param_player_0_fs_param_Units_dxdy = CompiledEffect_player_0.Parameters["fs_param_Units_dxdy"];
            param_player_0_fs_param_Building_Texture = CompiledEffect_player_0.Parameters["fs_param_Building_Texture"];
            param_player_0_fs_param_Building_size = CompiledEffect_player_0.Parameters["fs_param_Building_size"];
            param_player_0_fs_param_Building_dxdy = CompiledEffect_player_0.Parameters["fs_param_Building_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DestroyAllBuildings_player=0.003921569");
            param_player_0p003921569_fs_param_Units_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_fs_param_Units_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_size"];
            param_player_0p003921569_fs_param_Units_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_player_0p003921569_fs_param_Building_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Building_Texture"];
            param_player_0p003921569_fs_param_Building_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Building_size"];
            param_player_0p003921569_fs_param_Building_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Building_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DestroyAllBuildings_player=0.007843138");
            param_player_0p007843138_fs_param_Units_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_fs_param_Units_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_size"];
            param_player_0p007843138_fs_param_Units_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_player_0p007843138_fs_param_Building_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Building_Texture"];
            param_player_0p007843138_fs_param_Building_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Building_size"];
            param_player_0p007843138_fs_param_Building_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Building_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DestroyAllBuildings_player=0.01176471");
            param_player_0p01176471_fs_param_Units_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_fs_param_Units_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_size"];
            param_player_0p01176471_fs_param_Units_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_player_0p01176471_fs_param_Building_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Building_Texture"];
            param_player_0p01176471_fs_param_Building_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Building_size"];
            param_player_0p01176471_fs_param_Building_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Building_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DestroyAllBuildings_player=0.01568628");
            param_player_0p01568628_fs_param_Units_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_fs_param_Units_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_size"];
            param_player_0p01568628_fs_param_Units_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_player_0p01568628_fs_param_Building_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Building_Texture"];
            param_player_0p01568628_fs_param_Building_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Building_size"];
            param_player_0p01568628_fs_param_Building_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Building_dxdy"];
        }
        public static void Apply(Texture2D Units, Texture2D Building, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Building, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Units, Texture2D Building, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Building, player);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Units, Texture2D Building, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Building, player);
        }
        public static void Using(Texture2D Units, Texture2D Building, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Building, player);
        }
        public static void Using(Texture2D Units, Texture2D Building, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_Units_Texture != null) param_player_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_fs_param_Units_size != null) param_player_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Units_dxdy != null) param_player_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Building_Texture != null) param_player_0_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
                if (param_player_0_fs_param_Building_size != null) param_player_0_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
                if (param_player_0_fs_param_Building_dxdy != null) param_player_0_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_Units_Texture != null) param_player_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_fs_param_Units_size != null) param_player_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Units_dxdy != null) param_player_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Building_Texture != null) param_player_0p003921569_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
                if (param_player_0p003921569_fs_param_Building_size != null) param_player_0p003921569_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
                if (param_player_0p003921569_fs_param_Building_dxdy != null) param_player_0p003921569_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_Units_Texture != null) param_player_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_fs_param_Units_size != null) param_player_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Units_dxdy != null) param_player_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Building_Texture != null) param_player_0p007843138_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
                if (param_player_0p007843138_fs_param_Building_size != null) param_player_0p007843138_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
                if (param_player_0p007843138_fs_param_Building_dxdy != null) param_player_0p007843138_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_Units_Texture != null) param_player_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_fs_param_Units_size != null) param_player_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Units_dxdy != null) param_player_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Building_Texture != null) param_player_0p01176471_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
                if (param_player_0p01176471_fs_param_Building_size != null) param_player_0p01176471_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
                if (param_player_0p01176471_fs_param_Building_dxdy != null) param_player_0p01176471_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_Units_Texture != null) param_player_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_fs_param_Units_size != null) param_player_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Units_dxdy != null) param_player_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Building_Texture != null) param_player_0p01568628_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
                if (param_player_0p01568628_fs_param_Building_size != null) param_player_0p01568628_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
                if (param_player_0p01568628_fs_param_Building_dxdy != null) param_player_0p01568628_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class DragonLordEngaged
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_Units_Texture;
        private static EffectParameter param_player_0_fs_param_Units_size;
        private static EffectParameter param_player_0_fs_param_Units_dxdy;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fs_param_PathToOtherTeams_Texture;
        private static EffectParameter param_player_0_fs_param_PathToOtherTeams_size;
        private static EffectParameter param_player_0_fs_param_PathToOtherTeams_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_PathToOtherTeams_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_PathToOtherTeams_size;
        private static EffectParameter param_player_0p003921569_fs_param_PathToOtherTeams_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_PathToOtherTeams_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_PathToOtherTeams_size;
        private static EffectParameter param_player_0p007843138_fs_param_PathToOtherTeams_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_PathToOtherTeams_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_PathToOtherTeams_size;
        private static EffectParameter param_player_0p01176471_fs_param_PathToOtherTeams_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_PathToOtherTeams_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_PathToOtherTeams_size;
        private static EffectParameter param_player_0p01568628_fs_param_PathToOtherTeams_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordEngaged_player=0");
            param_player_0_fs_param_Units_Texture = CompiledEffect_player_0.Parameters["fs_param_Units_Texture"];
            param_player_0_fs_param_Units_size = CompiledEffect_player_0.Parameters["fs_param_Units_size"];
            param_player_0_fs_param_Units_dxdy = CompiledEffect_player_0.Parameters["fs_param_Units_dxdy"];
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_fs_param_PathToOtherTeams_Texture = CompiledEffect_player_0.Parameters["fs_param_PathToOtherTeams_Texture"];
            param_player_0_fs_param_PathToOtherTeams_size = CompiledEffect_player_0.Parameters["fs_param_PathToOtherTeams_size"];
            param_player_0_fs_param_PathToOtherTeams_dxdy = CompiledEffect_player_0.Parameters["fs_param_PathToOtherTeams_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordEngaged_player=0.003921569");
            param_player_0p003921569_fs_param_Units_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_fs_param_Units_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_size"];
            param_player_0p003921569_fs_param_Units_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fs_param_PathToOtherTeams_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_PathToOtherTeams_Texture"];
            param_player_0p003921569_fs_param_PathToOtherTeams_size = CompiledEffect_player_0p003921569.Parameters["fs_param_PathToOtherTeams_size"];
            param_player_0p003921569_fs_param_PathToOtherTeams_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_PathToOtherTeams_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordEngaged_player=0.007843138");
            param_player_0p007843138_fs_param_Units_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_fs_param_Units_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_size"];
            param_player_0p007843138_fs_param_Units_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fs_param_PathToOtherTeams_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_PathToOtherTeams_Texture"];
            param_player_0p007843138_fs_param_PathToOtherTeams_size = CompiledEffect_player_0p007843138.Parameters["fs_param_PathToOtherTeams_size"];
            param_player_0p007843138_fs_param_PathToOtherTeams_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_PathToOtherTeams_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordEngaged_player=0.01176471");
            param_player_0p01176471_fs_param_Units_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_fs_param_Units_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_size"];
            param_player_0p01176471_fs_param_Units_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fs_param_PathToOtherTeams_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_PathToOtherTeams_Texture"];
            param_player_0p01176471_fs_param_PathToOtherTeams_size = CompiledEffect_player_0p01176471.Parameters["fs_param_PathToOtherTeams_size"];
            param_player_0p01176471_fs_param_PathToOtherTeams_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_PathToOtherTeams_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordEngaged_player=0.01568628");
            param_player_0p01568628_fs_param_Units_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_fs_param_Units_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_size"];
            param_player_0p01568628_fs_param_Units_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fs_param_PathToOtherTeams_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_PathToOtherTeams_Texture"];
            param_player_0p01568628_fs_param_PathToOtherTeams_size = CompiledEffect_player_0p01568628.Parameters["fs_param_PathToOtherTeams_size"];
            param_player_0p01568628_fs_param_PathToOtherTeams_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_PathToOtherTeams_dxdy"];
        }
        public static void Apply(Texture2D Units, Texture2D Data, Texture2D PathToOtherTeams, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, PathToOtherTeams, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Units, Texture2D Data, Texture2D PathToOtherTeams, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, PathToOtherTeams, player);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Units, Texture2D Data, Texture2D PathToOtherTeams, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, PathToOtherTeams, player);
        }
        public static void Using(Texture2D Units, Texture2D Data, Texture2D PathToOtherTeams, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, PathToOtherTeams, player);
        }
        public static void Using(Texture2D Units, Texture2D Data, Texture2D PathToOtherTeams, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_Units_Texture != null) param_player_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_fs_param_Units_size != null) param_player_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Units_dxdy != null) param_player_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_PathToOtherTeams_Texture != null) param_player_0_fs_param_PathToOtherTeams_Texture.SetValue(FragSharpMarshal.Marshal(PathToOtherTeams));
                if (param_player_0_fs_param_PathToOtherTeams_size != null) param_player_0_fs_param_PathToOtherTeams_size.SetValue(FragSharpMarshal.Marshal(vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                if (param_player_0_fs_param_PathToOtherTeams_dxdy != null) param_player_0_fs_param_PathToOtherTeams_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_Units_Texture != null) param_player_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_fs_param_Units_size != null) param_player_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Units_dxdy != null) param_player_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_PathToOtherTeams_Texture != null) param_player_0p003921569_fs_param_PathToOtherTeams_Texture.SetValue(FragSharpMarshal.Marshal(PathToOtherTeams));
                if (param_player_0p003921569_fs_param_PathToOtherTeams_size != null) param_player_0p003921569_fs_param_PathToOtherTeams_size.SetValue(FragSharpMarshal.Marshal(vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                if (param_player_0p003921569_fs_param_PathToOtherTeams_dxdy != null) param_player_0p003921569_fs_param_PathToOtherTeams_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_Units_Texture != null) param_player_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_fs_param_Units_size != null) param_player_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Units_dxdy != null) param_player_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_PathToOtherTeams_Texture != null) param_player_0p007843138_fs_param_PathToOtherTeams_Texture.SetValue(FragSharpMarshal.Marshal(PathToOtherTeams));
                if (param_player_0p007843138_fs_param_PathToOtherTeams_size != null) param_player_0p007843138_fs_param_PathToOtherTeams_size.SetValue(FragSharpMarshal.Marshal(vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                if (param_player_0p007843138_fs_param_PathToOtherTeams_dxdy != null) param_player_0p007843138_fs_param_PathToOtherTeams_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_Units_Texture != null) param_player_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_fs_param_Units_size != null) param_player_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Units_dxdy != null) param_player_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_PathToOtherTeams_Texture != null) param_player_0p01176471_fs_param_PathToOtherTeams_Texture.SetValue(FragSharpMarshal.Marshal(PathToOtherTeams));
                if (param_player_0p01176471_fs_param_PathToOtherTeams_size != null) param_player_0p01176471_fs_param_PathToOtherTeams_size.SetValue(FragSharpMarshal.Marshal(vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                if (param_player_0p01176471_fs_param_PathToOtherTeams_dxdy != null) param_player_0p01176471_fs_param_PathToOtherTeams_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_Units_Texture != null) param_player_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_fs_param_Units_size != null) param_player_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Units_dxdy != null) param_player_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_PathToOtherTeams_Texture != null) param_player_0p01568628_fs_param_PathToOtherTeams_Texture.SetValue(FragSharpMarshal.Marshal(PathToOtherTeams));
                if (param_player_0p01568628_fs_param_PathToOtherTeams_size != null) param_player_0p01568628_fs_param_PathToOtherTeams_size.SetValue(FragSharpMarshal.Marshal(vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                if (param_player_0p01568628_fs_param_PathToOtherTeams_dxdy != null) param_player_0p01568628_fs_param_PathToOtherTeams_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class RemoveDragonLordData
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_Units_Texture;
        private static EffectParameter param_player_0_fs_param_Units_size;
        private static EffectParameter param_player_0_fs_param_Units_dxdy;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordData_player=0");
            param_player_0_fs_param_Units_Texture = CompiledEffect_player_0.Parameters["fs_param_Units_Texture"];
            param_player_0_fs_param_Units_size = CompiledEffect_player_0.Parameters["fs_param_Units_size"];
            param_player_0_fs_param_Units_dxdy = CompiledEffect_player_0.Parameters["fs_param_Units_dxdy"];
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordData_player=0.003921569");
            param_player_0p003921569_fs_param_Units_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_fs_param_Units_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_size"];
            param_player_0p003921569_fs_param_Units_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordData_player=0.007843138");
            param_player_0p007843138_fs_param_Units_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_fs_param_Units_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_size"];
            param_player_0p007843138_fs_param_Units_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordData_player=0.01176471");
            param_player_0p01176471_fs_param_Units_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_fs_param_Units_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_size"];
            param_player_0p01176471_fs_param_Units_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordData_player=0.01568628");
            param_player_0p01568628_fs_param_Units_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_fs_param_Units_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_size"];
            param_player_0p01568628_fs_param_Units_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, player);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, player);
        }
        public static void Using(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, player);
        }
        public static void Using(Texture2D Units, Texture2D Data, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_Units_Texture != null) param_player_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_fs_param_Units_size != null) param_player_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Units_dxdy != null) param_player_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_Units_Texture != null) param_player_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_fs_param_Units_size != null) param_player_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Units_dxdy != null) param_player_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_Units_Texture != null) param_player_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_fs_param_Units_size != null) param_player_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Units_dxdy != null) param_player_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_Units_Texture != null) param_player_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_fs_param_Units_size != null) param_player_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Units_dxdy != null) param_player_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_Units_Texture != null) param_player_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_fs_param_Units_size != null) param_player_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Units_dxdy != null) param_player_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class RemoveDragonLordUnit
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_Units_Texture;
        private static EffectParameter param_player_0_fs_param_Units_size;
        private static EffectParameter param_player_0_fs_param_Units_dxdy;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordUnit_player=0");
            param_player_0_fs_param_Units_Texture = CompiledEffect_player_0.Parameters["fs_param_Units_Texture"];
            param_player_0_fs_param_Units_size = CompiledEffect_player_0.Parameters["fs_param_Units_size"];
            param_player_0_fs_param_Units_dxdy = CompiledEffect_player_0.Parameters["fs_param_Units_dxdy"];
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordUnit_player=0.003921569");
            param_player_0p003921569_fs_param_Units_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_fs_param_Units_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_size"];
            param_player_0p003921569_fs_param_Units_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordUnit_player=0.007843138");
            param_player_0p007843138_fs_param_Units_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_fs_param_Units_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_size"];
            param_player_0p007843138_fs_param_Units_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordUnit_player=0.01176471");
            param_player_0p01176471_fs_param_Units_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_fs_param_Units_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_size"];
            param_player_0p01176471_fs_param_Units_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/RemoveDragonLordUnit_player=0.01568628");
            param_player_0p01568628_fs_param_Units_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_fs_param_Units_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_size"];
            param_player_0p01568628_fs_param_Units_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, player);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, player);
        }
        public static void Using(Texture2D Units, Texture2D Data, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, player);
        }
        public static void Using(Texture2D Units, Texture2D Data, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_Units_Texture != null) param_player_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_fs_param_Units_size != null) param_player_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Units_dxdy != null) param_player_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_Units_Texture != null) param_player_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_fs_param_Units_size != null) param_player_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Units_dxdy != null) param_player_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_Units_Texture != null) param_player_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_fs_param_Units_size != null) param_player_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Units_dxdy != null) param_player_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_Units_Texture != null) param_player_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_fs_param_Units_size != null) param_player_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Units_dxdy != null) param_player_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_Units_Texture != null) param_player_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_fs_param_Units_size != null) param_player_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Units_dxdy != null) param_player_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class SetTeams
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Teams;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/SetTeams");
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Teams = CompiledEffect.Parameters["fs_param_Teams"];
        }
        public static void Apply(Texture2D Units, Texture2D Data, PlayerTuple Teams, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, Teams);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Units, Texture2D Data, PlayerTuple Teams, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, Teams);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Units, Texture2D Data, PlayerTuple Teams, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units, Data, Teams);
        }
        public static void Using(Texture2D Units, Texture2D Data, PlayerTuple Teams, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units, Data, Teams);
        }
        public static void Using(Texture2D Units, Texture2D Data, PlayerTuple Teams)
        {
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Teams != null) param_fs_param_Teams.SetValue(FragSharpMarshal.Marshal(Teams));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class UnitMigrate
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/UnitMigrate");
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Units);
        }
        public static void Using(Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Units);
        }
        public static void Using(Texture2D Units)
        {
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BenchmarkTest_TextureLookup4x4
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_s1_Texture;
        private static EffectParameter param_fs_param_s1_size;
        private static EffectParameter param_fs_param_s1_dxdy;
        private static EffectParameter param_fs_param_s2_Texture;
        private static EffectParameter param_fs_param_s2_size;
        private static EffectParameter param_fs_param_s2_dxdy;
        private static EffectParameter param_fs_param_s3_Texture;
        private static EffectParameter param_fs_param_s3_size;
        private static EffectParameter param_fs_param_s3_dxdy;
        private static EffectParameter param_fs_param_s4_Texture;
        private static EffectParameter param_fs_param_s4_size;
        private static EffectParameter param_fs_param_s4_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BenchmarkTest_TextureLookup4x4");
            param_fs_param_s1_Texture = CompiledEffect.Parameters["fs_param_s1_Texture"];
            param_fs_param_s1_size = CompiledEffect.Parameters["fs_param_s1_size"];
            param_fs_param_s1_dxdy = CompiledEffect.Parameters["fs_param_s1_dxdy"];
            param_fs_param_s2_Texture = CompiledEffect.Parameters["fs_param_s2_Texture"];
            param_fs_param_s2_size = CompiledEffect.Parameters["fs_param_s2_size"];
            param_fs_param_s2_dxdy = CompiledEffect.Parameters["fs_param_s2_dxdy"];
            param_fs_param_s3_Texture = CompiledEffect.Parameters["fs_param_s3_Texture"];
            param_fs_param_s3_size = CompiledEffect.Parameters["fs_param_s3_size"];
            param_fs_param_s3_dxdy = CompiledEffect.Parameters["fs_param_s3_dxdy"];
            param_fs_param_s4_Texture = CompiledEffect.Parameters["fs_param_s4_Texture"];
            param_fs_param_s4_size = CompiledEffect.Parameters["fs_param_s4_size"];
            param_fs_param_s4_dxdy = CompiledEffect.Parameters["fs_param_s4_dxdy"];
        }
        public static void Apply(Texture2D s1, Texture2D s2, Texture2D s3, Texture2D s4, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s1, s2, s3, s4);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D s1, Texture2D s2, Texture2D s3, Texture2D s4, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s1, s2, s3, s4);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D s1, Texture2D s2, Texture2D s3, Texture2D s4, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s1, s2, s3, s4);
        }
        public static void Using(Texture2D s1, Texture2D s2, Texture2D s3, Texture2D s4, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s1, s2, s3, s4);
        }
        public static void Using(Texture2D s1, Texture2D s2, Texture2D s3, Texture2D s4)
        {
            if (param_fs_param_s1_Texture != null) param_fs_param_s1_Texture.SetValue(FragSharpMarshal.Marshal(s1));
            if (param_fs_param_s1_size != null) param_fs_param_s1_size.SetValue(FragSharpMarshal.Marshal(vec(s1.Width, s1.Height)));
            if (param_fs_param_s1_dxdy != null) param_fs_param_s1_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s1.Width, s1.Height)));
            if (param_fs_param_s2_Texture != null) param_fs_param_s2_Texture.SetValue(FragSharpMarshal.Marshal(s2));
            if (param_fs_param_s2_size != null) param_fs_param_s2_size.SetValue(FragSharpMarshal.Marshal(vec(s2.Width, s2.Height)));
            if (param_fs_param_s2_dxdy != null) param_fs_param_s2_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s2.Width, s2.Height)));
            if (param_fs_param_s3_Texture != null) param_fs_param_s3_Texture.SetValue(FragSharpMarshal.Marshal(s3));
            if (param_fs_param_s3_size != null) param_fs_param_s3_size.SetValue(FragSharpMarshal.Marshal(vec(s3.Width, s3.Height)));
            if (param_fs_param_s3_dxdy != null) param_fs_param_s3_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s3.Width, s3.Height)));
            if (param_fs_param_s4_Texture != null) param_fs_param_s4_Texture.SetValue(FragSharpMarshal.Marshal(s4));
            if (param_fs_param_s4_size != null) param_fs_param_s4_size.SetValue(FragSharpMarshal.Marshal(vec(s4.Width, s4.Height)));
            if (param_fs_param_s4_dxdy != null) param_fs_param_s4_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s4.Width, s4.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BenchmarkTest_TextureLookup1x1
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_s_Texture;
        private static EffectParameter param_fs_param_s_size;
        private static EffectParameter param_fs_param_s_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BenchmarkTest_TextureLookup1x1");
            param_fs_param_s_Texture = CompiledEffect.Parameters["fs_param_s_Texture"];
            param_fs_param_s_size = CompiledEffect.Parameters["fs_param_s_size"];
            param_fs_param_s_dxdy = CompiledEffect.Parameters["fs_param_s_dxdy"];
        }
        public static void Apply(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
        }
        public static void Using(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
        }
        public static void Using(Texture2D s)
        {
            if (param_fs_param_s_Texture != null) param_fs_param_s_Texture.SetValue(FragSharpMarshal.Marshal(s));
            if (param_fs_param_s_size != null) param_fs_param_s_size.SetValue(FragSharpMarshal.Marshal(vec(s.Width, s.Height)));
            if (param_fs_param_s_dxdy != null) param_fs_param_s_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s.Width, s.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BenchmarkTest_TextureLookupWithConditional
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_s_Texture;
        private static EffectParameter param_fs_param_s_size;
        private static EffectParameter param_fs_param_s_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BenchmarkTest_TextureLookupWithConditional");
            param_fs_param_s_Texture = CompiledEffect.Parameters["fs_param_s_Texture"];
            param_fs_param_s_size = CompiledEffect.Parameters["fs_param_s_size"];
            param_fs_param_s_dxdy = CompiledEffect.Parameters["fs_param_s_dxdy"];
        }
        public static void Apply(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
        }
        public static void Using(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
        }
        public static void Using(Texture2D s)
        {
            if (param_fs_param_s_Texture != null) param_fs_param_s_Texture.SetValue(FragSharpMarshal.Marshal(s));
            if (param_fs_param_s_size != null) param_fs_param_s_size.SetValue(FragSharpMarshal.Marshal(vec(s.Width, s.Height)));
            if (param_fs_param_s_dxdy != null) param_fs_param_s_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s.Width, s.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BenchmarkTest_TextureLookupWithComplexMath
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_s_Texture;
        private static EffectParameter param_fs_param_s_size;
        private static EffectParameter param_fs_param_s_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BenchmarkTest_TextureLookupWithComplexMath");
            param_fs_param_s_Texture = CompiledEffect.Parameters["fs_param_s_Texture"];
            param_fs_param_s_size = CompiledEffect.Parameters["fs_param_s_size"];
            param_fs_param_s_dxdy = CompiledEffect.Parameters["fs_param_s_dxdy"];
        }
        public static void Apply(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
        }
        public static void Using(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
        }
        public static void Using(Texture2D s)
        {
            if (param_fs_param_s_Texture != null) param_fs_param_s_Texture.SetValue(FragSharpMarshal.Marshal(s));
            if (param_fs_param_s_size != null) param_fs_param_s_size.SetValue(FragSharpMarshal.Marshal(vec(s.Width, s.Height)));
            if (param_fs_param_s_dxdy != null) param_fs_param_s_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s.Width, s.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BenchmarkTest_TextureLookup1x5
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_s_Texture;
        private static EffectParameter param_fs_param_s_size;
        private static EffectParameter param_fs_param_s_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BenchmarkTest_TextureLookup1x5");
            param_fs_param_s_Texture = CompiledEffect.Parameters["fs_param_s_Texture"];
            param_fs_param_s_size = CompiledEffect.Parameters["fs_param_s_size"];
            param_fs_param_s_dxdy = CompiledEffect.Parameters["fs_param_s_dxdy"];
        }
        public static void Apply(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
        }
        public static void Using(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
        }
        public static void Using(Texture2D s)
        {
            if (param_fs_param_s_Texture != null) param_fs_param_s_Texture.SetValue(FragSharpMarshal.Marshal(s));
            if (param_fs_param_s_size != null) param_fs_param_s_size.SetValue(FragSharpMarshal.Marshal(vec(s.Width, s.Height)));
            if (param_fs_param_s_dxdy != null) param_fs_param_s_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s.Width, s.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BenchmarkTest_MathPacking
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_s_Texture;
        private static EffectParameter param_fs_param_s_size;
        private static EffectParameter param_fs_param_s_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BenchmarkTest_MathPacking");
            param_fs_param_s_Texture = CompiledEffect.Parameters["fs_param_s_Texture"];
            param_fs_param_s_size = CompiledEffect.Parameters["fs_param_s_size"];
            param_fs_param_s_dxdy = CompiledEffect.Parameters["fs_param_s_dxdy"];
        }
        public static void Apply(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
        }
        public static void Using(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
        }
        public static void Using(Texture2D s)
        {
            if (param_fs_param_s_Texture != null) param_fs_param_s_Texture.SetValue(FragSharpMarshal.Marshal(s));
            if (param_fs_param_s_size != null) param_fs_param_s_size.SetValue(FragSharpMarshal.Marshal(vec(s.Width, s.Height)));
            if (param_fs_param_s_dxdy != null) param_fs_param_s_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s.Width, s.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BenchmarkTest_MathPackingVec
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_s_Texture;
        private static EffectParameter param_fs_param_s_size;
        private static EffectParameter param_fs_param_s_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BenchmarkTest_MathPackingVec");
            param_fs_param_s_Texture = CompiledEffect.Parameters["fs_param_s_Texture"];
            param_fs_param_s_size = CompiledEffect.Parameters["fs_param_s_size"];
            param_fs_param_s_dxdy = CompiledEffect.Parameters["fs_param_s_dxdy"];
        }
        public static void Apply(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(s);
        }
        public static void Using(Texture2D s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(s);
        }
        public static void Using(Texture2D s)
        {
            if (param_fs_param_s_Texture != null) param_fs_param_s_Texture.SetValue(FragSharpMarshal.Marshal(s));
            if (param_fs_param_s_size != null) param_fs_param_s_size.SetValue(FragSharpMarshal.Marshal(vec(s.Width, s.Height)));
            if (param_fs_param_s_dxdy != null) param_fs_param_s_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(s.Width, s.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}






namespace Game
{
    public partial class DrawTerritoryPlayer
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_vs_param_cameraPos;
        private static EffectParameter param_player_0_vs_param_cameraAspect;
        private static EffectParameter param_player_0_fs_param_Path_Texture;
        private static EffectParameter param_player_0_fs_param_Path_size;
        private static EffectParameter param_player_0_fs_param_Path_dxdy;
        private static EffectParameter param_player_0_fs_param_cutoff;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_vs_param_cameraPos;
        private static EffectParameter param_player_0p003921569_vs_param_cameraAspect;
        private static EffectParameter param_player_0p003921569_fs_param_Path_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Path_size;
        private static EffectParameter param_player_0p003921569_fs_param_Path_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_cutoff;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_vs_param_cameraPos;
        private static EffectParameter param_player_0p007843138_vs_param_cameraAspect;
        private static EffectParameter param_player_0p007843138_fs_param_Path_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Path_size;
        private static EffectParameter param_player_0p007843138_fs_param_Path_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_cutoff;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_vs_param_cameraPos;
        private static EffectParameter param_player_0p01176471_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01176471_fs_param_Path_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Path_size;
        private static EffectParameter param_player_0p01176471_fs_param_Path_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_cutoff;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_vs_param_cameraPos;
        private static EffectParameter param_player_0p01568628_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01568628_fs_param_Path_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Path_size;
        private static EffectParameter param_player_0p01568628_fs_param_Path_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_cutoff;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTerritoryPlayer_player=0");
            param_player_0_vs_param_cameraPos = CompiledEffect_player_0.Parameters["vs_param_cameraPos"];
            param_player_0_vs_param_cameraAspect = CompiledEffect_player_0.Parameters["vs_param_cameraAspect"];
            param_player_0_fs_param_Path_Texture = CompiledEffect_player_0.Parameters["fs_param_Path_Texture"];
            param_player_0_fs_param_Path_size = CompiledEffect_player_0.Parameters["fs_param_Path_size"];
            param_player_0_fs_param_Path_dxdy = CompiledEffect_player_0.Parameters["fs_param_Path_dxdy"];
            param_player_0_fs_param_cutoff = CompiledEffect_player_0.Parameters["fs_param_cutoff"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTerritoryPlayer_player=0.003921569");
            param_player_0p003921569_vs_param_cameraPos = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraPos"];
            param_player_0p003921569_vs_param_cameraAspect = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraAspect"];
            param_player_0p003921569_fs_param_Path_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Path_Texture"];
            param_player_0p003921569_fs_param_Path_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Path_size"];
            param_player_0p003921569_fs_param_Path_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Path_dxdy"];
            param_player_0p003921569_fs_param_cutoff = CompiledEffect_player_0p003921569.Parameters["fs_param_cutoff"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTerritoryPlayer_player=0.007843138");
            param_player_0p007843138_vs_param_cameraPos = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraPos"];
            param_player_0p007843138_vs_param_cameraAspect = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraAspect"];
            param_player_0p007843138_fs_param_Path_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Path_Texture"];
            param_player_0p007843138_fs_param_Path_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Path_size"];
            param_player_0p007843138_fs_param_Path_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Path_dxdy"];
            param_player_0p007843138_fs_param_cutoff = CompiledEffect_player_0p007843138.Parameters["fs_param_cutoff"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTerritoryPlayer_player=0.01176471");
            param_player_0p01176471_vs_param_cameraPos = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraPos"];
            param_player_0p01176471_vs_param_cameraAspect = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraAspect"];
            param_player_0p01176471_fs_param_Path_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Path_Texture"];
            param_player_0p01176471_fs_param_Path_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Path_size"];
            param_player_0p01176471_fs_param_Path_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Path_dxdy"];
            param_player_0p01176471_fs_param_cutoff = CompiledEffect_player_0p01176471.Parameters["fs_param_cutoff"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTerritoryPlayer_player=0.01568628");
            param_player_0p01568628_vs_param_cameraPos = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraPos"];
            param_player_0p01568628_vs_param_cameraAspect = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraAspect"];
            param_player_0p01568628_fs_param_Path_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Path_Texture"];
            param_player_0p01568628_fs_param_Path_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Path_size"];
            param_player_0p01568628_fs_param_Path_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Path_dxdy"];
            param_player_0p01568628_fs_param_cutoff = CompiledEffect_player_0p01568628.Parameters["fs_param_cutoff"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Path, float player, float cutoff, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Path, player, cutoff);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Path, float player, float cutoff, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Path, player, cutoff);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Path, float player, float cutoff, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Path, player, cutoff);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Path, float player, float cutoff, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Path, player, cutoff);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Path, float player, float cutoff)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_vs_param_cameraPos != null) param_player_0_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0_vs_param_cameraAspect != null) param_player_0_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0_fs_param_Path_Texture != null) param_player_0_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
                if (param_player_0_fs_param_Path_size != null) param_player_0_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
                if (param_player_0_fs_param_Path_dxdy != null) param_player_0_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
                if (param_player_0_fs_param_cutoff != null) param_player_0_fs_param_cutoff.SetValue(FragSharpMarshal.Marshal(cutoff));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_vs_param_cameraPos != null) param_player_0p003921569_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p003921569_vs_param_cameraAspect != null) param_player_0p003921569_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p003921569_fs_param_Path_Texture != null) param_player_0p003921569_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
                if (param_player_0p003921569_fs_param_Path_size != null) param_player_0p003921569_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
                if (param_player_0p003921569_fs_param_Path_dxdy != null) param_player_0p003921569_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
                if (param_player_0p003921569_fs_param_cutoff != null) param_player_0p003921569_fs_param_cutoff.SetValue(FragSharpMarshal.Marshal(cutoff));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_vs_param_cameraPos != null) param_player_0p007843138_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p007843138_vs_param_cameraAspect != null) param_player_0p007843138_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p007843138_fs_param_Path_Texture != null) param_player_0p007843138_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
                if (param_player_0p007843138_fs_param_Path_size != null) param_player_0p007843138_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
                if (param_player_0p007843138_fs_param_Path_dxdy != null) param_player_0p007843138_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
                if (param_player_0p007843138_fs_param_cutoff != null) param_player_0p007843138_fs_param_cutoff.SetValue(FragSharpMarshal.Marshal(cutoff));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_vs_param_cameraPos != null) param_player_0p01176471_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01176471_vs_param_cameraAspect != null) param_player_0p01176471_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01176471_fs_param_Path_Texture != null) param_player_0p01176471_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
                if (param_player_0p01176471_fs_param_Path_size != null) param_player_0p01176471_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
                if (param_player_0p01176471_fs_param_Path_dxdy != null) param_player_0p01176471_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
                if (param_player_0p01176471_fs_param_cutoff != null) param_player_0p01176471_fs_param_cutoff.SetValue(FragSharpMarshal.Marshal(cutoff));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_vs_param_cameraPos != null) param_player_0p01568628_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01568628_vs_param_cameraAspect != null) param_player_0p01568628_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01568628_fs_param_Path_Texture != null) param_player_0p01568628_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
                if (param_player_0p01568628_fs_param_Path_size != null) param_player_0p01568628_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
                if (param_player_0p01568628_fs_param_Path_dxdy != null) param_player_0p01568628_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
                if (param_player_0p01568628_fs_param_cutoff != null) param_player_0p01568628_fs_param_cutoff.SetValue(FragSharpMarshal.Marshal(cutoff));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class DrawTerritoryColors
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Path_Texture;
        private static EffectParameter param_fs_param_Path_size;
        private static EffectParameter param_fs_param_Path_dxdy;
        private static EffectParameter param_fs_param_blend;
        private static EffectParameter param_fs_param_FarColor_Texture;
        private static EffectParameter param_fs_param_FarColor_size;
        private static EffectParameter param_fs_param_FarColor_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTerritoryColors");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Path_Texture = CompiledEffect.Parameters["fs_param_Path_Texture"];
            param_fs_param_Path_size = CompiledEffect.Parameters["fs_param_Path_size"];
            param_fs_param_Path_dxdy = CompiledEffect.Parameters["fs_param_Path_dxdy"];
            param_fs_param_blend = CompiledEffect.Parameters["fs_param_blend"];
            param_fs_param_FarColor_Texture = CompiledEffect.Parameters["fs_param_FarColor_Texture"];
            param_fs_param_FarColor_size = CompiledEffect.Parameters["fs_param_FarColor_size"];
            param_fs_param_FarColor_dxdy = CompiledEffect.Parameters["fs_param_FarColor_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Path, float blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Path, blend);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Path, float blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Path, blend);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Path, float blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Path, blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Path, float blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Path, blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Path, float blend)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Path_Texture != null) param_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
            if (param_fs_param_Path_size != null) param_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
            if (param_fs_param_Path_dxdy != null) param_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
            if (param_fs_param_blend != null) param_fs_param_blend.SetValue(FragSharpMarshal.Marshal(blend));
            if (param_fs_param_FarColor_Texture != null) param_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
            if (param_fs_param_FarColor_size != null) param_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
            if (param_fs_param_FarColor_dxdy != null) param_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}






namespace Game
{
    public partial class DrawBuildingsIcons
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_vs_param_cameraPos;
        private static EffectParameter param_player_0_vs_param_cameraAspect;
        private static EffectParameter param_player_0_fs_param_BuildingDistances_Texture;
        private static EffectParameter param_player_0_fs_param_BuildingDistances_size;
        private static EffectParameter param_player_0_fs_param_BuildingDistances_dxdy;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_fs_param_Unit_size;
        private static EffectParameter param_player_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_fs_param_blend;
        private static EffectParameter param_player_0_fs_param_radius;
        private static EffectParameter param_player_0_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0_fs_param_FarColor_size;
        private static EffectParameter param_player_0_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_vs_param_cameraPos;
        private static EffectParameter param_player_0p003921569_vs_param_cameraAspect;
        private static EffectParameter param_player_0p003921569_fs_param_BuildingDistances_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_BuildingDistances_size;
        private static EffectParameter param_player_0p003921569_fs_param_BuildingDistances_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_blend;
        private static EffectParameter param_player_0p003921569_fs_param_radius;
        private static EffectParameter param_player_0p003921569_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_FarColor_size;
        private static EffectParameter param_player_0p003921569_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_vs_param_cameraPos;
        private static EffectParameter param_player_0p007843138_vs_param_cameraAspect;
        private static EffectParameter param_player_0p007843138_fs_param_BuildingDistances_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_BuildingDistances_size;
        private static EffectParameter param_player_0p007843138_fs_param_BuildingDistances_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_blend;
        private static EffectParameter param_player_0p007843138_fs_param_radius;
        private static EffectParameter param_player_0p007843138_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_FarColor_size;
        private static EffectParameter param_player_0p007843138_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_vs_param_cameraPos;
        private static EffectParameter param_player_0p01176471_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01176471_fs_param_BuildingDistances_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_BuildingDistances_size;
        private static EffectParameter param_player_0p01176471_fs_param_BuildingDistances_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_blend;
        private static EffectParameter param_player_0p01176471_fs_param_radius;
        private static EffectParameter param_player_0p01176471_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01176471_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_vs_param_cameraPos;
        private static EffectParameter param_player_0p01568628_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01568628_fs_param_BuildingDistances_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_BuildingDistances_size;
        private static EffectParameter param_player_0p01568628_fs_param_BuildingDistances_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_blend;
        private static EffectParameter param_player_0p01568628_fs_param_radius;
        private static EffectParameter param_player_0p01568628_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01568628_fs_param_FarColor_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildingsIcons_player=0");
            param_player_0_vs_param_cameraPos = CompiledEffect_player_0.Parameters["vs_param_cameraPos"];
            param_player_0_vs_param_cameraAspect = CompiledEffect_player_0.Parameters["vs_param_cameraAspect"];
            param_player_0_fs_param_BuildingDistances_Texture = CompiledEffect_player_0.Parameters["fs_param_BuildingDistances_Texture"];
            param_player_0_fs_param_BuildingDistances_size = CompiledEffect_player_0.Parameters["fs_param_BuildingDistances_size"];
            param_player_0_fs_param_BuildingDistances_dxdy = CompiledEffect_player_0.Parameters["fs_param_BuildingDistances_dxdy"];
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_fs_param_Unit_Texture = CompiledEffect_player_0.Parameters["fs_param_Unit_Texture"];
            param_player_0_fs_param_Unit_size = CompiledEffect_player_0.Parameters["fs_param_Unit_size"];
            param_player_0_fs_param_Unit_dxdy = CompiledEffect_player_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0_fs_param_blend = CompiledEffect_player_0.Parameters["fs_param_blend"];
            param_player_0_fs_param_radius = CompiledEffect_player_0.Parameters["fs_param_radius"];
            param_player_0_fs_param_FarColor_Texture = CompiledEffect_player_0.Parameters["fs_param_FarColor_Texture"];
            param_player_0_fs_param_FarColor_size = CompiledEffect_player_0.Parameters["fs_param_FarColor_size"];
            param_player_0_fs_param_FarColor_dxdy = CompiledEffect_player_0.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildingsIcons_player=0.003921569");
            param_player_0p003921569_vs_param_cameraPos = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraPos"];
            param_player_0p003921569_vs_param_cameraAspect = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraAspect"];
            param_player_0p003921569_fs_param_BuildingDistances_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_BuildingDistances_Texture"];
            param_player_0p003921569_fs_param_BuildingDistances_size = CompiledEffect_player_0p003921569.Parameters["fs_param_BuildingDistances_size"];
            param_player_0p003921569_fs_param_BuildingDistances_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_BuildingDistances_dxdy"];
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fs_param_Unit_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_fs_param_Unit_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_fs_param_blend = CompiledEffect_player_0p003921569.Parameters["fs_param_blend"];
            param_player_0p003921569_fs_param_radius = CompiledEffect_player_0p003921569.Parameters["fs_param_radius"];
            param_player_0p003921569_fs_param_FarColor_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_FarColor_Texture"];
            param_player_0p003921569_fs_param_FarColor_size = CompiledEffect_player_0p003921569.Parameters["fs_param_FarColor_size"];
            param_player_0p003921569_fs_param_FarColor_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildingsIcons_player=0.007843138");
            param_player_0p007843138_vs_param_cameraPos = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraPos"];
            param_player_0p007843138_vs_param_cameraAspect = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraAspect"];
            param_player_0p007843138_fs_param_BuildingDistances_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_BuildingDistances_Texture"];
            param_player_0p007843138_fs_param_BuildingDistances_size = CompiledEffect_player_0p007843138.Parameters["fs_param_BuildingDistances_size"];
            param_player_0p007843138_fs_param_BuildingDistances_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_BuildingDistances_dxdy"];
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fs_param_Unit_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_fs_param_Unit_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_fs_param_blend = CompiledEffect_player_0p007843138.Parameters["fs_param_blend"];
            param_player_0p007843138_fs_param_radius = CompiledEffect_player_0p007843138.Parameters["fs_param_radius"];
            param_player_0p007843138_fs_param_FarColor_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_FarColor_Texture"];
            param_player_0p007843138_fs_param_FarColor_size = CompiledEffect_player_0p007843138.Parameters["fs_param_FarColor_size"];
            param_player_0p007843138_fs_param_FarColor_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildingsIcons_player=0.01176471");
            param_player_0p01176471_vs_param_cameraPos = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraPos"];
            param_player_0p01176471_vs_param_cameraAspect = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraAspect"];
            param_player_0p01176471_fs_param_BuildingDistances_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_BuildingDistances_Texture"];
            param_player_0p01176471_fs_param_BuildingDistances_size = CompiledEffect_player_0p01176471.Parameters["fs_param_BuildingDistances_size"];
            param_player_0p01176471_fs_param_BuildingDistances_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_BuildingDistances_dxdy"];
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fs_param_Unit_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_fs_param_Unit_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_fs_param_blend = CompiledEffect_player_0p01176471.Parameters["fs_param_blend"];
            param_player_0p01176471_fs_param_radius = CompiledEffect_player_0p01176471.Parameters["fs_param_radius"];
            param_player_0p01176471_fs_param_FarColor_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01176471_fs_param_FarColor_size = CompiledEffect_player_0p01176471.Parameters["fs_param_FarColor_size"];
            param_player_0p01176471_fs_param_FarColor_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildingsIcons_player=0.01568628");
            param_player_0p01568628_vs_param_cameraPos = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraPos"];
            param_player_0p01568628_vs_param_cameraAspect = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraAspect"];
            param_player_0p01568628_fs_param_BuildingDistances_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_BuildingDistances_Texture"];
            param_player_0p01568628_fs_param_BuildingDistances_size = CompiledEffect_player_0p01568628.Parameters["fs_param_BuildingDistances_size"];
            param_player_0p01568628_fs_param_BuildingDistances_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_BuildingDistances_dxdy"];
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fs_param_Unit_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_fs_param_Unit_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_fs_param_blend = CompiledEffect_player_0p01568628.Parameters["fs_param_blend"];
            param_player_0p01568628_fs_param_radius = CompiledEffect_player_0p01568628.Parameters["fs_param_radius"];
            param_player_0p01568628_fs_param_FarColor_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01568628_fs_param_FarColor_size = CompiledEffect_player_0p01568628.Parameters["fs_param_FarColor_size"];
            param_player_0p01568628_fs_param_FarColor_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_FarColor_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D BuildingDistances, Texture2D Data, Texture2D Unit, float blend, float radius, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, BuildingDistances, Data, Unit, blend, radius, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D BuildingDistances, Texture2D Data, Texture2D Unit, float blend, float radius, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, BuildingDistances, Data, Unit, blend, radius, player);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D BuildingDistances, Texture2D Data, Texture2D Unit, float blend, float radius, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, BuildingDistances, Data, Unit, blend, radius, player);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D BuildingDistances, Texture2D Data, Texture2D Unit, float blend, float radius, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, BuildingDistances, Data, Unit, blend, radius, player);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D BuildingDistances, Texture2D Data, Texture2D Unit, float blend, float radius, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_vs_param_cameraPos != null) param_player_0_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0_vs_param_cameraAspect != null) param_player_0_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0_fs_param_BuildingDistances_Texture != null) param_player_0_fs_param_BuildingDistances_Texture.SetValue(FragSharpMarshal.Marshal(BuildingDistances));
                if (param_player_0_fs_param_BuildingDistances_size != null) param_player_0_fs_param_BuildingDistances_size.SetValue(FragSharpMarshal.Marshal(vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0_fs_param_BuildingDistances_dxdy != null) param_player_0_fs_param_BuildingDistances_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Unit_Texture != null) param_player_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_fs_param_Unit_size != null) param_player_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_fs_param_Unit_dxdy != null) param_player_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_fs_param_blend != null) param_player_0_fs_param_blend.SetValue(FragSharpMarshal.Marshal(blend));
                if (param_player_0_fs_param_radius != null) param_player_0_fs_param_radius.SetValue(FragSharpMarshal.Marshal(radius));
                if (param_player_0_fs_param_FarColor_Texture != null) param_player_0_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0_fs_param_FarColor_size != null) param_player_0_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0_fs_param_FarColor_dxdy != null) param_player_0_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_vs_param_cameraPos != null) param_player_0p003921569_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p003921569_vs_param_cameraAspect != null) param_player_0p003921569_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p003921569_fs_param_BuildingDistances_Texture != null) param_player_0p003921569_fs_param_BuildingDistances_Texture.SetValue(FragSharpMarshal.Marshal(BuildingDistances));
                if (param_player_0p003921569_fs_param_BuildingDistances_size != null) param_player_0p003921569_fs_param_BuildingDistances_size.SetValue(FragSharpMarshal.Marshal(vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p003921569_fs_param_BuildingDistances_dxdy != null) param_player_0p003921569_fs_param_BuildingDistances_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Unit_Texture != null) param_player_0p003921569_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_fs_param_Unit_size != null) param_player_0p003921569_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fs_param_Unit_dxdy != null) param_player_0p003921569_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fs_param_blend != null) param_player_0p003921569_fs_param_blend.SetValue(FragSharpMarshal.Marshal(blend));
                if (param_player_0p003921569_fs_param_radius != null) param_player_0p003921569_fs_param_radius.SetValue(FragSharpMarshal.Marshal(radius));
                if (param_player_0p003921569_fs_param_FarColor_Texture != null) param_player_0p003921569_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p003921569_fs_param_FarColor_size != null) param_player_0p003921569_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p003921569_fs_param_FarColor_dxdy != null) param_player_0p003921569_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_vs_param_cameraPos != null) param_player_0p007843138_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p007843138_vs_param_cameraAspect != null) param_player_0p007843138_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p007843138_fs_param_BuildingDistances_Texture != null) param_player_0p007843138_fs_param_BuildingDistances_Texture.SetValue(FragSharpMarshal.Marshal(BuildingDistances));
                if (param_player_0p007843138_fs_param_BuildingDistances_size != null) param_player_0p007843138_fs_param_BuildingDistances_size.SetValue(FragSharpMarshal.Marshal(vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p007843138_fs_param_BuildingDistances_dxdy != null) param_player_0p007843138_fs_param_BuildingDistances_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Unit_Texture != null) param_player_0p007843138_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_fs_param_Unit_size != null) param_player_0p007843138_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fs_param_Unit_dxdy != null) param_player_0p007843138_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fs_param_blend != null) param_player_0p007843138_fs_param_blend.SetValue(FragSharpMarshal.Marshal(blend));
                if (param_player_0p007843138_fs_param_radius != null) param_player_0p007843138_fs_param_radius.SetValue(FragSharpMarshal.Marshal(radius));
                if (param_player_0p007843138_fs_param_FarColor_Texture != null) param_player_0p007843138_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p007843138_fs_param_FarColor_size != null) param_player_0p007843138_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p007843138_fs_param_FarColor_dxdy != null) param_player_0p007843138_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_vs_param_cameraPos != null) param_player_0p01176471_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01176471_vs_param_cameraAspect != null) param_player_0p01176471_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01176471_fs_param_BuildingDistances_Texture != null) param_player_0p01176471_fs_param_BuildingDistances_Texture.SetValue(FragSharpMarshal.Marshal(BuildingDistances));
                if (param_player_0p01176471_fs_param_BuildingDistances_size != null) param_player_0p01176471_fs_param_BuildingDistances_size.SetValue(FragSharpMarshal.Marshal(vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p01176471_fs_param_BuildingDistances_dxdy != null) param_player_0p01176471_fs_param_BuildingDistances_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Unit_Texture != null) param_player_0p01176471_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_fs_param_Unit_size != null) param_player_0p01176471_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fs_param_Unit_dxdy != null) param_player_0p01176471_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fs_param_blend != null) param_player_0p01176471_fs_param_blend.SetValue(FragSharpMarshal.Marshal(blend));
                if (param_player_0p01176471_fs_param_radius != null) param_player_0p01176471_fs_param_radius.SetValue(FragSharpMarshal.Marshal(radius));
                if (param_player_0p01176471_fs_param_FarColor_Texture != null) param_player_0p01176471_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01176471_fs_param_FarColor_size != null) param_player_0p01176471_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01176471_fs_param_FarColor_dxdy != null) param_player_0p01176471_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_vs_param_cameraPos != null) param_player_0p01568628_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01568628_vs_param_cameraAspect != null) param_player_0p01568628_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01568628_fs_param_BuildingDistances_Texture != null) param_player_0p01568628_fs_param_BuildingDistances_Texture.SetValue(FragSharpMarshal.Marshal(BuildingDistances));
                if (param_player_0p01568628_fs_param_BuildingDistances_size != null) param_player_0p01568628_fs_param_BuildingDistances_size.SetValue(FragSharpMarshal.Marshal(vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p01568628_fs_param_BuildingDistances_dxdy != null) param_player_0p01568628_fs_param_BuildingDistances_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(BuildingDistances.Width, BuildingDistances.Height)));
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Unit_Texture != null) param_player_0p01568628_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_fs_param_Unit_size != null) param_player_0p01568628_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fs_param_Unit_dxdy != null) param_player_0p01568628_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fs_param_blend != null) param_player_0p01568628_fs_param_blend.SetValue(FragSharpMarshal.Marshal(blend));
                if (param_player_0p01568628_fs_param_radius != null) param_player_0p01568628_fs_param_radius.SetValue(FragSharpMarshal.Marshal(radius));
                if (param_player_0p01568628_fs_param_FarColor_Texture != null) param_player_0p01568628_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01568628_fs_param_FarColor_size != null) param_player_0p01568628_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01568628_fs_param_FarColor_dxdy != null) param_player_0p01568628_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class DrawBuildings
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_vs_param_cameraPos;
        private static EffectParameter param_player_0_vs_param_cameraAspect;
        private static EffectParameter param_player_0_fs_param_Buildings_Texture;
        private static EffectParameter param_player_0_fs_param_Buildings_size;
        private static EffectParameter param_player_0_fs_param_Buildings_dxdy;
        private static EffectParameter param_player_0_fs_param_Units_Texture;
        private static EffectParameter param_player_0_fs_param_Units_size;
        private static EffectParameter param_player_0_fs_param_Units_dxdy;
        private static EffectParameter param_player_0_fs_param_Texture_Texture;
        private static EffectParameter param_player_0_fs_param_Texture_size;
        private static EffectParameter param_player_0_fs_param_Texture_dxdy;
        private static EffectParameter param_player_0_fs_param_Explosion_Texture;
        private static EffectParameter param_player_0_fs_param_Explosion_size;
        private static EffectParameter param_player_0_fs_param_Explosion_dxdy;
        private static EffectParameter param_player_0_fs_param_s;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_vs_param_cameraPos;
        private static EffectParameter param_player_0p003921569_vs_param_cameraAspect;
        private static EffectParameter param_player_0p003921569_fs_param_Buildings_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Buildings_size;
        private static EffectParameter param_player_0p003921569_fs_param_Buildings_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Texture_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Texture_size;
        private static EffectParameter param_player_0p003921569_fs_param_Texture_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Explosion_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Explosion_size;
        private static EffectParameter param_player_0p003921569_fs_param_Explosion_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_s;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_vs_param_cameraPos;
        private static EffectParameter param_player_0p007843138_vs_param_cameraAspect;
        private static EffectParameter param_player_0p007843138_fs_param_Buildings_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Buildings_size;
        private static EffectParameter param_player_0p007843138_fs_param_Buildings_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Texture_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Texture_size;
        private static EffectParameter param_player_0p007843138_fs_param_Texture_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Explosion_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Explosion_size;
        private static EffectParameter param_player_0p007843138_fs_param_Explosion_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_s;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_vs_param_cameraPos;
        private static EffectParameter param_player_0p01176471_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01176471_fs_param_Buildings_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Buildings_size;
        private static EffectParameter param_player_0p01176471_fs_param_Buildings_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Texture_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Texture_size;
        private static EffectParameter param_player_0p01176471_fs_param_Texture_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Explosion_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Explosion_size;
        private static EffectParameter param_player_0p01176471_fs_param_Explosion_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_s;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_vs_param_cameraPos;
        private static EffectParameter param_player_0p01568628_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01568628_fs_param_Buildings_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Buildings_size;
        private static EffectParameter param_player_0p01568628_fs_param_Buildings_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Texture_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Texture_size;
        private static EffectParameter param_player_0p01568628_fs_param_Texture_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Explosion_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Explosion_size;
        private static EffectParameter param_player_0p01568628_fs_param_Explosion_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_s;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildings_player=0");
            param_player_0_vs_param_cameraPos = CompiledEffect_player_0.Parameters["vs_param_cameraPos"];
            param_player_0_vs_param_cameraAspect = CompiledEffect_player_0.Parameters["vs_param_cameraAspect"];
            param_player_0_fs_param_Buildings_Texture = CompiledEffect_player_0.Parameters["fs_param_Buildings_Texture"];
            param_player_0_fs_param_Buildings_size = CompiledEffect_player_0.Parameters["fs_param_Buildings_size"];
            param_player_0_fs_param_Buildings_dxdy = CompiledEffect_player_0.Parameters["fs_param_Buildings_dxdy"];
            param_player_0_fs_param_Units_Texture = CompiledEffect_player_0.Parameters["fs_param_Units_Texture"];
            param_player_0_fs_param_Units_size = CompiledEffect_player_0.Parameters["fs_param_Units_size"];
            param_player_0_fs_param_Units_dxdy = CompiledEffect_player_0.Parameters["fs_param_Units_dxdy"];
            param_player_0_fs_param_Texture_Texture = CompiledEffect_player_0.Parameters["fs_param_Texture_Texture"];
            param_player_0_fs_param_Texture_size = CompiledEffect_player_0.Parameters["fs_param_Texture_size"];
            param_player_0_fs_param_Texture_dxdy = CompiledEffect_player_0.Parameters["fs_param_Texture_dxdy"];
            param_player_0_fs_param_Explosion_Texture = CompiledEffect_player_0.Parameters["fs_param_Explosion_Texture"];
            param_player_0_fs_param_Explosion_size = CompiledEffect_player_0.Parameters["fs_param_Explosion_size"];
            param_player_0_fs_param_Explosion_dxdy = CompiledEffect_player_0.Parameters["fs_param_Explosion_dxdy"];
            param_player_0_fs_param_s = CompiledEffect_player_0.Parameters["fs_param_s"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildings_player=0.003921569");
            param_player_0p003921569_vs_param_cameraPos = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraPos"];
            param_player_0p003921569_vs_param_cameraAspect = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraAspect"];
            param_player_0p003921569_fs_param_Buildings_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Buildings_Texture"];
            param_player_0p003921569_fs_param_Buildings_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Buildings_size"];
            param_player_0p003921569_fs_param_Buildings_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Buildings_dxdy"];
            param_player_0p003921569_fs_param_Units_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_fs_param_Units_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_size"];
            param_player_0p003921569_fs_param_Units_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_player_0p003921569_fs_param_Texture_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Texture_Texture"];
            param_player_0p003921569_fs_param_Texture_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Texture_size"];
            param_player_0p003921569_fs_param_Texture_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Texture_dxdy"];
            param_player_0p003921569_fs_param_Explosion_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Explosion_Texture"];
            param_player_0p003921569_fs_param_Explosion_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Explosion_size"];
            param_player_0p003921569_fs_param_Explosion_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Explosion_dxdy"];
            param_player_0p003921569_fs_param_s = CompiledEffect_player_0p003921569.Parameters["fs_param_s"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildings_player=0.007843138");
            param_player_0p007843138_vs_param_cameraPos = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraPos"];
            param_player_0p007843138_vs_param_cameraAspect = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraAspect"];
            param_player_0p007843138_fs_param_Buildings_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Buildings_Texture"];
            param_player_0p007843138_fs_param_Buildings_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Buildings_size"];
            param_player_0p007843138_fs_param_Buildings_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Buildings_dxdy"];
            param_player_0p007843138_fs_param_Units_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_fs_param_Units_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_size"];
            param_player_0p007843138_fs_param_Units_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_player_0p007843138_fs_param_Texture_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Texture_Texture"];
            param_player_0p007843138_fs_param_Texture_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Texture_size"];
            param_player_0p007843138_fs_param_Texture_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Texture_dxdy"];
            param_player_0p007843138_fs_param_Explosion_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Explosion_Texture"];
            param_player_0p007843138_fs_param_Explosion_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Explosion_size"];
            param_player_0p007843138_fs_param_Explosion_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Explosion_dxdy"];
            param_player_0p007843138_fs_param_s = CompiledEffect_player_0p007843138.Parameters["fs_param_s"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildings_player=0.01176471");
            param_player_0p01176471_vs_param_cameraPos = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraPos"];
            param_player_0p01176471_vs_param_cameraAspect = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraAspect"];
            param_player_0p01176471_fs_param_Buildings_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Buildings_Texture"];
            param_player_0p01176471_fs_param_Buildings_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Buildings_size"];
            param_player_0p01176471_fs_param_Buildings_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Buildings_dxdy"];
            param_player_0p01176471_fs_param_Units_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_fs_param_Units_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_size"];
            param_player_0p01176471_fs_param_Units_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_player_0p01176471_fs_param_Texture_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Texture_Texture"];
            param_player_0p01176471_fs_param_Texture_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Texture_size"];
            param_player_0p01176471_fs_param_Texture_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Texture_dxdy"];
            param_player_0p01176471_fs_param_Explosion_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Explosion_Texture"];
            param_player_0p01176471_fs_param_Explosion_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Explosion_size"];
            param_player_0p01176471_fs_param_Explosion_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Explosion_dxdy"];
            param_player_0p01176471_fs_param_s = CompiledEffect_player_0p01176471.Parameters["fs_param_s"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawBuildings_player=0.01568628");
            param_player_0p01568628_vs_param_cameraPos = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraPos"];
            param_player_0p01568628_vs_param_cameraAspect = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraAspect"];
            param_player_0p01568628_fs_param_Buildings_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Buildings_Texture"];
            param_player_0p01568628_fs_param_Buildings_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Buildings_size"];
            param_player_0p01568628_fs_param_Buildings_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Buildings_dxdy"];
            param_player_0p01568628_fs_param_Units_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_fs_param_Units_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_size"];
            param_player_0p01568628_fs_param_Units_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_player_0p01568628_fs_param_Texture_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Texture_Texture"];
            param_player_0p01568628_fs_param_Texture_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Texture_size"];
            param_player_0p01568628_fs_param_Texture_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Texture_dxdy"];
            param_player_0p01568628_fs_param_Explosion_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Explosion_Texture"];
            param_player_0p01568628_fs_param_Explosion_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Explosion_size"];
            param_player_0p01568628_fs_param_Explosion_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Explosion_dxdy"];
            param_player_0p01568628_fs_param_s = CompiledEffect_player_0p01568628.Parameters["fs_param_s"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Buildings, Texture2D Units, Texture2D Texture, Texture2D Explosion, float player, float s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Buildings, Units, Texture, Explosion, player, s);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Buildings, Texture2D Units, Texture2D Texture, Texture2D Explosion, float player, float s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Buildings, Units, Texture, Explosion, player, s);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Buildings, Texture2D Units, Texture2D Texture, Texture2D Explosion, float player, float s, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Buildings, Units, Texture, Explosion, player, s);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Buildings, Texture2D Units, Texture2D Texture, Texture2D Explosion, float player, float s, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Buildings, Units, Texture, Explosion, player, s);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Buildings, Texture2D Units, Texture2D Texture, Texture2D Explosion, float player, float s)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_vs_param_cameraPos != null) param_player_0_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0_vs_param_cameraAspect != null) param_player_0_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0_fs_param_Buildings_Texture != null) param_player_0_fs_param_Buildings_Texture.SetValue(FragSharpMarshal.Marshal(Buildings));
                if (param_player_0_fs_param_Buildings_size != null) param_player_0_fs_param_Buildings_size.SetValue(FragSharpMarshal.Marshal(vec(Buildings.Width, Buildings.Height)));
                if (param_player_0_fs_param_Buildings_dxdy != null) param_player_0_fs_param_Buildings_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Buildings.Width, Buildings.Height)));
                if (param_player_0_fs_param_Units_Texture != null) param_player_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_fs_param_Units_size != null) param_player_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Units_dxdy != null) param_player_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Texture_Texture != null) param_player_0_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_player_0_fs_param_Texture_size != null) param_player_0_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_player_0_fs_param_Texture_dxdy != null) param_player_0_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_player_0_fs_param_Explosion_Texture != null) param_player_0_fs_param_Explosion_Texture.SetValue(FragSharpMarshal.Marshal(Explosion));
                if (param_player_0_fs_param_Explosion_size != null) param_player_0_fs_param_Explosion_size.SetValue(FragSharpMarshal.Marshal(vec(Explosion.Width, Explosion.Height)));
                if (param_player_0_fs_param_Explosion_dxdy != null) param_player_0_fs_param_Explosion_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Explosion.Width, Explosion.Height)));
                if (param_player_0_fs_param_s != null) param_player_0_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_vs_param_cameraPos != null) param_player_0p003921569_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p003921569_vs_param_cameraAspect != null) param_player_0p003921569_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p003921569_fs_param_Buildings_Texture != null) param_player_0p003921569_fs_param_Buildings_Texture.SetValue(FragSharpMarshal.Marshal(Buildings));
                if (param_player_0p003921569_fs_param_Buildings_size != null) param_player_0p003921569_fs_param_Buildings_size.SetValue(FragSharpMarshal.Marshal(vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p003921569_fs_param_Buildings_dxdy != null) param_player_0p003921569_fs_param_Buildings_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p003921569_fs_param_Units_Texture != null) param_player_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_fs_param_Units_size != null) param_player_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Units_dxdy != null) param_player_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Texture_Texture != null) param_player_0p003921569_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_player_0p003921569_fs_param_Texture_size != null) param_player_0p003921569_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_player_0p003921569_fs_param_Texture_dxdy != null) param_player_0p003921569_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_player_0p003921569_fs_param_Explosion_Texture != null) param_player_0p003921569_fs_param_Explosion_Texture.SetValue(FragSharpMarshal.Marshal(Explosion));
                if (param_player_0p003921569_fs_param_Explosion_size != null) param_player_0p003921569_fs_param_Explosion_size.SetValue(FragSharpMarshal.Marshal(vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p003921569_fs_param_Explosion_dxdy != null) param_player_0p003921569_fs_param_Explosion_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p003921569_fs_param_s != null) param_player_0p003921569_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_vs_param_cameraPos != null) param_player_0p007843138_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p007843138_vs_param_cameraAspect != null) param_player_0p007843138_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p007843138_fs_param_Buildings_Texture != null) param_player_0p007843138_fs_param_Buildings_Texture.SetValue(FragSharpMarshal.Marshal(Buildings));
                if (param_player_0p007843138_fs_param_Buildings_size != null) param_player_0p007843138_fs_param_Buildings_size.SetValue(FragSharpMarshal.Marshal(vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p007843138_fs_param_Buildings_dxdy != null) param_player_0p007843138_fs_param_Buildings_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p007843138_fs_param_Units_Texture != null) param_player_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_fs_param_Units_size != null) param_player_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Units_dxdy != null) param_player_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Texture_Texture != null) param_player_0p007843138_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_player_0p007843138_fs_param_Texture_size != null) param_player_0p007843138_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_player_0p007843138_fs_param_Texture_dxdy != null) param_player_0p007843138_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_player_0p007843138_fs_param_Explosion_Texture != null) param_player_0p007843138_fs_param_Explosion_Texture.SetValue(FragSharpMarshal.Marshal(Explosion));
                if (param_player_0p007843138_fs_param_Explosion_size != null) param_player_0p007843138_fs_param_Explosion_size.SetValue(FragSharpMarshal.Marshal(vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p007843138_fs_param_Explosion_dxdy != null) param_player_0p007843138_fs_param_Explosion_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p007843138_fs_param_s != null) param_player_0p007843138_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_vs_param_cameraPos != null) param_player_0p01176471_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01176471_vs_param_cameraAspect != null) param_player_0p01176471_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01176471_fs_param_Buildings_Texture != null) param_player_0p01176471_fs_param_Buildings_Texture.SetValue(FragSharpMarshal.Marshal(Buildings));
                if (param_player_0p01176471_fs_param_Buildings_size != null) param_player_0p01176471_fs_param_Buildings_size.SetValue(FragSharpMarshal.Marshal(vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p01176471_fs_param_Buildings_dxdy != null) param_player_0p01176471_fs_param_Buildings_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p01176471_fs_param_Units_Texture != null) param_player_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_fs_param_Units_size != null) param_player_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Units_dxdy != null) param_player_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Texture_Texture != null) param_player_0p01176471_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_player_0p01176471_fs_param_Texture_size != null) param_player_0p01176471_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_player_0p01176471_fs_param_Texture_dxdy != null) param_player_0p01176471_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_player_0p01176471_fs_param_Explosion_Texture != null) param_player_0p01176471_fs_param_Explosion_Texture.SetValue(FragSharpMarshal.Marshal(Explosion));
                if (param_player_0p01176471_fs_param_Explosion_size != null) param_player_0p01176471_fs_param_Explosion_size.SetValue(FragSharpMarshal.Marshal(vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p01176471_fs_param_Explosion_dxdy != null) param_player_0p01176471_fs_param_Explosion_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p01176471_fs_param_s != null) param_player_0p01176471_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_vs_param_cameraPos != null) param_player_0p01568628_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01568628_vs_param_cameraAspect != null) param_player_0p01568628_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01568628_fs_param_Buildings_Texture != null) param_player_0p01568628_fs_param_Buildings_Texture.SetValue(FragSharpMarshal.Marshal(Buildings));
                if (param_player_0p01568628_fs_param_Buildings_size != null) param_player_0p01568628_fs_param_Buildings_size.SetValue(FragSharpMarshal.Marshal(vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p01568628_fs_param_Buildings_dxdy != null) param_player_0p01568628_fs_param_Buildings_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Buildings.Width, Buildings.Height)));
                if (param_player_0p01568628_fs_param_Units_Texture != null) param_player_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_fs_param_Units_size != null) param_player_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Units_dxdy != null) param_player_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Texture_Texture != null) param_player_0p01568628_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
                if (param_player_0p01568628_fs_param_Texture_size != null) param_player_0p01568628_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
                if (param_player_0p01568628_fs_param_Texture_dxdy != null) param_player_0p01568628_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
                if (param_player_0p01568628_fs_param_Explosion_Texture != null) param_player_0p01568628_fs_param_Explosion_Texture.SetValue(FragSharpMarshal.Marshal(Explosion));
                if (param_player_0p01568628_fs_param_Explosion_size != null) param_player_0p01568628_fs_param_Explosion_size.SetValue(FragSharpMarshal.Marshal(vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p01568628_fs_param_Explosion_dxdy != null) param_player_0p01568628_fs_param_Explosion_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Explosion.Width, Explosion.Height)));
                if (param_player_0p01568628_fs_param_s != null) param_player_0p01568628_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class DrawCorpses
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Corpses_Texture;
        private static EffectParameter param_fs_param_Corpses_size;
        private static EffectParameter param_fs_param_Corpses_dxdy;
        private static EffectParameter param_fs_param_Texture_Texture;
        private static EffectParameter param_fs_param_Texture_size;
        private static EffectParameter param_fs_param_Texture_dxdy;
        private static EffectParameter param_fs_param_blend;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawCorpses");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Corpses_Texture = CompiledEffect.Parameters["fs_param_Corpses_Texture"];
            param_fs_param_Corpses_size = CompiledEffect.Parameters["fs_param_Corpses_size"];
            param_fs_param_Corpses_dxdy = CompiledEffect.Parameters["fs_param_Corpses_dxdy"];
            param_fs_param_Texture_Texture = CompiledEffect.Parameters["fs_param_Texture_Texture"];
            param_fs_param_Texture_size = CompiledEffect.Parameters["fs_param_Texture_size"];
            param_fs_param_Texture_dxdy = CompiledEffect.Parameters["fs_param_Texture_dxdy"];
            param_fs_param_blend = CompiledEffect.Parameters["fs_param_blend"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Corpses, Texture2D Texture, float blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Corpses, Texture, blend);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Corpses, Texture2D Texture, float blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Corpses, Texture, blend);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Corpses, Texture2D Texture, float blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Corpses, Texture, blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Corpses, Texture2D Texture, float blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Corpses, Texture, blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Corpses, Texture2D Texture, float blend)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Corpses_Texture != null) param_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
            if (param_fs_param_Corpses_size != null) param_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
            if (param_fs_param_Corpses_dxdy != null) param_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
            if (param_fs_param_Texture_Texture != null) param_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
            if (param_fs_param_Texture_size != null) param_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
            if (param_fs_param_Texture_dxdy != null) param_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
            if (param_fs_param_blend != null) param_fs_param_blend.SetValue(FragSharpMarshal.Marshal(blend));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawPrecomputation_Cur
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Current_Texture;
        private static EffectParameter param_fs_param_Current_size;
        private static EffectParameter param_fs_param_Current_dxdy;
        private static EffectParameter param_fs_param_Previous_Texture;
        private static EffectParameter param_fs_param_Previous_size;
        private static EffectParameter param_fs_param_Previous_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawPrecomputation_Cur");
            param_fs_param_Current_Texture = CompiledEffect.Parameters["fs_param_Current_Texture"];
            param_fs_param_Current_size = CompiledEffect.Parameters["fs_param_Current_size"];
            param_fs_param_Current_dxdy = CompiledEffect.Parameters["fs_param_Current_dxdy"];
            param_fs_param_Previous_Texture = CompiledEffect.Parameters["fs_param_Previous_Texture"];
            param_fs_param_Previous_size = CompiledEffect.Parameters["fs_param_Previous_size"];
            param_fs_param_Previous_dxdy = CompiledEffect.Parameters["fs_param_Previous_dxdy"];
        }
        public static void Apply(Texture2D Current, Texture2D Previous, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Previous);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Current, Texture2D Previous, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Previous);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Current, Texture2D Previous, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Previous);
        }
        public static void Using(Texture2D Current, Texture2D Previous, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Previous);
        }
        public static void Using(Texture2D Current, Texture2D Previous)
        {
            if (param_fs_param_Current_Texture != null) param_fs_param_Current_Texture.SetValue(FragSharpMarshal.Marshal(Current));
            if (param_fs_param_Current_size != null) param_fs_param_Current_size.SetValue(FragSharpMarshal.Marshal(vec(Current.Width, Current.Height)));
            if (param_fs_param_Current_dxdy != null) param_fs_param_Current_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Current.Width, Current.Height)));
            if (param_fs_param_Previous_Texture != null) param_fs_param_Previous_Texture.SetValue(FragSharpMarshal.Marshal(Previous));
            if (param_fs_param_Previous_size != null) param_fs_param_Previous_size.SetValue(FragSharpMarshal.Marshal(vec(Previous.Width, Previous.Height)));
            if (param_fs_param_Previous_dxdy != null) param_fs_param_Previous_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Previous.Width, Previous.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawPrecomputation_Pre
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Current_Texture;
        private static EffectParameter param_fs_param_Current_size;
        private static EffectParameter param_fs_param_Current_dxdy;
        private static EffectParameter param_fs_param_Previous_Texture;
        private static EffectParameter param_fs_param_Previous_size;
        private static EffectParameter param_fs_param_Previous_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawPrecomputation_Pre");
            param_fs_param_Current_Texture = CompiledEffect.Parameters["fs_param_Current_Texture"];
            param_fs_param_Current_size = CompiledEffect.Parameters["fs_param_Current_size"];
            param_fs_param_Current_dxdy = CompiledEffect.Parameters["fs_param_Current_dxdy"];
            param_fs_param_Previous_Texture = CompiledEffect.Parameters["fs_param_Previous_Texture"];
            param_fs_param_Previous_size = CompiledEffect.Parameters["fs_param_Previous_size"];
            param_fs_param_Previous_dxdy = CompiledEffect.Parameters["fs_param_Previous_dxdy"];
        }
        public static void Apply(Texture2D Current, Texture2D Previous, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Previous);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Current, Texture2D Previous, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Previous);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Current, Texture2D Previous, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Previous);
        }
        public static void Using(Texture2D Current, Texture2D Previous, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Previous);
        }
        public static void Using(Texture2D Current, Texture2D Previous)
        {
            if (param_fs_param_Current_Texture != null) param_fs_param_Current_Texture.SetValue(FragSharpMarshal.Marshal(Current));
            if (param_fs_param_Current_size != null) param_fs_param_Current_size.SetValue(FragSharpMarshal.Marshal(vec(Current.Width, Current.Height)));
            if (param_fs_param_Current_dxdy != null) param_fs_param_Current_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Current.Width, Current.Height)));
            if (param_fs_param_Previous_Texture != null) param_fs_param_Previous_Texture.SetValue(FragSharpMarshal.Marshal(Previous));
            if (param_fs_param_Previous_size != null) param_fs_param_Previous_size.SetValue(FragSharpMarshal.Marshal(vec(Previous.Width, Previous.Height)));
            if (param_fs_param_Previous_dxdy != null) param_fs_param_Previous_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Previous.Width, Previous.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawSolid
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_clr;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawSolid");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_clr = CompiledEffect.Parameters["fs_param_clr"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, color clr, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, clr);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, color clr, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, clr);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, color clr, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, clr);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, color clr, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, clr);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, color clr)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_clr != null) param_fs_param_clr.SetValue(FragSharpMarshal.Marshal(clr));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawTexture
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Texture_Texture;
        private static EffectParameter param_fs_param_Texture_size;
        private static EffectParameter param_fs_param_Texture_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTexture");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Texture_Texture = CompiledEffect.Parameters["fs_param_Texture_Texture"];
            param_fs_param_Texture_size = CompiledEffect.Parameters["fs_param_Texture_size"];
            param_fs_param_Texture_dxdy = CompiledEffect.Parameters["fs_param_Texture_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Texture);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Texture);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Texture_Texture != null) param_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
            if (param_fs_param_Texture_size != null) param_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
            if (param_fs_param_Texture_dxdy != null) param_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawColoredTexture
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Texture_Texture;
        private static EffectParameter param_fs_param_Texture_size;
        private static EffectParameter param_fs_param_Texture_dxdy;
        private static EffectParameter param_fs_param_clr;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawColoredTexture");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Texture_Texture = CompiledEffect.Parameters["fs_param_Texture_Texture"];
            param_fs_param_Texture_size = CompiledEffect.Parameters["fs_param_Texture_size"];
            param_fs_param_Texture_dxdy = CompiledEffect.Parameters["fs_param_Texture_dxdy"];
            param_fs_param_clr = CompiledEffect.Parameters["fs_param_clr"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Texture, color clr, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Texture, clr);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Texture, color clr, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Texture, clr);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture, color clr, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Texture, clr);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture, color clr, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Texture, clr);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture, color clr)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Texture_Texture != null) param_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
            if (param_fs_param_Texture_size != null) param_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
            if (param_fs_param_Texture_dxdy != null) param_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
            if (param_fs_param_clr != null) param_fs_param_clr.SetValue(FragSharpMarshal.Marshal(clr));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DrawTextureSmooth
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_vs_param_cameraPos;
        private static EffectParameter param_vs_param_cameraAspect;
        private static EffectParameter param_fs_param_Texture_Texture;
        private static EffectParameter param_fs_param_Texture_size;
        private static EffectParameter param_fs_param_Texture_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawTextureSmooth");
            param_vs_param_cameraPos = CompiledEffect.Parameters["vs_param_cameraPos"];
            param_vs_param_cameraAspect = CompiledEffect.Parameters["vs_param_cameraAspect"];
            param_fs_param_Texture_Texture = CompiledEffect.Parameters["fs_param_Texture_Texture"];
            param_fs_param_Texture_size = CompiledEffect.Parameters["fs_param_Texture_size"];
            param_fs_param_Texture_dxdy = CompiledEffect.Parameters["fs_param_Texture_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Texture);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Texture);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, Texture);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D Texture)
        {
            if (param_vs_param_cameraPos != null) param_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
            if (param_vs_param_cameraAspect != null) param_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
            if (param_fs_param_Texture_Texture != null) param_fs_param_Texture_Texture.SetValue(FragSharpMarshal.Marshal(Texture));
            if (param_fs_param_Texture_size != null) param_fs_param_Texture_size.SetValue(FragSharpMarshal.Marshal(vec(Texture.Width, Texture.Height)));
            if (param_fs_param_Texture_dxdy != null) param_fs_param_Texture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Texture.Width, Texture.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class DyingDragonLordGridCoord
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_fs_param_CurrentUnits_size;
        private static EffectParameter param_fs_param_CurrentUnits_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/DyingDragonLordGridCoord");
            param_fs_param_CurrentUnits_Texture = CompiledEffect.Parameters["fs_param_CurrentUnits_Texture"];
            param_fs_param_CurrentUnits_size = CompiledEffect.Parameters["fs_param_CurrentUnits_size"];
            param_fs_param_CurrentUnits_dxdy = CompiledEffect.Parameters["fs_param_CurrentUnits_dxdy"];
        }
        public static void Apply(Texture2D CurrentUnits, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(CurrentUnits);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D CurrentUnits, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(CurrentUnits);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D CurrentUnits, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(CurrentUnits);
        }
        public static void Using(Texture2D CurrentUnits, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(CurrentUnits);
        }
        public static void Using(Texture2D CurrentUnits)
        {
            if (param_fs_param_CurrentUnits_Texture != null) param_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
            if (param_fs_param_CurrentUnits_size != null) param_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
            if (param_fs_param_CurrentUnits_dxdy != null) param_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}






namespace Game
{
    public partial class DragonLordGridCoord
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0_fs_param_CurrentUnits_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentUnits_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentUnits_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentUnits_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentUnits_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordGridCoord_player=0");
            param_player_0_fs_param_CurrentUnits_Texture = CompiledEffect_player_0.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0_fs_param_CurrentUnits_size = CompiledEffect_player_0.Parameters["fs_param_CurrentUnits_size"];
            param_player_0_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0.Parameters["fs_param_CurrentUnits_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordGridCoord_player=0.003921569");
            param_player_0p003921569_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p003921569_fs_param_CurrentUnits_size = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p003921569_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentUnits_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordGridCoord_player=0.007843138");
            param_player_0p007843138_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p007843138_fs_param_CurrentUnits_size = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p007843138_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentUnits_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordGridCoord_player=0.01176471");
            param_player_0p01176471_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p01176471_fs_param_CurrentUnits_size = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p01176471_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentUnits_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DragonLordGridCoord_player=0.01568628");
            param_player_0p01568628_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p01568628_fs_param_CurrentUnits_size = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p01568628_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentUnits_dxdy"];
        }
        public static void Apply(Texture2D CurrentUnits, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(CurrentUnits, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D CurrentUnits, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(CurrentUnits, player);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D CurrentUnits, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(CurrentUnits, player);
        }
        public static void Using(Texture2D CurrentUnits, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(CurrentUnits, player);
        }
        public static void Using(Texture2D CurrentUnits, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_CurrentUnits_Texture != null) param_player_0_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0_fs_param_CurrentUnits_size != null) param_player_0_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0_fs_param_CurrentUnits_dxdy != null) param_player_0_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_CurrentUnits_Texture != null) param_player_0p003921569_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p003921569_fs_param_CurrentUnits_size != null) param_player_0p003921569_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p003921569_fs_param_CurrentUnits_dxdy != null) param_player_0p003921569_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_CurrentUnits_Texture != null) param_player_0p007843138_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p007843138_fs_param_CurrentUnits_size != null) param_player_0p007843138_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p007843138_fs_param_CurrentUnits_dxdy != null) param_player_0p007843138_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_CurrentUnits_Texture != null) param_player_0p01176471_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p01176471_fs_param_CurrentUnits_size != null) param_player_0p01176471_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01176471_fs_param_CurrentUnits_dxdy != null) param_player_0p01176471_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_CurrentUnits_Texture != null) param_player_0p01568628_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p01568628_fs_param_CurrentUnits_size != null) param_player_0p01568628_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01568628_fs_param_CurrentUnits_dxdy != null) param_player_0p01568628_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class BoundingTr
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BoundingTr");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
        }
        public static void Using(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
        }
        public static void Using(Texture2D Data)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BoundingBl
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BoundingBl");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
        }
        public static void Using(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
        }
        public static void Using(Texture2D Data)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class _BoundingTr
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_PreviousLevel_Texture;
        private static EffectParameter param_fs_param_PreviousLevel_size;
        private static EffectParameter param_fs_param_PreviousLevel_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/_BoundingTr");
            param_fs_param_PreviousLevel_Texture = CompiledEffect.Parameters["fs_param_PreviousLevel_Texture"];
            param_fs_param_PreviousLevel_size = CompiledEffect.Parameters["fs_param_PreviousLevel_size"];
            param_fs_param_PreviousLevel_dxdy = CompiledEffect.Parameters["fs_param_PreviousLevel_dxdy"];
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel)
        {
            if (param_fs_param_PreviousLevel_Texture != null) param_fs_param_PreviousLevel_Texture.SetValue(FragSharpMarshal.Marshal(PreviousLevel));
            if (param_fs_param_PreviousLevel_size != null) param_fs_param_PreviousLevel_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousLevel.Width, PreviousLevel.Height)));
            if (param_fs_param_PreviousLevel_dxdy != null) param_fs_param_PreviousLevel_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousLevel.Width, PreviousLevel.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class _BoundingBl
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_PreviousLevel_Texture;
        private static EffectParameter param_fs_param_PreviousLevel_size;
        private static EffectParameter param_fs_param_PreviousLevel_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/_BoundingBl");
            param_fs_param_PreviousLevel_Texture = CompiledEffect.Parameters["fs_param_PreviousLevel_Texture"];
            param_fs_param_PreviousLevel_size = CompiledEffect.Parameters["fs_param_PreviousLevel_size"];
            param_fs_param_PreviousLevel_dxdy = CompiledEffect.Parameters["fs_param_PreviousLevel_dxdy"];
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel)
        {
            if (param_fs_param_PreviousLevel_Texture != null) param_fs_param_PreviousLevel_Texture.SetValue(FragSharpMarshal.Marshal(PreviousLevel));
            if (param_fs_param_PreviousLevel_size != null) param_fs_param_PreviousLevel_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousLevel.Width, PreviousLevel.Height)));
            if (param_fs_param_PreviousLevel_dxdy != null) param_fs_param_PreviousLevel_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousLevel.Width, PreviousLevel.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class _PreferTl
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_PreviousLevel_Texture;
        private static EffectParameter param_fs_param_PreviousLevel_size;
        private static EffectParameter param_fs_param_PreviousLevel_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/_PreferTl");
            param_fs_param_PreviousLevel_Texture = CompiledEffect.Parameters["fs_param_PreviousLevel_Texture"];
            param_fs_param_PreviousLevel_size = CompiledEffect.Parameters["fs_param_PreviousLevel_size"];
            param_fs_param_PreviousLevel_dxdy = CompiledEffect.Parameters["fs_param_PreviousLevel_dxdy"];
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel)
        {
            if (param_fs_param_PreviousLevel_Texture != null) param_fs_param_PreviousLevel_Texture.SetValue(FragSharpMarshal.Marshal(PreviousLevel));
            if (param_fs_param_PreviousLevel_size != null) param_fs_param_PreviousLevel_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousLevel.Width, PreviousLevel.Height)));
            if (param_fs_param_PreviousLevel_dxdy != null) param_fs_param_PreviousLevel_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousLevel.Width, PreviousLevel.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class CheckForAttacking
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Random_Texture;
        private static EffectParameter param_fs_param_Random_size;
        private static EffectParameter param_fs_param_Random_dxdy;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/CheckForAttacking");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Random_Texture = CompiledEffect.Parameters["fs_param_Random_Texture"];
            param_fs_param_Random_size = CompiledEffect.Parameters["fs_param_Random_size"];
            param_fs_param_Random_dxdy = CompiledEffect.Parameters["fs_param_Random_dxdy"];
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data, Random, Magic);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data, Random, Magic);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data, Random, Magic);
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data, Random, Magic);
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Random, Texture2D Magic)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Random_Texture != null) param_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
            if (param_fs_param_Random_size != null) param_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
            if (param_fs_param_Random_dxdy != null) param_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BuildingInfusion_Delete
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Building_Texture;
        private static EffectParameter param_fs_param_Building_size;
        private static EffectParameter param_fs_param_Building_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BuildingInfusion_Delete");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Building_Texture = CompiledEffect.Parameters["fs_param_Building_Texture"];
            param_fs_param_Building_size = CompiledEffect.Parameters["fs_param_Building_size"];
            param_fs_param_Building_dxdy = CompiledEffect.Parameters["fs_param_Building_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Building_Texture != null) param_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
            if (param_fs_param_Building_size != null) param_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
            if (param_fs_param_Building_dxdy != null) param_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BuildingInfusion_Selection
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Building_Texture;
        private static EffectParameter param_fs_param_Building_size;
        private static EffectParameter param_fs_param_Building_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BuildingInfusion_Selection");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Building_Texture = CompiledEffect.Parameters["fs_param_Building_Texture"];
            param_fs_param_Building_size = CompiledEffect.Parameters["fs_param_Building_size"];
            param_fs_param_Building_dxdy = CompiledEffect.Parameters["fs_param_Building_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Building_Texture != null) param_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
            if (param_fs_param_Building_size != null) param_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
            if (param_fs_param_Building_dxdy != null) param_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BuildingDiffusion_Selection
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Building_Texture;
        private static EffectParameter param_fs_param_Building_size;
        private static EffectParameter param_fs_param_Building_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BuildingDiffusion_Selection");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Building_Texture = CompiledEffect.Parameters["fs_param_Building_Texture"];
            param_fs_param_Building_size = CompiledEffect.Parameters["fs_param_Building_size"];
            param_fs_param_Building_dxdy = CompiledEffect.Parameters["fs_param_Building_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Building_Texture != null) param_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
            if (param_fs_param_Building_size != null) param_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
            if (param_fs_param_Building_dxdy != null) param_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BuildingInfusion_Data
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Building_Texture;
        private static EffectParameter param_fs_param_Building_size;
        private static EffectParameter param_fs_param_Building_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BuildingInfusion_Data");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Building_Texture = CompiledEffect.Parameters["fs_param_Building_Texture"];
            param_fs_param_Building_size = CompiledEffect.Parameters["fs_param_Building_size"];
            param_fs_param_Building_dxdy = CompiledEffect.Parameters["fs_param_Building_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Building_Texture != null) param_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
            if (param_fs_param_Building_size != null) param_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
            if (param_fs_param_Building_dxdy != null) param_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BuildingDiffusion_Data
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Building_Texture;
        private static EffectParameter param_fs_param_Building_size;
        private static EffectParameter param_fs_param_Building_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BuildingDiffusion_Data");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Building_Texture = CompiledEffect.Parameters["fs_param_Building_Texture"];
            param_fs_param_Building_size = CompiledEffect.Parameters["fs_param_Building_size"];
            param_fs_param_Building_dxdy = CompiledEffect.Parameters["fs_param_Building_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building);
        }
        public static void Using(Texture2D Unit, Texture2D Building)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Building_Texture != null) param_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
            if (param_fs_param_Building_size != null) param_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
            if (param_fs_param_Building_dxdy != null) param_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class BuildingDiffusion_Target
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Building_Texture;
        private static EffectParameter param_fs_param_Building_size;
        private static EffectParameter param_fs_param_Building_dxdy;
        private static EffectParameter param_fs_param_TargetData_Texture;
        private static EffectParameter param_fs_param_TargetData_size;
        private static EffectParameter param_fs_param_TargetData_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/BuildingDiffusion_Target");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Building_Texture = CompiledEffect.Parameters["fs_param_Building_Texture"];
            param_fs_param_Building_size = CompiledEffect.Parameters["fs_param_Building_size"];
            param_fs_param_Building_dxdy = CompiledEffect.Parameters["fs_param_Building_dxdy"];
            param_fs_param_TargetData_Texture = CompiledEffect.Parameters["fs_param_TargetData_Texture"];
            param_fs_param_TargetData_size = CompiledEffect.Parameters["fs_param_TargetData_size"];
            param_fs_param_TargetData_dxdy = CompiledEffect.Parameters["fs_param_TargetData_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Building, Texture2D TargetData, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building, TargetData);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Building, Texture2D TargetData, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building, TargetData);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Building, Texture2D TargetData, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Building, TargetData);
        }
        public static void Using(Texture2D Unit, Texture2D Building, Texture2D TargetData, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Building, TargetData);
        }
        public static void Using(Texture2D Unit, Texture2D Building, Texture2D TargetData)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Building_Texture != null) param_fs_param_Building_Texture.SetValue(FragSharpMarshal.Marshal(Building));
            if (param_fs_param_Building_size != null) param_fs_param_Building_size.SetValue(FragSharpMarshal.Marshal(vec(Building.Width, Building.Height)));
            if (param_fs_param_Building_dxdy != null) param_fs_param_Building_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Building.Width, Building.Height)));
            if (param_fs_param_TargetData_Texture != null) param_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
            if (param_fs_param_TargetData_size != null) param_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
            if (param_fs_param_TargetData_dxdy != null) param_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class SpawnUnits
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_CurrentData_Texture;
        private static EffectParameter param_fs_param_CurrentData_size;
        private static EffectParameter param_fs_param_CurrentData_dxdy;
        private static EffectParameter param_fs_param_PreviousData_Texture;
        private static EffectParameter param_fs_param_PreviousData_size;
        private static EffectParameter param_fs_param_PreviousData_dxdy;
        private static EffectParameter param_fs_param_Random_Texture;
        private static EffectParameter param_fs_param_Random_size;
        private static EffectParameter param_fs_param_Random_dxdy;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/SpawnUnits");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_CurrentData_Texture = CompiledEffect.Parameters["fs_param_CurrentData_Texture"];
            param_fs_param_CurrentData_size = CompiledEffect.Parameters["fs_param_CurrentData_size"];
            param_fs_param_CurrentData_dxdy = CompiledEffect.Parameters["fs_param_CurrentData_dxdy"];
            param_fs_param_PreviousData_Texture = CompiledEffect.Parameters["fs_param_PreviousData_Texture"];
            param_fs_param_PreviousData_size = CompiledEffect.Parameters["fs_param_PreviousData_size"];
            param_fs_param_PreviousData_dxdy = CompiledEffect.Parameters["fs_param_PreviousData_dxdy"];
            param_fs_param_Random_Texture = CompiledEffect.Parameters["fs_param_Random_Texture"];
            param_fs_param_Random_size = CompiledEffect.Parameters["fs_param_Random_size"];
            param_fs_param_Random_dxdy = CompiledEffect.Parameters["fs_param_Random_dxdy"];
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D CurrentData, Texture2D PreviousData, Texture2D Random, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, CurrentData, PreviousData, Random, Magic);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D CurrentData, Texture2D PreviousData, Texture2D Random, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, CurrentData, PreviousData, Random, Magic);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D CurrentData, Texture2D PreviousData, Texture2D Random, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, CurrentData, PreviousData, Random, Magic);
        }
        public static void Using(Texture2D Unit, Texture2D CurrentData, Texture2D PreviousData, Texture2D Random, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, CurrentData, PreviousData, Random, Magic);
        }
        public static void Using(Texture2D Unit, Texture2D CurrentData, Texture2D PreviousData, Texture2D Random, Texture2D Magic)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_CurrentData_Texture != null) param_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
            if (param_fs_param_CurrentData_size != null) param_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
            if (param_fs_param_CurrentData_dxdy != null) param_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
            if (param_fs_param_PreviousData_Texture != null) param_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
            if (param_fs_param_PreviousData_size != null) param_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
            if (param_fs_param_PreviousData_dxdy != null) param_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
            if (param_fs_param_Random_Texture != null) param_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
            if (param_fs_param_Random_size != null) param_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
            if (param_fs_param_Random_dxdy != null) param_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class SetSpawn_Unit
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;
        private static EffectParameter param_fs_param_Teams;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSpawn_Unit");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
            param_fs_param_Teams = CompiledEffect.Parameters["fs_param_Teams"];
        }
        public static void Apply(Texture2D Unit, Texture2D Data, Texture2D Magic, PlayerTuple Teams, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data, Magic, Teams);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Data, Texture2D Magic, PlayerTuple Teams, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data, Magic, Teams);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Magic, PlayerTuple Teams, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data, Magic, Teams);
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Magic, PlayerTuple Teams, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data, Magic, Teams);
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Magic, PlayerTuple Teams)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Teams != null) param_fs_param_Teams.SetValue(FragSharpMarshal.Marshal(Teams));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class SetSpawn_Target
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Target_Texture;
        private static EffectParameter param_fs_param_Target_size;
        private static EffectParameter param_fs_param_Target_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Random_Texture;
        private static EffectParameter param_fs_param_Random_size;
        private static EffectParameter param_fs_param_Random_dxdy;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSpawn_Target");
            param_fs_param_Target_Texture = CompiledEffect.Parameters["fs_param_Target_Texture"];
            param_fs_param_Target_size = CompiledEffect.Parameters["fs_param_Target_size"];
            param_fs_param_Target_dxdy = CompiledEffect.Parameters["fs_param_Target_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Random_Texture = CompiledEffect.Parameters["fs_param_Random_Texture"];
            param_fs_param_Random_size = CompiledEffect.Parameters["fs_param_Random_size"];
            param_fs_param_Random_dxdy = CompiledEffect.Parameters["fs_param_Random_dxdy"];
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
        }
        public static void Apply(Texture2D Target, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Target, Data, Random, Magic);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Target, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Target, Data, Random, Magic);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Target, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Target, Data, Random, Magic);
        }
        public static void Using(Texture2D Target, Texture2D Data, Texture2D Random, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Target, Data, Random, Magic);
        }
        public static void Using(Texture2D Target, Texture2D Data, Texture2D Random, Texture2D Magic)
        {
            if (param_fs_param_Target_Texture != null) param_fs_param_Target_Texture.SetValue(FragSharpMarshal.Marshal(Target));
            if (param_fs_param_Target_size != null) param_fs_param_Target_size.SetValue(FragSharpMarshal.Marshal(vec(Target.Width, Target.Height)));
            if (param_fs_param_Target_dxdy != null) param_fs_param_Target_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Target.Width, Target.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Random_Texture != null) param_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
            if (param_fs_param_Random_size != null) param_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
            if (param_fs_param_Random_dxdy != null) param_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class SetSpawn_Data
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSpawn_Data");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data);
        }
        public static void Using(Texture2D Unit, Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data);
        }
        public static void Using(Texture2D Unit, Texture2D Data)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class AddCorpses
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Corpses_Texture;
        private static EffectParameter param_fs_param_Corpses_size;
        private static EffectParameter param_fs_param_Corpses_dxdy;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/AddCorpses");
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Corpses_Texture = CompiledEffect.Parameters["fs_param_Corpses_Texture"];
            param_fs_param_Corpses_size = CompiledEffect.Parameters["fs_param_Corpses_size"];
            param_fs_param_Corpses_dxdy = CompiledEffect.Parameters["fs_param_Corpses_dxdy"];
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
        }
        public static void Apply(Texture2D Unit, Texture2D Data, Texture2D Corpses, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data, Corpses, Magic);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Unit, Texture2D Data, Texture2D Corpses, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data, Corpses, Magic);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Corpses, Texture2D Magic, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Unit, Data, Corpses, Magic);
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Corpses, Texture2D Magic, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Unit, Data, Corpses, Magic);
        }
        public static void Using(Texture2D Unit, Texture2D Data, Texture2D Corpses, Texture2D Magic)
        {
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Corpses_Texture != null) param_fs_param_Corpses_Texture.SetValue(FragSharpMarshal.Marshal(Corpses));
            if (param_fs_param_Corpses_size != null) param_fs_param_Corpses_size.SetValue(FragSharpMarshal.Marshal(vec(Corpses.Width, Corpses.Height)));
            if (param_fs_param_Corpses_dxdy != null) param_fs_param_Corpses_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Corpses.Width, Corpses.Height)));
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class UpdateRandomField
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Random_Texture;
        private static EffectParameter param_fs_param_Random_size;
        private static EffectParameter param_fs_param_Random_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/UpdateRandomField");
            param_fs_param_Random_Texture = CompiledEffect.Parameters["fs_param_Random_Texture"];
            param_fs_param_Random_size = CompiledEffect.Parameters["fs_param_Random_size"];
            param_fs_param_Random_dxdy = CompiledEffect.Parameters["fs_param_Random_dxdy"];
        }
        public static void Apply(Texture2D Random, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Random);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Random, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Random);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Random, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Random);
        }
        public static void Using(Texture2D Random, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Random);
        }
        public static void Using(Texture2D Random)
        {
            if (param_fs_param_Random_Texture != null) param_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
            if (param_fs_param_Random_size != null) param_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
            if (param_fs_param_Random_dxdy != null) param_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}











namespace Game
{
    public partial class DoUnitSummary_1
    {
        private static Effect CompiledEffect_player_0_only_selected_true;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0_only_selected_false;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p003921569_only_selected_true;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p003921569_only_selected_false;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p007843138_only_selected_true;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p007843138_only_selected_false;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01176471_only_selected_true;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01176471_only_selected_false;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01568628_only_selected_true;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01568628_only_selected_false;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0_only_selected=true");
            param_player_0_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0_only_selected_true_fs_param_Data_size = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0_only_selected_true_fs_param_Units_size = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0_only_selected=false");
            param_player_0_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0_only_selected_false_fs_param_Data_size = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0_only_selected_false_fs_param_Units_size = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p003921569_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.003921569_only_selected=true");
            param_player_0p003921569_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p003921569_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p003921569_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p003921569_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.003921569_only_selected=false");
            param_player_0p003921569_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p003921569_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p003921569_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p007843138_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.007843138_only_selected=true");
            param_player_0p007843138_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p007843138_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p007843138_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p007843138_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.007843138_only_selected=false");
            param_player_0p007843138_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p007843138_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p007843138_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01176471_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.01176471_only_selected=true");
            param_player_0p01176471_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p01176471_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p01176471_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01176471_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.01176471_only_selected=false");
            param_player_0p01176471_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p01176471_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p01176471_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01568628_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.01568628_only_selected=true");
            param_player_0p01568628_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p01568628_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p01568628_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01568628_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_1_player=0.01568628_only_selected=false");
            param_player_0p01568628_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p01568628_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p01568628_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected)
        {
            if (abs((float)(player - 0)) < .0019 && only_selected == true)
            {
                if (param_player_0_only_selected_true_fs_param_Data_Texture != null) param_player_0_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_only_selected_true_fs_param_Data_size != null) param_player_0_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_true_fs_param_Data_dxdy != null) param_player_0_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_true_fs_param_Units_Texture != null) param_player_0_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_only_selected_true_fs_param_Units_size != null) param_player_0_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_only_selected_true_fs_param_Units_dxdy != null) param_player_0_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && only_selected == false)
            {
                if (param_player_0_only_selected_false_fs_param_Data_Texture != null) param_player_0_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_only_selected_false_fs_param_Data_size != null) param_player_0_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_false_fs_param_Data_dxdy != null) param_player_0_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_false_fs_param_Units_Texture != null) param_player_0_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_only_selected_false_fs_param_Units_size != null) param_player_0_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_only_selected_false_fs_param_Units_dxdy != null) param_player_0_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && only_selected == true)
            {
                if (param_player_0p003921569_only_selected_true_fs_param_Data_Texture != null) param_player_0p003921569_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_only_selected_true_fs_param_Data_size != null) param_player_0p003921569_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_true_fs_param_Data_dxdy != null) param_player_0p003921569_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_true_fs_param_Units_Texture != null) param_player_0p003921569_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_only_selected_true_fs_param_Units_size != null) param_player_0p003921569_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_only_selected_true_fs_param_Units_dxdy != null) param_player_0p003921569_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p003921569_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && only_selected == false)
            {
                if (param_player_0p003921569_only_selected_false_fs_param_Data_Texture != null) param_player_0p003921569_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_only_selected_false_fs_param_Data_size != null) param_player_0p003921569_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_false_fs_param_Data_dxdy != null) param_player_0p003921569_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_false_fs_param_Units_Texture != null) param_player_0p003921569_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_only_selected_false_fs_param_Units_size != null) param_player_0p003921569_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_only_selected_false_fs_param_Units_dxdy != null) param_player_0p003921569_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p003921569_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && only_selected == true)
            {
                if (param_player_0p007843138_only_selected_true_fs_param_Data_Texture != null) param_player_0p007843138_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_only_selected_true_fs_param_Data_size != null) param_player_0p007843138_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_true_fs_param_Data_dxdy != null) param_player_0p007843138_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_true_fs_param_Units_Texture != null) param_player_0p007843138_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_only_selected_true_fs_param_Units_size != null) param_player_0p007843138_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_only_selected_true_fs_param_Units_dxdy != null) param_player_0p007843138_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p007843138_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && only_selected == false)
            {
                if (param_player_0p007843138_only_selected_false_fs_param_Data_Texture != null) param_player_0p007843138_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_only_selected_false_fs_param_Data_size != null) param_player_0p007843138_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_false_fs_param_Data_dxdy != null) param_player_0p007843138_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_false_fs_param_Units_Texture != null) param_player_0p007843138_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_only_selected_false_fs_param_Units_size != null) param_player_0p007843138_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_only_selected_false_fs_param_Units_dxdy != null) param_player_0p007843138_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p007843138_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && only_selected == true)
            {
                if (param_player_0p01176471_only_selected_true_fs_param_Data_Texture != null) param_player_0p01176471_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_only_selected_true_fs_param_Data_size != null) param_player_0p01176471_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_true_fs_param_Data_dxdy != null) param_player_0p01176471_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_true_fs_param_Units_Texture != null) param_player_0p01176471_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_only_selected_true_fs_param_Units_size != null) param_player_0p01176471_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_only_selected_true_fs_param_Units_dxdy != null) param_player_0p01176471_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01176471_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && only_selected == false)
            {
                if (param_player_0p01176471_only_selected_false_fs_param_Data_Texture != null) param_player_0p01176471_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_only_selected_false_fs_param_Data_size != null) param_player_0p01176471_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_false_fs_param_Data_dxdy != null) param_player_0p01176471_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_false_fs_param_Units_Texture != null) param_player_0p01176471_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_only_selected_false_fs_param_Units_size != null) param_player_0p01176471_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_only_selected_false_fs_param_Units_dxdy != null) param_player_0p01176471_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01176471_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && only_selected == true)
            {
                if (param_player_0p01568628_only_selected_true_fs_param_Data_Texture != null) param_player_0p01568628_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_only_selected_true_fs_param_Data_size != null) param_player_0p01568628_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_true_fs_param_Data_dxdy != null) param_player_0p01568628_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_true_fs_param_Units_Texture != null) param_player_0p01568628_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_only_selected_true_fs_param_Units_size != null) param_player_0p01568628_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_only_selected_true_fs_param_Units_dxdy != null) param_player_0p01568628_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01568628_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && only_selected == false)
            {
                if (param_player_0p01568628_only_selected_false_fs_param_Data_Texture != null) param_player_0p01568628_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_only_selected_false_fs_param_Data_size != null) param_player_0p01568628_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_false_fs_param_Data_dxdy != null) param_player_0p01568628_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_false_fs_param_Units_Texture != null) param_player_0p01568628_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_only_selected_false_fs_param_Units_size != null) param_player_0p01568628_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_only_selected_false_fs_param_Units_dxdy != null) param_player_0p01568628_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01568628_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}











namespace Game
{
    public partial class DoUnitSummary_2
    {
        private static Effect CompiledEffect_player_0_only_selected_true;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0_only_selected_false;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p003921569_only_selected_true;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p003921569_only_selected_false;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p007843138_only_selected_true;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p007843138_only_selected_false;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01176471_only_selected_true;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01176471_only_selected_false;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_only_selected_false_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01568628_only_selected_true;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_only_selected_true_fs_param_Units_dxdy;
        private static Effect CompiledEffect_player_0p01568628_only_selected_false;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_only_selected_false_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0_only_selected=true");
            param_player_0_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0_only_selected_true_fs_param_Data_size = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0_only_selected_true_fs_param_Units_size = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0_only_selected=false");
            param_player_0_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0_only_selected_false_fs_param_Data_size = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0_only_selected_false_fs_param_Units_size = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p003921569_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.003921569_only_selected=true");
            param_player_0p003921569_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p003921569_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p003921569_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p003921569_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p003921569_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.003921569_only_selected=false");
            param_player_0p003921569_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p003921569_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p003921569_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p003921569_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p007843138_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.007843138_only_selected=true");
            param_player_0p007843138_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p007843138_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p007843138_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p007843138_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p007843138_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.007843138_only_selected=false");
            param_player_0p007843138_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p007843138_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p007843138_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p007843138_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01176471_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.01176471_only_selected=true");
            param_player_0p01176471_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p01176471_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p01176471_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p01176471_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01176471_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.01176471_only_selected=false");
            param_player_0p01176471_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p01176471_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p01176471_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p01176471_only_selected_false.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01568628_only_selected_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.01568628_only_selected=true");
            param_player_0p01568628_only_selected_true_fs_param_Data_Texture = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_only_selected_true_fs_param_Data_size = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Data_size"];
            param_player_0p01568628_only_selected_true_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_only_selected_true_fs_param_Units_Texture = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_only_selected_true_fs_param_Units_size = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Units_size"];
            param_player_0p01568628_only_selected_true_fs_param_Units_dxdy = CompiledEffect_player_0p01568628_only_selected_true.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_player_0p01568628_only_selected_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DoUnitSummary_2_player=0.01568628_only_selected=false");
            param_player_0p01568628_only_selected_false_fs_param_Data_Texture = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_only_selected_false_fs_param_Data_size = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Data_size"];
            param_player_0p01568628_only_selected_false_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_only_selected_false_fs_param_Units_Texture = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_only_selected_false_fs_param_Units_size = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Units_size"];
            param_player_0p01568628_only_selected_false_fs_param_Units_dxdy = CompiledEffect_player_0p01568628_only_selected_false.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected)
        {
            if (abs((float)(player - 0)) < .0019 && only_selected == true)
            {
                if (param_player_0_only_selected_true_fs_param_Data_Texture != null) param_player_0_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_only_selected_true_fs_param_Data_size != null) param_player_0_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_true_fs_param_Data_dxdy != null) param_player_0_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_true_fs_param_Units_Texture != null) param_player_0_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_only_selected_true_fs_param_Units_size != null) param_player_0_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_only_selected_true_fs_param_Units_dxdy != null) param_player_0_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && only_selected == false)
            {
                if (param_player_0_only_selected_false_fs_param_Data_Texture != null) param_player_0_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_only_selected_false_fs_param_Data_size != null) param_player_0_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_false_fs_param_Data_dxdy != null) param_player_0_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_only_selected_false_fs_param_Units_Texture != null) param_player_0_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_only_selected_false_fs_param_Units_size != null) param_player_0_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_only_selected_false_fs_param_Units_dxdy != null) param_player_0_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && only_selected == true)
            {
                if (param_player_0p003921569_only_selected_true_fs_param_Data_Texture != null) param_player_0p003921569_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_only_selected_true_fs_param_Data_size != null) param_player_0p003921569_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_true_fs_param_Data_dxdy != null) param_player_0p003921569_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_true_fs_param_Units_Texture != null) param_player_0p003921569_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_only_selected_true_fs_param_Units_size != null) param_player_0p003921569_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_only_selected_true_fs_param_Units_dxdy != null) param_player_0p003921569_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p003921569_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && only_selected == false)
            {
                if (param_player_0p003921569_only_selected_false_fs_param_Data_Texture != null) param_player_0p003921569_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_only_selected_false_fs_param_Data_size != null) param_player_0p003921569_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_false_fs_param_Data_dxdy != null) param_player_0p003921569_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_only_selected_false_fs_param_Units_Texture != null) param_player_0p003921569_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_only_selected_false_fs_param_Units_size != null) param_player_0p003921569_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_only_selected_false_fs_param_Units_dxdy != null) param_player_0p003921569_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p003921569_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && only_selected == true)
            {
                if (param_player_0p007843138_only_selected_true_fs_param_Data_Texture != null) param_player_0p007843138_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_only_selected_true_fs_param_Data_size != null) param_player_0p007843138_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_true_fs_param_Data_dxdy != null) param_player_0p007843138_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_true_fs_param_Units_Texture != null) param_player_0p007843138_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_only_selected_true_fs_param_Units_size != null) param_player_0p007843138_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_only_selected_true_fs_param_Units_dxdy != null) param_player_0p007843138_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p007843138_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && only_selected == false)
            {
                if (param_player_0p007843138_only_selected_false_fs_param_Data_Texture != null) param_player_0p007843138_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_only_selected_false_fs_param_Data_size != null) param_player_0p007843138_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_false_fs_param_Data_dxdy != null) param_player_0p007843138_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_only_selected_false_fs_param_Units_Texture != null) param_player_0p007843138_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_only_selected_false_fs_param_Units_size != null) param_player_0p007843138_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_only_selected_false_fs_param_Units_dxdy != null) param_player_0p007843138_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p007843138_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && only_selected == true)
            {
                if (param_player_0p01176471_only_selected_true_fs_param_Data_Texture != null) param_player_0p01176471_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_only_selected_true_fs_param_Data_size != null) param_player_0p01176471_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_true_fs_param_Data_dxdy != null) param_player_0p01176471_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_true_fs_param_Units_Texture != null) param_player_0p01176471_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_only_selected_true_fs_param_Units_size != null) param_player_0p01176471_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_only_selected_true_fs_param_Units_dxdy != null) param_player_0p01176471_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01176471_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && only_selected == false)
            {
                if (param_player_0p01176471_only_selected_false_fs_param_Data_Texture != null) param_player_0p01176471_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_only_selected_false_fs_param_Data_size != null) param_player_0p01176471_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_false_fs_param_Data_dxdy != null) param_player_0p01176471_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_only_selected_false_fs_param_Units_Texture != null) param_player_0p01176471_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_only_selected_false_fs_param_Units_size != null) param_player_0p01176471_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_only_selected_false_fs_param_Units_dxdy != null) param_player_0p01176471_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01176471_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && only_selected == true)
            {
                if (param_player_0p01568628_only_selected_true_fs_param_Data_Texture != null) param_player_0p01568628_only_selected_true_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_only_selected_true_fs_param_Data_size != null) param_player_0p01568628_only_selected_true_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_true_fs_param_Data_dxdy != null) param_player_0p01568628_only_selected_true_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_true_fs_param_Units_Texture != null) param_player_0p01568628_only_selected_true_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_only_selected_true_fs_param_Units_size != null) param_player_0p01568628_only_selected_true_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_only_selected_true_fs_param_Units_dxdy != null) param_player_0p01568628_only_selected_true_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01568628_only_selected_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && only_selected == false)
            {
                if (param_player_0p01568628_only_selected_false_fs_param_Data_Texture != null) param_player_0p01568628_only_selected_false_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_only_selected_false_fs_param_Data_size != null) param_player_0p01568628_only_selected_false_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_false_fs_param_Data_dxdy != null) param_player_0p01568628_only_selected_false_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_only_selected_false_fs_param_Units_Texture != null) param_player_0p01568628_only_selected_false_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_only_selected_false_fs_param_Units_size != null) param_player_0p01568628_only_selected_false_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_only_selected_false_fs_param_Units_dxdy != null) param_player_0p01568628_only_selected_false_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_player_0p01568628_only_selected_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}









namespace Game
{
    public partial class CountUnitTypeForAllPlayers
    {
        private static Effect CompiledEffect_type_0p003921569;
        private static EffectParameter param_type_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_type_0p003921569_fs_param_Data_size;
        private static EffectParameter param_type_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_type_0p003921569_fs_param_Units_size;
        private static EffectParameter param_type_0p003921569_fs_param_Units_dxdy;
        private static Effect CompiledEffect_type_0p007843138;
        private static EffectParameter param_type_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_type_0p007843138_fs_param_Data_size;
        private static EffectParameter param_type_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_type_0p007843138_fs_param_Units_size;
        private static EffectParameter param_type_0p007843138_fs_param_Units_dxdy;
        private static Effect CompiledEffect_type_0p01176471;
        private static EffectParameter param_type_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_type_0p01176471_fs_param_Data_size;
        private static EffectParameter param_type_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_type_0p01176471_fs_param_Units_size;
        private static EffectParameter param_type_0p01176471_fs_param_Units_dxdy;
        private static Effect CompiledEffect_type_0p01568628;
        private static EffectParameter param_type_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_type_0p01568628_fs_param_Data_size;
        private static EffectParameter param_type_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_type_0p01568628_fs_param_Units_size;
        private static EffectParameter param_type_0p01568628_fs_param_Units_dxdy;
        private static Effect CompiledEffect_type_0p01960784;
        private static EffectParameter param_type_0p01960784_fs_param_Data_Texture;
        private static EffectParameter param_type_0p01960784_fs_param_Data_size;
        private static EffectParameter param_type_0p01960784_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p01960784_fs_param_Units_Texture;
        private static EffectParameter param_type_0p01960784_fs_param_Units_size;
        private static EffectParameter param_type_0p01960784_fs_param_Units_dxdy;
        private static Effect CompiledEffect_type_0p02352941;
        private static EffectParameter param_type_0p02352941_fs_param_Data_Texture;
        private static EffectParameter param_type_0p02352941_fs_param_Data_size;
        private static EffectParameter param_type_0p02352941_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p02352941_fs_param_Units_Texture;
        private static EffectParameter param_type_0p02352941_fs_param_Units_size;
        private static EffectParameter param_type_0p02352941_fs_param_Units_dxdy;
        private static Effect CompiledEffect_type_0p02745098;
        private static EffectParameter param_type_0p02745098_fs_param_Data_Texture;
        private static EffectParameter param_type_0p02745098_fs_param_Data_size;
        private static EffectParameter param_type_0p02745098_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p02745098_fs_param_Units_Texture;
        private static EffectParameter param_type_0p02745098_fs_param_Units_size;
        private static EffectParameter param_type_0p02745098_fs_param_Units_dxdy;
        private static Effect CompiledEffect_type_0p03137255;
        private static EffectParameter param_type_0p03137255_fs_param_Data_Texture;
        private static EffectParameter param_type_0p03137255_fs_param_Data_size;
        private static EffectParameter param_type_0p03137255_fs_param_Data_dxdy;
        private static EffectParameter param_type_0p03137255_fs_param_Units_Texture;
        private static EffectParameter param_type_0p03137255_fs_param_Units_size;
        private static EffectParameter param_type_0p03137255_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect_type_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.003921569");
            param_type_0p003921569_fs_param_Data_Texture = CompiledEffect_type_0p003921569.Parameters["fs_param_Data_Texture"];
            param_type_0p003921569_fs_param_Data_size = CompiledEffect_type_0p003921569.Parameters["fs_param_Data_size"];
            param_type_0p003921569_fs_param_Data_dxdy = CompiledEffect_type_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_type_0p003921569_fs_param_Units_Texture = CompiledEffect_type_0p003921569.Parameters["fs_param_Units_Texture"];
            param_type_0p003921569_fs_param_Units_size = CompiledEffect_type_0p003921569.Parameters["fs_param_Units_size"];
            param_type_0p003921569_fs_param_Units_dxdy = CompiledEffect_type_0p003921569.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_type_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.007843138");
            param_type_0p007843138_fs_param_Data_Texture = CompiledEffect_type_0p007843138.Parameters["fs_param_Data_Texture"];
            param_type_0p007843138_fs_param_Data_size = CompiledEffect_type_0p007843138.Parameters["fs_param_Data_size"];
            param_type_0p007843138_fs_param_Data_dxdy = CompiledEffect_type_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_type_0p007843138_fs_param_Units_Texture = CompiledEffect_type_0p007843138.Parameters["fs_param_Units_Texture"];
            param_type_0p007843138_fs_param_Units_size = CompiledEffect_type_0p007843138.Parameters["fs_param_Units_size"];
            param_type_0p007843138_fs_param_Units_dxdy = CompiledEffect_type_0p007843138.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_type_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.01176471");
            param_type_0p01176471_fs_param_Data_Texture = CompiledEffect_type_0p01176471.Parameters["fs_param_Data_Texture"];
            param_type_0p01176471_fs_param_Data_size = CompiledEffect_type_0p01176471.Parameters["fs_param_Data_size"];
            param_type_0p01176471_fs_param_Data_dxdy = CompiledEffect_type_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_type_0p01176471_fs_param_Units_Texture = CompiledEffect_type_0p01176471.Parameters["fs_param_Units_Texture"];
            param_type_0p01176471_fs_param_Units_size = CompiledEffect_type_0p01176471.Parameters["fs_param_Units_size"];
            param_type_0p01176471_fs_param_Units_dxdy = CompiledEffect_type_0p01176471.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_type_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.01568628");
            param_type_0p01568628_fs_param_Data_Texture = CompiledEffect_type_0p01568628.Parameters["fs_param_Data_Texture"];
            param_type_0p01568628_fs_param_Data_size = CompiledEffect_type_0p01568628.Parameters["fs_param_Data_size"];
            param_type_0p01568628_fs_param_Data_dxdy = CompiledEffect_type_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_type_0p01568628_fs_param_Units_Texture = CompiledEffect_type_0p01568628.Parameters["fs_param_Units_Texture"];
            param_type_0p01568628_fs_param_Units_size = CompiledEffect_type_0p01568628.Parameters["fs_param_Units_size"];
            param_type_0p01568628_fs_param_Units_dxdy = CompiledEffect_type_0p01568628.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_type_0p01960784 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.01960784");
            param_type_0p01960784_fs_param_Data_Texture = CompiledEffect_type_0p01960784.Parameters["fs_param_Data_Texture"];
            param_type_0p01960784_fs_param_Data_size = CompiledEffect_type_0p01960784.Parameters["fs_param_Data_size"];
            param_type_0p01960784_fs_param_Data_dxdy = CompiledEffect_type_0p01960784.Parameters["fs_param_Data_dxdy"];
            param_type_0p01960784_fs_param_Units_Texture = CompiledEffect_type_0p01960784.Parameters["fs_param_Units_Texture"];
            param_type_0p01960784_fs_param_Units_size = CompiledEffect_type_0p01960784.Parameters["fs_param_Units_size"];
            param_type_0p01960784_fs_param_Units_dxdy = CompiledEffect_type_0p01960784.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_type_0p02352941 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.02352941");
            param_type_0p02352941_fs_param_Data_Texture = CompiledEffect_type_0p02352941.Parameters["fs_param_Data_Texture"];
            param_type_0p02352941_fs_param_Data_size = CompiledEffect_type_0p02352941.Parameters["fs_param_Data_size"];
            param_type_0p02352941_fs_param_Data_dxdy = CompiledEffect_type_0p02352941.Parameters["fs_param_Data_dxdy"];
            param_type_0p02352941_fs_param_Units_Texture = CompiledEffect_type_0p02352941.Parameters["fs_param_Units_Texture"];
            param_type_0p02352941_fs_param_Units_size = CompiledEffect_type_0p02352941.Parameters["fs_param_Units_size"];
            param_type_0p02352941_fs_param_Units_dxdy = CompiledEffect_type_0p02352941.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_type_0p02745098 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.02745098");
            param_type_0p02745098_fs_param_Data_Texture = CompiledEffect_type_0p02745098.Parameters["fs_param_Data_Texture"];
            param_type_0p02745098_fs_param_Data_size = CompiledEffect_type_0p02745098.Parameters["fs_param_Data_size"];
            param_type_0p02745098_fs_param_Data_dxdy = CompiledEffect_type_0p02745098.Parameters["fs_param_Data_dxdy"];
            param_type_0p02745098_fs_param_Units_Texture = CompiledEffect_type_0p02745098.Parameters["fs_param_Units_Texture"];
            param_type_0p02745098_fs_param_Units_size = CompiledEffect_type_0p02745098.Parameters["fs_param_Units_size"];
            param_type_0p02745098_fs_param_Units_dxdy = CompiledEffect_type_0p02745098.Parameters["fs_param_Units_dxdy"];
            CompiledEffect_type_0p03137255 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnitTypeForAllPlayers_type=0.03137255");
            param_type_0p03137255_fs_param_Data_Texture = CompiledEffect_type_0p03137255.Parameters["fs_param_Data_Texture"];
            param_type_0p03137255_fs_param_Data_size = CompiledEffect_type_0p03137255.Parameters["fs_param_Data_size"];
            param_type_0p03137255_fs_param_Data_dxdy = CompiledEffect_type_0p03137255.Parameters["fs_param_Data_dxdy"];
            param_type_0p03137255_fs_param_Units_Texture = CompiledEffect_type_0p03137255.Parameters["fs_param_Units_Texture"];
            param_type_0p03137255_fs_param_Units_size = CompiledEffect_type_0p03137255.Parameters["fs_param_Units_size"];
            param_type_0p03137255_fs_param_Units_dxdy = CompiledEffect_type_0p03137255.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, type);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, type);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, float type, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, type);
        }
        public static void Using(Texture2D Data, Texture2D Units, float type, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, type);
        }
        public static void Using(Texture2D Data, Texture2D Units, float type)
        {
            if (abs((float)(type - 0.003921569)) < .0019)
            {
                if (param_type_0p003921569_fs_param_Data_Texture != null) param_type_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p003921569_fs_param_Data_size != null) param_type_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p003921569_fs_param_Data_dxdy != null) param_type_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p003921569_fs_param_Units_Texture != null) param_type_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p003921569_fs_param_Units_size != null) param_type_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p003921569_fs_param_Units_dxdy != null) param_type_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.007843138)) < .0019)
            {
                if (param_type_0p007843138_fs_param_Data_Texture != null) param_type_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p007843138_fs_param_Data_size != null) param_type_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p007843138_fs_param_Data_dxdy != null) param_type_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p007843138_fs_param_Units_Texture != null) param_type_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p007843138_fs_param_Units_size != null) param_type_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p007843138_fs_param_Units_dxdy != null) param_type_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.01176471)) < .0019)
            {
                if (param_type_0p01176471_fs_param_Data_Texture != null) param_type_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p01176471_fs_param_Data_size != null) param_type_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p01176471_fs_param_Data_dxdy != null) param_type_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p01176471_fs_param_Units_Texture != null) param_type_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p01176471_fs_param_Units_size != null) param_type_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p01176471_fs_param_Units_dxdy != null) param_type_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.01568628)) < .0019)
            {
                if (param_type_0p01568628_fs_param_Data_Texture != null) param_type_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p01568628_fs_param_Data_size != null) param_type_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p01568628_fs_param_Data_dxdy != null) param_type_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p01568628_fs_param_Units_Texture != null) param_type_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p01568628_fs_param_Units_size != null) param_type_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p01568628_fs_param_Units_dxdy != null) param_type_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.01960784)) < .0019)
            {
                if (param_type_0p01960784_fs_param_Data_Texture != null) param_type_0p01960784_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p01960784_fs_param_Data_size != null) param_type_0p01960784_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p01960784_fs_param_Data_dxdy != null) param_type_0p01960784_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p01960784_fs_param_Units_Texture != null) param_type_0p01960784_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p01960784_fs_param_Units_size != null) param_type_0p01960784_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p01960784_fs_param_Units_dxdy != null) param_type_0p01960784_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p01960784.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.02352941)) < .0019)
            {
                if (param_type_0p02352941_fs_param_Data_Texture != null) param_type_0p02352941_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p02352941_fs_param_Data_size != null) param_type_0p02352941_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p02352941_fs_param_Data_dxdy != null) param_type_0p02352941_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p02352941_fs_param_Units_Texture != null) param_type_0p02352941_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p02352941_fs_param_Units_size != null) param_type_0p02352941_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p02352941_fs_param_Units_dxdy != null) param_type_0p02352941_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p02352941.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.02745098)) < .0019)
            {
                if (param_type_0p02745098_fs_param_Data_Texture != null) param_type_0p02745098_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p02745098_fs_param_Data_size != null) param_type_0p02745098_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p02745098_fs_param_Data_dxdy != null) param_type_0p02745098_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p02745098_fs_param_Units_Texture != null) param_type_0p02745098_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p02745098_fs_param_Units_size != null) param_type_0p02745098_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p02745098_fs_param_Units_dxdy != null) param_type_0p02745098_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p02745098.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(type - 0.03137255)) < .0019)
            {
                if (param_type_0p03137255_fs_param_Data_Texture != null) param_type_0p03137255_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_type_0p03137255_fs_param_Data_size != null) param_type_0p03137255_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_type_0p03137255_fs_param_Data_dxdy != null) param_type_0p03137255_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_type_0p03137255_fs_param_Units_Texture != null) param_type_0p03137255_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_type_0p03137255_fs_param_Units_size != null) param_type_0p03137255_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_type_0p03137255_fs_param_Units_dxdy != null) param_type_0p03137255_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                CompiledEffect_type_0p03137255.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class CountReduce_4x1byte
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_PreviousLevel_Texture;
        private static EffectParameter param_fs_param_PreviousLevel_size;
        private static EffectParameter param_fs_param_PreviousLevel_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/CountReduce_4x1byte");
            param_fs_param_PreviousLevel_Texture = CompiledEffect.Parameters["fs_param_PreviousLevel_Texture"];
            param_fs_param_PreviousLevel_size = CompiledEffect.Parameters["fs_param_PreviousLevel_size"];
            param_fs_param_PreviousLevel_dxdy = CompiledEffect.Parameters["fs_param_PreviousLevel_dxdy"];
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel)
        {
            if (param_fs_param_PreviousLevel_Texture != null) param_fs_param_PreviousLevel_Texture.SetValue(FragSharpMarshal.Marshal(PreviousLevel));
            if (param_fs_param_PreviousLevel_size != null) param_fs_param_PreviousLevel_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousLevel.Width, PreviousLevel.Height)));
            if (param_fs_param_PreviousLevel_dxdy != null) param_fs_param_PreviousLevel_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousLevel.Width, PreviousLevel.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}






namespace Game
{
    public partial class CountUnits
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fs_param_Units_Texture;
        private static EffectParameter param_player_0_fs_param_Units_size;
        private static EffectParameter param_player_0_fs_param_Units_dxdy;
        private static EffectParameter param_player_0_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_only_selected;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnits_player=0");
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_fs_param_Units_Texture = CompiledEffect_player_0.Parameters["fs_param_Units_Texture"];
            param_player_0_fs_param_Units_size = CompiledEffect_player_0.Parameters["fs_param_Units_size"];
            param_player_0_fs_param_Units_dxdy = CompiledEffect_player_0.Parameters["fs_param_Units_dxdy"];
            param_player_0_fs_param_only_selected = CompiledEffect_player_0.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnits_player=0.003921569");
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fs_param_Units_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_fs_param_Units_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_size"];
            param_player_0p003921569_fs_param_Units_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_player_0p003921569_fs_param_only_selected = CompiledEffect_player_0p003921569.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnits_player=0.007843138");
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fs_param_Units_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_fs_param_Units_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_size"];
            param_player_0p007843138_fs_param_Units_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_player_0p007843138_fs_param_only_selected = CompiledEffect_player_0p007843138.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnits_player=0.01176471");
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fs_param_Units_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_fs_param_Units_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_size"];
            param_player_0p01176471_fs_param_Units_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_player_0p01176471_fs_param_only_selected = CompiledEffect_player_0p01176471.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountUnits_player=0.01568628");
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fs_param_Units_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_fs_param_Units_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_size"];
            param_player_0p01568628_fs_param_Units_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_player_0p01568628_fs_param_only_selected = CompiledEffect_player_0p01568628.Parameters["fs_param_only_selected"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Units_Texture != null) param_player_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_fs_param_Units_size != null) param_player_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Units_dxdy != null) param_player_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_only_selected != null) param_player_0_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Units_Texture != null) param_player_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_fs_param_Units_size != null) param_player_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Units_dxdy != null) param_player_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_only_selected != null) param_player_0p003921569_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Units_Texture != null) param_player_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_fs_param_Units_size != null) param_player_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Units_dxdy != null) param_player_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_only_selected != null) param_player_0p007843138_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Units_Texture != null) param_player_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_fs_param_Units_size != null) param_player_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Units_dxdy != null) param_player_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_only_selected != null) param_player_0p01176471_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Units_Texture != null) param_player_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_fs_param_Units_size != null) param_player_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Units_dxdy != null) param_player_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_only_selected != null) param_player_0p01568628_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}






namespace Game
{
    public partial class CountAllUnits
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fs_param_Units_Texture;
        private static EffectParameter param_player_0_fs_param_Units_size;
        private static EffectParameter param_player_0_fs_param_Units_dxdy;
        private static EffectParameter param_player_0_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Units_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Units_size;
        private static EffectParameter param_player_0p003921569_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Units_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Units_size;
        private static EffectParameter param_player_0p007843138_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Units_size;
        private static EffectParameter param_player_0p01176471_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_only_selected;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Units_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Units_size;
        private static EffectParameter param_player_0p01568628_fs_param_Units_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_only_selected;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountAllUnits_player=0");
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_fs_param_Units_Texture = CompiledEffect_player_0.Parameters["fs_param_Units_Texture"];
            param_player_0_fs_param_Units_size = CompiledEffect_player_0.Parameters["fs_param_Units_size"];
            param_player_0_fs_param_Units_dxdy = CompiledEffect_player_0.Parameters["fs_param_Units_dxdy"];
            param_player_0_fs_param_only_selected = CompiledEffect_player_0.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountAllUnits_player=0.003921569");
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fs_param_Units_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_Texture"];
            param_player_0p003921569_fs_param_Units_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_size"];
            param_player_0p003921569_fs_param_Units_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Units_dxdy"];
            param_player_0p003921569_fs_param_only_selected = CompiledEffect_player_0p003921569.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountAllUnits_player=0.007843138");
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fs_param_Units_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_Texture"];
            param_player_0p007843138_fs_param_Units_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_size"];
            param_player_0p007843138_fs_param_Units_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Units_dxdy"];
            param_player_0p007843138_fs_param_only_selected = CompiledEffect_player_0p007843138.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountAllUnits_player=0.01176471");
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fs_param_Units_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_Texture"];
            param_player_0p01176471_fs_param_Units_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_size"];
            param_player_0p01176471_fs_param_Units_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Units_dxdy"];
            param_player_0p01176471_fs_param_only_selected = CompiledEffect_player_0p01176471.Parameters["fs_param_only_selected"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/CountAllUnits_player=0.01568628");
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fs_param_Units_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_Texture"];
            param_player_0p01568628_fs_param_Units_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_size"];
            param_player_0p01568628_fs_param_Units_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Units_dxdy"];
            param_player_0p01568628_fs_param_only_selected = CompiledEffect_player_0p01568628.Parameters["fs_param_only_selected"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units, player, only_selected);
        }
        public static void Using(Texture2D Data, Texture2D Units, float player, bool only_selected)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Units_Texture != null) param_player_0_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0_fs_param_Units_size != null) param_player_0_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_Units_dxdy != null) param_player_0_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0_fs_param_only_selected != null) param_player_0_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Units_Texture != null) param_player_0p003921569_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p003921569_fs_param_Units_size != null) param_player_0p003921569_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_Units_dxdy != null) param_player_0p003921569_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p003921569_fs_param_only_selected != null) param_player_0p003921569_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Units_Texture != null) param_player_0p007843138_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p007843138_fs_param_Units_size != null) param_player_0p007843138_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_Units_dxdy != null) param_player_0p007843138_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p007843138_fs_param_only_selected != null) param_player_0p007843138_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Units_Texture != null) param_player_0p01176471_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01176471_fs_param_Units_size != null) param_player_0p01176471_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_Units_dxdy != null) param_player_0p01176471_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01176471_fs_param_only_selected != null) param_player_0p01176471_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Units_Texture != null) param_player_0p01568628_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
                if (param_player_0p01568628_fs_param_Units_size != null) param_player_0p01568628_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_Units_dxdy != null) param_player_0p01568628_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
                if (param_player_0p01568628_fs_param_only_selected != null) param_player_0p01568628_fs_param_only_selected.SetValue(FragSharpMarshal.Marshal(only_selected));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class CountMovingAttackingDyingExploding
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/CountMovingAttackingDyingExploding");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Units);
        }
        public static void Using(Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Units);
        }
        public static void Using(Texture2D Data, Texture2D Units)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class CountReduce_3byte1byte
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_PreviousLevel_Texture;
        private static EffectParameter param_fs_param_PreviousLevel_size;
        private static EffectParameter param_fs_param_PreviousLevel_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/CountReduce_3byte1byte");
            param_fs_param_PreviousLevel_Texture = CompiledEffect.Parameters["fs_param_PreviousLevel_Texture"];
            param_fs_param_PreviousLevel_size = CompiledEffect.Parameters["fs_param_PreviousLevel_size"];
            param_fs_param_PreviousLevel_dxdy = CompiledEffect.Parameters["fs_param_PreviousLevel_dxdy"];
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(PreviousLevel);
        }
        public static void Using(Texture2D PreviousLevel)
        {
            if (param_fs_param_PreviousLevel_Texture != null) param_fs_param_PreviousLevel_Texture.SetValue(FragSharpMarshal.Marshal(PreviousLevel));
            if (param_fs_param_PreviousLevel_size != null) param_fs_param_PreviousLevel_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousLevel.Width, PreviousLevel.Height)));
            if (param_fs_param_PreviousLevel_dxdy != null) param_fs_param_PreviousLevel_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousLevel.Width, PreviousLevel.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}






namespace Game
{
    public partial class SetSelectedAction
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_fs_param_Data_size;
        private static EffectParameter param_player_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_fs_param_Unit_size;
        private static EffectParameter param_player_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_fs_param_action;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_action;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_action;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_action;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_action;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSelectedAction_player=0");
            param_player_0_fs_param_Data_Texture = CompiledEffect_player_0.Parameters["fs_param_Data_Texture"];
            param_player_0_fs_param_Data_size = CompiledEffect_player_0.Parameters["fs_param_Data_size"];
            param_player_0_fs_param_Data_dxdy = CompiledEffect_player_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_fs_param_Unit_Texture = CompiledEffect_player_0.Parameters["fs_param_Unit_Texture"];
            param_player_0_fs_param_Unit_size = CompiledEffect_player_0.Parameters["fs_param_Unit_size"];
            param_player_0_fs_param_Unit_dxdy = CompiledEffect_player_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0_fs_param_action = CompiledEffect_player_0.Parameters["fs_param_action"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSelectedAction_player=0.003921569");
            param_player_0p003921569_fs_param_Data_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_fs_param_Data_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_size"];
            param_player_0p003921569_fs_param_Data_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_fs_param_Unit_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_fs_param_Unit_size = CompiledEffect_player_0p003921569.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_fs_param_action = CompiledEffect_player_0p003921569.Parameters["fs_param_action"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSelectedAction_player=0.007843138");
            param_player_0p007843138_fs_param_Data_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_fs_param_Data_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_size"];
            param_player_0p007843138_fs_param_Data_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_fs_param_Unit_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_fs_param_Unit_size = CompiledEffect_player_0p007843138.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_fs_param_action = CompiledEffect_player_0p007843138.Parameters["fs_param_action"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSelectedAction_player=0.01176471");
            param_player_0p01176471_fs_param_Data_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_fs_param_Data_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_size"];
            param_player_0p01176471_fs_param_Data_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_fs_param_Unit_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_fs_param_Unit_size = CompiledEffect_player_0p01176471.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_fs_param_action = CompiledEffect_player_0p01176471.Parameters["fs_param_action"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/SetSelectedAction_player=0.01568628");
            param_player_0p01568628_fs_param_Data_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_fs_param_Data_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_size"];
            param_player_0p01568628_fs_param_Data_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_fs_param_Unit_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_fs_param_Unit_size = CompiledEffect_player_0p01568628.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_fs_param_action = CompiledEffect_player_0p01568628.Parameters["fs_param_action"];
        }
        public static void Apply(Texture2D Data, Texture2D Unit, float action, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, action, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Unit, float action, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, action, player);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Unit, float action, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, action, player);
        }
        public static void Using(Texture2D Data, Texture2D Unit, float action, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, action, player);
        }
        public static void Using(Texture2D Data, Texture2D Unit, float action, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_fs_param_Data_Texture != null) param_player_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_fs_param_Data_size != null) param_player_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Data_dxdy != null) param_player_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_fs_param_Unit_Texture != null) param_player_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_fs_param_Unit_size != null) param_player_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_fs_param_Unit_dxdy != null) param_player_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_fs_param_action != null) param_player_0_fs_param_action.SetValue(FragSharpMarshal.Marshal(action));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_fs_param_Data_Texture != null) param_player_0p003921569_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_fs_param_Data_size != null) param_player_0p003921569_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Data_dxdy != null) param_player_0p003921569_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_fs_param_Unit_Texture != null) param_player_0p003921569_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_fs_param_Unit_size != null) param_player_0p003921569_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fs_param_Unit_dxdy != null) param_player_0p003921569_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_fs_param_action != null) param_player_0p003921569_fs_param_action.SetValue(FragSharpMarshal.Marshal(action));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_fs_param_Data_Texture != null) param_player_0p007843138_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_fs_param_Data_size != null) param_player_0p007843138_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Data_dxdy != null) param_player_0p007843138_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_fs_param_Unit_Texture != null) param_player_0p007843138_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_fs_param_Unit_size != null) param_player_0p007843138_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fs_param_Unit_dxdy != null) param_player_0p007843138_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_fs_param_action != null) param_player_0p007843138_fs_param_action.SetValue(FragSharpMarshal.Marshal(action));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_fs_param_Data_Texture != null) param_player_0p01176471_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_fs_param_Data_size != null) param_player_0p01176471_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Data_dxdy != null) param_player_0p01176471_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_fs_param_Unit_Texture != null) param_player_0p01176471_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_fs_param_Unit_size != null) param_player_0p01176471_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fs_param_Unit_dxdy != null) param_player_0p01176471_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_fs_param_action != null) param_player_0p01176471_fs_param_action.SetValue(FragSharpMarshal.Marshal(action));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_fs_param_Data_Texture != null) param_player_0p01568628_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_fs_param_Data_size != null) param_player_0p01568628_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Data_dxdy != null) param_player_0p01568628_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_fs_param_Unit_Texture != null) param_player_0p01568628_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_fs_param_Unit_size != null) param_player_0p01568628_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fs_param_Unit_dxdy != null) param_player_0p01568628_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_fs_param_action != null) param_player_0p01568628_fs_param_action.SetValue(FragSharpMarshal.Marshal(action));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


























namespace Game
{
    public partial class ActionAttackSquare
    {
        private static Effect CompiledEffect_player_0_filter_0;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_Destination_BL;
        private static EffectParameter param_player_0_filter_0_fs_param_Selection_BL;
        private static EffectParameter param_player_0_filter_0_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0_filter_1;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_Destination_BL;
        private static EffectParameter param_player_0_filter_1_fs_param_Selection_BL;
        private static EffectParameter param_player_0_filter_1_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0_filter_2;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_Destination_BL;
        private static EffectParameter param_player_0_filter_2_fs_param_Selection_BL;
        private static EffectParameter param_player_0_filter_2_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0_filter_3;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_Destination_BL;
        private static EffectParameter param_player_0_filter_3_fs_param_Selection_BL;
        private static EffectParameter param_player_0_filter_3_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0_filter_4;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_Destination_BL;
        private static EffectParameter param_player_0_filter_4_fs_param_Selection_BL;
        private static EffectParameter param_player_0_filter_4_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p003921569_filter_0;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Destination_BL;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Selection_BL;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p003921569_filter_1;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Destination_BL;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Selection_BL;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p003921569_filter_2;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Destination_BL;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Selection_BL;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p003921569_filter_3;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Destination_BL;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Selection_BL;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p003921569_filter_4;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Destination_BL;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Selection_BL;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p007843138_filter_0;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Destination_BL;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Selection_BL;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p007843138_filter_1;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Destination_BL;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Selection_BL;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p007843138_filter_2;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Destination_BL;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Selection_BL;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p007843138_filter_3;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Destination_BL;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Selection_BL;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p007843138_filter_4;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Destination_BL;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Selection_BL;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01176471_filter_0;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01176471_filter_1;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01176471_filter_2;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01176471_filter_3;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01176471_filter_4;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01568628_filter_0;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01568628_filter_1;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01568628_filter_2;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01568628_filter_3;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_ConversionRatio;
        private static Effect CompiledEffect_player_0p01568628_filter_4;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Destination_BL;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Selection_BL;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_ConversionRatio;

        public static void Init()
        {
            CompiledEffect_player_0_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0_filter=0");
            param_player_0_filter_0_fs_param_Data_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_0_fs_param_Data_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_size"];
            param_player_0_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_0_fs_param_Unit_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_0_fs_param_TargetData_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_0_fs_param_Destination_BL = CompiledEffect_player_0_filter_0.Parameters["fs_param_Destination_BL"];
            param_player_0_filter_0_fs_param_Selection_BL = CompiledEffect_player_0_filter_0.Parameters["fs_param_Selection_BL"];
            param_player_0_filter_0_fs_param_ConversionRatio = CompiledEffect_player_0_filter_0.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0_filter=1");
            param_player_0_filter_1_fs_param_Data_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_1_fs_param_Data_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_size"];
            param_player_0_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_1_fs_param_Unit_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_1_fs_param_TargetData_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_1_fs_param_Destination_BL = CompiledEffect_player_0_filter_1.Parameters["fs_param_Destination_BL"];
            param_player_0_filter_1_fs_param_Selection_BL = CompiledEffect_player_0_filter_1.Parameters["fs_param_Selection_BL"];
            param_player_0_filter_1_fs_param_ConversionRatio = CompiledEffect_player_0_filter_1.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0_filter=2");
            param_player_0_filter_2_fs_param_Data_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_2_fs_param_Data_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_size"];
            param_player_0_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_2_fs_param_Unit_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_2_fs_param_TargetData_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_2_fs_param_Destination_BL = CompiledEffect_player_0_filter_2.Parameters["fs_param_Destination_BL"];
            param_player_0_filter_2_fs_param_Selection_BL = CompiledEffect_player_0_filter_2.Parameters["fs_param_Selection_BL"];
            param_player_0_filter_2_fs_param_ConversionRatio = CompiledEffect_player_0_filter_2.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0_filter=3");
            param_player_0_filter_3_fs_param_Data_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_3_fs_param_Data_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_size"];
            param_player_0_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_3_fs_param_Unit_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_3_fs_param_TargetData_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_3_fs_param_Destination_BL = CompiledEffect_player_0_filter_3.Parameters["fs_param_Destination_BL"];
            param_player_0_filter_3_fs_param_Selection_BL = CompiledEffect_player_0_filter_3.Parameters["fs_param_Selection_BL"];
            param_player_0_filter_3_fs_param_ConversionRatio = CompiledEffect_player_0_filter_3.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0_filter=4");
            param_player_0_filter_4_fs_param_Data_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_4_fs_param_Data_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_size"];
            param_player_0_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_4_fs_param_Unit_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_4_fs_param_TargetData_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_4_fs_param_Destination_BL = CompiledEffect_player_0_filter_4.Parameters["fs_param_Destination_BL"];
            param_player_0_filter_4_fs_param_Selection_BL = CompiledEffect_player_0_filter_4.Parameters["fs_param_Selection_BL"];
            param_player_0_filter_4_fs_param_ConversionRatio = CompiledEffect_player_0_filter_4.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p003921569_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.003921569_filter=0");
            param_player_0p003921569_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_0_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_0_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_0_fs_param_Destination_BL = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Destination_BL"];
            param_player_0p003921569_filter_0_fs_param_Selection_BL = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Selection_BL"];
            param_player_0p003921569_filter_0_fs_param_ConversionRatio = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p003921569_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.003921569_filter=1");
            param_player_0p003921569_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_1_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_1_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_1_fs_param_Destination_BL = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Destination_BL"];
            param_player_0p003921569_filter_1_fs_param_Selection_BL = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Selection_BL"];
            param_player_0p003921569_filter_1_fs_param_ConversionRatio = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p003921569_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.003921569_filter=2");
            param_player_0p003921569_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_2_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_2_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_2_fs_param_Destination_BL = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Destination_BL"];
            param_player_0p003921569_filter_2_fs_param_Selection_BL = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Selection_BL"];
            param_player_0p003921569_filter_2_fs_param_ConversionRatio = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p003921569_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.003921569_filter=3");
            param_player_0p003921569_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_3_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_3_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_3_fs_param_Destination_BL = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Destination_BL"];
            param_player_0p003921569_filter_3_fs_param_Selection_BL = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Selection_BL"];
            param_player_0p003921569_filter_3_fs_param_ConversionRatio = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p003921569_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.003921569_filter=4");
            param_player_0p003921569_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_4_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_4_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_4_fs_param_Destination_BL = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Destination_BL"];
            param_player_0p003921569_filter_4_fs_param_Selection_BL = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Selection_BL"];
            param_player_0p003921569_filter_4_fs_param_ConversionRatio = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p007843138_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.007843138_filter=0");
            param_player_0p007843138_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_0_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_0_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_0_fs_param_Destination_BL = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Destination_BL"];
            param_player_0p007843138_filter_0_fs_param_Selection_BL = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Selection_BL"];
            param_player_0p007843138_filter_0_fs_param_ConversionRatio = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p007843138_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.007843138_filter=1");
            param_player_0p007843138_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_1_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_1_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_1_fs_param_Destination_BL = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Destination_BL"];
            param_player_0p007843138_filter_1_fs_param_Selection_BL = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Selection_BL"];
            param_player_0p007843138_filter_1_fs_param_ConversionRatio = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p007843138_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.007843138_filter=2");
            param_player_0p007843138_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_2_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_2_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_2_fs_param_Destination_BL = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Destination_BL"];
            param_player_0p007843138_filter_2_fs_param_Selection_BL = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Selection_BL"];
            param_player_0p007843138_filter_2_fs_param_ConversionRatio = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p007843138_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.007843138_filter=3");
            param_player_0p007843138_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_3_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_3_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_3_fs_param_Destination_BL = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Destination_BL"];
            param_player_0p007843138_filter_3_fs_param_Selection_BL = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Selection_BL"];
            param_player_0p007843138_filter_3_fs_param_ConversionRatio = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p007843138_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.007843138_filter=4");
            param_player_0p007843138_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_4_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_4_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_4_fs_param_Destination_BL = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Destination_BL"];
            param_player_0p007843138_filter_4_fs_param_Selection_BL = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Selection_BL"];
            param_player_0p007843138_filter_4_fs_param_ConversionRatio = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01176471_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01176471_filter=0");
            param_player_0p01176471_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_0_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_0_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_0_fs_param_Destination_BL = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Destination_BL"];
            param_player_0p01176471_filter_0_fs_param_Selection_BL = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Selection_BL"];
            param_player_0p01176471_filter_0_fs_param_ConversionRatio = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01176471_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01176471_filter=1");
            param_player_0p01176471_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_1_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_1_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_1_fs_param_Destination_BL = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Destination_BL"];
            param_player_0p01176471_filter_1_fs_param_Selection_BL = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Selection_BL"];
            param_player_0p01176471_filter_1_fs_param_ConversionRatio = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01176471_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01176471_filter=2");
            param_player_0p01176471_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_2_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_2_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_2_fs_param_Destination_BL = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Destination_BL"];
            param_player_0p01176471_filter_2_fs_param_Selection_BL = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Selection_BL"];
            param_player_0p01176471_filter_2_fs_param_ConversionRatio = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01176471_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01176471_filter=3");
            param_player_0p01176471_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_3_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_3_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_3_fs_param_Destination_BL = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Destination_BL"];
            param_player_0p01176471_filter_3_fs_param_Selection_BL = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Selection_BL"];
            param_player_0p01176471_filter_3_fs_param_ConversionRatio = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01176471_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01176471_filter=4");
            param_player_0p01176471_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_4_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_4_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_4_fs_param_Destination_BL = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Destination_BL"];
            param_player_0p01176471_filter_4_fs_param_Selection_BL = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Selection_BL"];
            param_player_0p01176471_filter_4_fs_param_ConversionRatio = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01568628_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01568628_filter=0");
            param_player_0p01568628_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_0_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_0_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_0_fs_param_Destination_BL = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Destination_BL"];
            param_player_0p01568628_filter_0_fs_param_Selection_BL = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Selection_BL"];
            param_player_0p01568628_filter_0_fs_param_ConversionRatio = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01568628_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01568628_filter=1");
            param_player_0p01568628_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_1_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_1_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_1_fs_param_Destination_BL = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Destination_BL"];
            param_player_0p01568628_filter_1_fs_param_Selection_BL = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Selection_BL"];
            param_player_0p01568628_filter_1_fs_param_ConversionRatio = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01568628_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01568628_filter=2");
            param_player_0p01568628_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_2_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_2_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_2_fs_param_Destination_BL = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Destination_BL"];
            param_player_0p01568628_filter_2_fs_param_Selection_BL = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Selection_BL"];
            param_player_0p01568628_filter_2_fs_param_ConversionRatio = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01568628_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01568628_filter=3");
            param_player_0p01568628_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_3_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_3_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_3_fs_param_Destination_BL = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Destination_BL"];
            param_player_0p01568628_filter_3_fs_param_Selection_BL = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Selection_BL"];
            param_player_0p01568628_filter_3_fs_param_ConversionRatio = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_ConversionRatio"];
            CompiledEffect_player_0p01568628_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackSquare_player=0.01568628_filter=4");
            param_player_0p01568628_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_4_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_4_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_4_fs_param_Destination_BL = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Destination_BL"];
            param_player_0p01568628_filter_4_fs_param_Selection_BL = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Selection_BL"];
            param_player_0p01568628_filter_4_fs_param_ConversionRatio = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_ConversionRatio"];
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination_BL, vec2 Selection_BL, vec2 ConversionRatio, float player, float filter, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, TargetData, Destination_BL, Selection_BL, ConversionRatio, player, filter);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination_BL, vec2 Selection_BL, vec2 ConversionRatio, float player, float filter, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, TargetData, Destination_BL, Selection_BL, ConversionRatio, player, filter);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination_BL, vec2 Selection_BL, vec2 ConversionRatio, float player, float filter, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, TargetData, Destination_BL, Selection_BL, ConversionRatio, player, filter);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination_BL, vec2 Selection_BL, vec2 ConversionRatio, float player, float filter, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, TargetData, Destination_BL, Selection_BL, ConversionRatio, player, filter);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination_BL, vec2 Selection_BL, vec2 ConversionRatio, float player, float filter)
        {
            if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0_filter_0_fs_param_Data_Texture != null) param_player_0_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_0_fs_param_Data_size != null) param_player_0_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_0_fs_param_Data_dxdy != null) param_player_0_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_0_fs_param_Unit_Texture != null) param_player_0_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_0_fs_param_Unit_size != null) param_player_0_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_0_fs_param_Unit_dxdy != null) param_player_0_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_0_fs_param_TargetData_Texture != null) param_player_0_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_0_fs_param_TargetData_size != null) param_player_0_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_0_fs_param_TargetData_dxdy != null) param_player_0_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_0_fs_param_Destination_BL != null) param_player_0_filter_0_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0_filter_0_fs_param_Selection_BL != null) param_player_0_filter_0_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0_filter_0_fs_param_ConversionRatio != null) param_player_0_filter_0_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0_filter_1_fs_param_Data_Texture != null) param_player_0_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_1_fs_param_Data_size != null) param_player_0_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_1_fs_param_Data_dxdy != null) param_player_0_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_1_fs_param_Unit_Texture != null) param_player_0_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_1_fs_param_Unit_size != null) param_player_0_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_1_fs_param_Unit_dxdy != null) param_player_0_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_1_fs_param_TargetData_Texture != null) param_player_0_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_1_fs_param_TargetData_size != null) param_player_0_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_1_fs_param_TargetData_dxdy != null) param_player_0_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_1_fs_param_Destination_BL != null) param_player_0_filter_1_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0_filter_1_fs_param_Selection_BL != null) param_player_0_filter_1_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0_filter_1_fs_param_ConversionRatio != null) param_player_0_filter_1_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0_filter_2_fs_param_Data_Texture != null) param_player_0_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_2_fs_param_Data_size != null) param_player_0_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_2_fs_param_Data_dxdy != null) param_player_0_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_2_fs_param_Unit_Texture != null) param_player_0_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_2_fs_param_Unit_size != null) param_player_0_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_2_fs_param_Unit_dxdy != null) param_player_0_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_2_fs_param_TargetData_Texture != null) param_player_0_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_2_fs_param_TargetData_size != null) param_player_0_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_2_fs_param_TargetData_dxdy != null) param_player_0_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_2_fs_param_Destination_BL != null) param_player_0_filter_2_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0_filter_2_fs_param_Selection_BL != null) param_player_0_filter_2_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0_filter_2_fs_param_ConversionRatio != null) param_player_0_filter_2_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0_filter_3_fs_param_Data_Texture != null) param_player_0_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_3_fs_param_Data_size != null) param_player_0_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_3_fs_param_Data_dxdy != null) param_player_0_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_3_fs_param_Unit_Texture != null) param_player_0_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_3_fs_param_Unit_size != null) param_player_0_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_3_fs_param_Unit_dxdy != null) param_player_0_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_3_fs_param_TargetData_Texture != null) param_player_0_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_3_fs_param_TargetData_size != null) param_player_0_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_3_fs_param_TargetData_dxdy != null) param_player_0_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_3_fs_param_Destination_BL != null) param_player_0_filter_3_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0_filter_3_fs_param_Selection_BL != null) param_player_0_filter_3_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0_filter_3_fs_param_ConversionRatio != null) param_player_0_filter_3_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0_filter_4_fs_param_Data_Texture != null) param_player_0_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_4_fs_param_Data_size != null) param_player_0_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_4_fs_param_Data_dxdy != null) param_player_0_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_4_fs_param_Unit_Texture != null) param_player_0_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_4_fs_param_Unit_size != null) param_player_0_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_4_fs_param_Unit_dxdy != null) param_player_0_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_4_fs_param_TargetData_Texture != null) param_player_0_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_4_fs_param_TargetData_size != null) param_player_0_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_4_fs_param_TargetData_dxdy != null) param_player_0_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_4_fs_param_Destination_BL != null) param_player_0_filter_4_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0_filter_4_fs_param_Selection_BL != null) param_player_0_filter_4_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0_filter_4_fs_param_ConversionRatio != null) param_player_0_filter_4_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p003921569_filter_0_fs_param_Data_Texture != null) param_player_0p003921569_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_0_fs_param_Data_size != null) param_player_0p003921569_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Data_dxdy != null) param_player_0p003921569_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Unit_Texture != null) param_player_0p003921569_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_0_fs_param_Unit_size != null) param_player_0p003921569_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_0_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_0_fs_param_TargetData_size != null) param_player_0p003921569_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_0_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Destination_BL != null) param_player_0p003921569_filter_0_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p003921569_filter_0_fs_param_Selection_BL != null) param_player_0p003921569_filter_0_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p003921569_filter_0_fs_param_ConversionRatio != null) param_player_0p003921569_filter_0_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p003921569_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p003921569_filter_1_fs_param_Data_Texture != null) param_player_0p003921569_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_1_fs_param_Data_size != null) param_player_0p003921569_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Data_dxdy != null) param_player_0p003921569_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Unit_Texture != null) param_player_0p003921569_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_1_fs_param_Unit_size != null) param_player_0p003921569_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_1_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_1_fs_param_TargetData_size != null) param_player_0p003921569_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_1_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Destination_BL != null) param_player_0p003921569_filter_1_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p003921569_filter_1_fs_param_Selection_BL != null) param_player_0p003921569_filter_1_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p003921569_filter_1_fs_param_ConversionRatio != null) param_player_0p003921569_filter_1_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p003921569_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p003921569_filter_2_fs_param_Data_Texture != null) param_player_0p003921569_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_2_fs_param_Data_size != null) param_player_0p003921569_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Data_dxdy != null) param_player_0p003921569_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Unit_Texture != null) param_player_0p003921569_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_2_fs_param_Unit_size != null) param_player_0p003921569_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_2_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_2_fs_param_TargetData_size != null) param_player_0p003921569_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_2_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Destination_BL != null) param_player_0p003921569_filter_2_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p003921569_filter_2_fs_param_Selection_BL != null) param_player_0p003921569_filter_2_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p003921569_filter_2_fs_param_ConversionRatio != null) param_player_0p003921569_filter_2_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p003921569_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p003921569_filter_3_fs_param_Data_Texture != null) param_player_0p003921569_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_3_fs_param_Data_size != null) param_player_0p003921569_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Data_dxdy != null) param_player_0p003921569_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Unit_Texture != null) param_player_0p003921569_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_3_fs_param_Unit_size != null) param_player_0p003921569_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_3_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_3_fs_param_TargetData_size != null) param_player_0p003921569_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_3_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Destination_BL != null) param_player_0p003921569_filter_3_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p003921569_filter_3_fs_param_Selection_BL != null) param_player_0p003921569_filter_3_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p003921569_filter_3_fs_param_ConversionRatio != null) param_player_0p003921569_filter_3_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p003921569_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p003921569_filter_4_fs_param_Data_Texture != null) param_player_0p003921569_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_4_fs_param_Data_size != null) param_player_0p003921569_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Data_dxdy != null) param_player_0p003921569_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Unit_Texture != null) param_player_0p003921569_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_4_fs_param_Unit_size != null) param_player_0p003921569_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_4_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_4_fs_param_TargetData_size != null) param_player_0p003921569_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_4_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Destination_BL != null) param_player_0p003921569_filter_4_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p003921569_filter_4_fs_param_Selection_BL != null) param_player_0p003921569_filter_4_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p003921569_filter_4_fs_param_ConversionRatio != null) param_player_0p003921569_filter_4_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p003921569_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p007843138_filter_0_fs_param_Data_Texture != null) param_player_0p007843138_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_0_fs_param_Data_size != null) param_player_0p007843138_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Data_dxdy != null) param_player_0p007843138_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Unit_Texture != null) param_player_0p007843138_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_0_fs_param_Unit_size != null) param_player_0p007843138_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_0_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_0_fs_param_TargetData_size != null) param_player_0p007843138_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_0_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Destination_BL != null) param_player_0p007843138_filter_0_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p007843138_filter_0_fs_param_Selection_BL != null) param_player_0p007843138_filter_0_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p007843138_filter_0_fs_param_ConversionRatio != null) param_player_0p007843138_filter_0_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p007843138_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p007843138_filter_1_fs_param_Data_Texture != null) param_player_0p007843138_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_1_fs_param_Data_size != null) param_player_0p007843138_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Data_dxdy != null) param_player_0p007843138_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Unit_Texture != null) param_player_0p007843138_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_1_fs_param_Unit_size != null) param_player_0p007843138_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_1_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_1_fs_param_TargetData_size != null) param_player_0p007843138_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_1_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Destination_BL != null) param_player_0p007843138_filter_1_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p007843138_filter_1_fs_param_Selection_BL != null) param_player_0p007843138_filter_1_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p007843138_filter_1_fs_param_ConversionRatio != null) param_player_0p007843138_filter_1_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p007843138_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p007843138_filter_2_fs_param_Data_Texture != null) param_player_0p007843138_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_2_fs_param_Data_size != null) param_player_0p007843138_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Data_dxdy != null) param_player_0p007843138_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Unit_Texture != null) param_player_0p007843138_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_2_fs_param_Unit_size != null) param_player_0p007843138_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_2_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_2_fs_param_TargetData_size != null) param_player_0p007843138_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_2_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Destination_BL != null) param_player_0p007843138_filter_2_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p007843138_filter_2_fs_param_Selection_BL != null) param_player_0p007843138_filter_2_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p007843138_filter_2_fs_param_ConversionRatio != null) param_player_0p007843138_filter_2_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p007843138_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p007843138_filter_3_fs_param_Data_Texture != null) param_player_0p007843138_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_3_fs_param_Data_size != null) param_player_0p007843138_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Data_dxdy != null) param_player_0p007843138_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Unit_Texture != null) param_player_0p007843138_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_3_fs_param_Unit_size != null) param_player_0p007843138_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_3_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_3_fs_param_TargetData_size != null) param_player_0p007843138_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_3_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Destination_BL != null) param_player_0p007843138_filter_3_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p007843138_filter_3_fs_param_Selection_BL != null) param_player_0p007843138_filter_3_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p007843138_filter_3_fs_param_ConversionRatio != null) param_player_0p007843138_filter_3_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p007843138_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p007843138_filter_4_fs_param_Data_Texture != null) param_player_0p007843138_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_4_fs_param_Data_size != null) param_player_0p007843138_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Data_dxdy != null) param_player_0p007843138_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Unit_Texture != null) param_player_0p007843138_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_4_fs_param_Unit_size != null) param_player_0p007843138_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_4_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_4_fs_param_TargetData_size != null) param_player_0p007843138_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_4_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Destination_BL != null) param_player_0p007843138_filter_4_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p007843138_filter_4_fs_param_Selection_BL != null) param_player_0p007843138_filter_4_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p007843138_filter_4_fs_param_ConversionRatio != null) param_player_0p007843138_filter_4_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p007843138_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p01176471_filter_0_fs_param_Data_Texture != null) param_player_0p01176471_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_0_fs_param_Data_size != null) param_player_0p01176471_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Data_dxdy != null) param_player_0p01176471_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Unit_Texture != null) param_player_0p01176471_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_0_fs_param_Unit_size != null) param_player_0p01176471_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_0_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_0_fs_param_TargetData_size != null) param_player_0p01176471_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_0_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Destination_BL != null) param_player_0p01176471_filter_0_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01176471_filter_0_fs_param_Selection_BL != null) param_player_0p01176471_filter_0_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01176471_filter_0_fs_param_ConversionRatio != null) param_player_0p01176471_filter_0_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01176471_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p01176471_filter_1_fs_param_Data_Texture != null) param_player_0p01176471_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_1_fs_param_Data_size != null) param_player_0p01176471_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Data_dxdy != null) param_player_0p01176471_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Unit_Texture != null) param_player_0p01176471_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_1_fs_param_Unit_size != null) param_player_0p01176471_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_1_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_1_fs_param_TargetData_size != null) param_player_0p01176471_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_1_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Destination_BL != null) param_player_0p01176471_filter_1_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01176471_filter_1_fs_param_Selection_BL != null) param_player_0p01176471_filter_1_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01176471_filter_1_fs_param_ConversionRatio != null) param_player_0p01176471_filter_1_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01176471_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p01176471_filter_2_fs_param_Data_Texture != null) param_player_0p01176471_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_2_fs_param_Data_size != null) param_player_0p01176471_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Data_dxdy != null) param_player_0p01176471_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Unit_Texture != null) param_player_0p01176471_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_2_fs_param_Unit_size != null) param_player_0p01176471_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_2_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_2_fs_param_TargetData_size != null) param_player_0p01176471_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_2_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Destination_BL != null) param_player_0p01176471_filter_2_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01176471_filter_2_fs_param_Selection_BL != null) param_player_0p01176471_filter_2_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01176471_filter_2_fs_param_ConversionRatio != null) param_player_0p01176471_filter_2_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01176471_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p01176471_filter_3_fs_param_Data_Texture != null) param_player_0p01176471_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_3_fs_param_Data_size != null) param_player_0p01176471_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Data_dxdy != null) param_player_0p01176471_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Unit_Texture != null) param_player_0p01176471_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_3_fs_param_Unit_size != null) param_player_0p01176471_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_3_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_3_fs_param_TargetData_size != null) param_player_0p01176471_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_3_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Destination_BL != null) param_player_0p01176471_filter_3_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01176471_filter_3_fs_param_Selection_BL != null) param_player_0p01176471_filter_3_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01176471_filter_3_fs_param_ConversionRatio != null) param_player_0p01176471_filter_3_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01176471_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p01176471_filter_4_fs_param_Data_Texture != null) param_player_0p01176471_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_4_fs_param_Data_size != null) param_player_0p01176471_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Data_dxdy != null) param_player_0p01176471_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Unit_Texture != null) param_player_0p01176471_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_4_fs_param_Unit_size != null) param_player_0p01176471_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_4_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_4_fs_param_TargetData_size != null) param_player_0p01176471_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_4_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Destination_BL != null) param_player_0p01176471_filter_4_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01176471_filter_4_fs_param_Selection_BL != null) param_player_0p01176471_filter_4_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01176471_filter_4_fs_param_ConversionRatio != null) param_player_0p01176471_filter_4_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01176471_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p01568628_filter_0_fs_param_Data_Texture != null) param_player_0p01568628_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_0_fs_param_Data_size != null) param_player_0p01568628_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Data_dxdy != null) param_player_0p01568628_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Unit_Texture != null) param_player_0p01568628_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_0_fs_param_Unit_size != null) param_player_0p01568628_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_0_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_0_fs_param_TargetData_size != null) param_player_0p01568628_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_0_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Destination_BL != null) param_player_0p01568628_filter_0_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01568628_filter_0_fs_param_Selection_BL != null) param_player_0p01568628_filter_0_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01568628_filter_0_fs_param_ConversionRatio != null) param_player_0p01568628_filter_0_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01568628_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p01568628_filter_1_fs_param_Data_Texture != null) param_player_0p01568628_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_1_fs_param_Data_size != null) param_player_0p01568628_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Data_dxdy != null) param_player_0p01568628_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Unit_Texture != null) param_player_0p01568628_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_1_fs_param_Unit_size != null) param_player_0p01568628_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_1_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_1_fs_param_TargetData_size != null) param_player_0p01568628_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_1_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Destination_BL != null) param_player_0p01568628_filter_1_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01568628_filter_1_fs_param_Selection_BL != null) param_player_0p01568628_filter_1_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01568628_filter_1_fs_param_ConversionRatio != null) param_player_0p01568628_filter_1_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01568628_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p01568628_filter_2_fs_param_Data_Texture != null) param_player_0p01568628_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_2_fs_param_Data_size != null) param_player_0p01568628_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Data_dxdy != null) param_player_0p01568628_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Unit_Texture != null) param_player_0p01568628_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_2_fs_param_Unit_size != null) param_player_0p01568628_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_2_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_2_fs_param_TargetData_size != null) param_player_0p01568628_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_2_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Destination_BL != null) param_player_0p01568628_filter_2_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01568628_filter_2_fs_param_Selection_BL != null) param_player_0p01568628_filter_2_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01568628_filter_2_fs_param_ConversionRatio != null) param_player_0p01568628_filter_2_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01568628_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p01568628_filter_3_fs_param_Data_Texture != null) param_player_0p01568628_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_3_fs_param_Data_size != null) param_player_0p01568628_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Data_dxdy != null) param_player_0p01568628_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Unit_Texture != null) param_player_0p01568628_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_3_fs_param_Unit_size != null) param_player_0p01568628_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_3_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_3_fs_param_TargetData_size != null) param_player_0p01568628_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_3_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Destination_BL != null) param_player_0p01568628_filter_3_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01568628_filter_3_fs_param_Selection_BL != null) param_player_0p01568628_filter_3_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01568628_filter_3_fs_param_ConversionRatio != null) param_player_0p01568628_filter_3_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01568628_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p01568628_filter_4_fs_param_Data_Texture != null) param_player_0p01568628_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_4_fs_param_Data_size != null) param_player_0p01568628_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Data_dxdy != null) param_player_0p01568628_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Unit_Texture != null) param_player_0p01568628_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_4_fs_param_Unit_size != null) param_player_0p01568628_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_4_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_4_fs_param_TargetData_size != null) param_player_0p01568628_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_4_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Destination_BL != null) param_player_0p01568628_filter_4_fs_param_Destination_BL.SetValue(FragSharpMarshal.Marshal(Destination_BL));
                if (param_player_0p01568628_filter_4_fs_param_Selection_BL != null) param_player_0p01568628_filter_4_fs_param_Selection_BL.SetValue(FragSharpMarshal.Marshal(Selection_BL));
                if (param_player_0p01568628_filter_4_fs_param_ConversionRatio != null) param_player_0p01568628_filter_4_fs_param_ConversionRatio.SetValue(FragSharpMarshal.Marshal(ConversionRatio));
                CompiledEffect_player_0p01568628_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


























namespace Game
{
    public partial class ActionAttackPoint
    {
        private static Effect CompiledEffect_player_0_filter_0;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_1;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_2;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_3;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_4;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_0;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_1;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_2;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_3;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_4;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_0;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_1;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_2;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_3;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_4;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_0;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_1;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_2;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_3;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_4;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_0;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_1;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_2;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_3;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_4;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_TargetData_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_TargetData_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_TargetData_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Destination;

        public static void Init()
        {
            CompiledEffect_player_0_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0_filter=0");
            param_player_0_filter_0_fs_param_Data_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_0_fs_param_Data_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_size"];
            param_player_0_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_0_fs_param_Unit_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_0_fs_param_TargetData_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_0_fs_param_Destination = CompiledEffect_player_0_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0_filter=1");
            param_player_0_filter_1_fs_param_Data_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_1_fs_param_Data_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_size"];
            param_player_0_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_1_fs_param_Unit_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_1_fs_param_TargetData_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_1_fs_param_Destination = CompiledEffect_player_0_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0_filter=2");
            param_player_0_filter_2_fs_param_Data_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_2_fs_param_Data_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_size"];
            param_player_0_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_2_fs_param_Unit_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_2_fs_param_TargetData_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_2_fs_param_Destination = CompiledEffect_player_0_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0_filter=3");
            param_player_0_filter_3_fs_param_Data_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_3_fs_param_Data_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_size"];
            param_player_0_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_3_fs_param_Unit_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_3_fs_param_TargetData_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_3_fs_param_Destination = CompiledEffect_player_0_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0_filter=4");
            param_player_0_filter_4_fs_param_Data_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_4_fs_param_Data_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_size"];
            param_player_0_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_4_fs_param_Unit_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0_filter_4_fs_param_TargetData_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0_filter_4_fs_param_Destination = CompiledEffect_player_0_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.003921569_filter=0");
            param_player_0p003921569_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_0_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_0_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_0_fs_param_Destination = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.003921569_filter=1");
            param_player_0p003921569_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_1_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_1_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_1_fs_param_Destination = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.003921569_filter=2");
            param_player_0p003921569_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_2_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_2_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_2_fs_param_Destination = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.003921569_filter=3");
            param_player_0p003921569_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_3_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_3_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_3_fs_param_Destination = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.003921569_filter=4");
            param_player_0p003921569_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_4_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_4_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p003921569_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p003921569_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p003921569_filter_4_fs_param_Destination = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.007843138_filter=0");
            param_player_0p007843138_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_0_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_0_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_0_fs_param_Destination = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.007843138_filter=1");
            param_player_0p007843138_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_1_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_1_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_1_fs_param_Destination = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.007843138_filter=2");
            param_player_0p007843138_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_2_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_2_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_2_fs_param_Destination = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.007843138_filter=3");
            param_player_0p007843138_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_3_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_3_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_3_fs_param_Destination = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.007843138_filter=4");
            param_player_0p007843138_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_4_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_4_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p007843138_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p007843138_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p007843138_filter_4_fs_param_Destination = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01176471_filter=0");
            param_player_0p01176471_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_0_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_0_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_0_fs_param_Destination = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01176471_filter=1");
            param_player_0p01176471_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_1_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_1_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_1_fs_param_Destination = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01176471_filter=2");
            param_player_0p01176471_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_2_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_2_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_2_fs_param_Destination = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01176471_filter=3");
            param_player_0p01176471_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_3_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_3_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_3_fs_param_Destination = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01176471_filter=4");
            param_player_0p01176471_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_4_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_4_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01176471_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p01176471_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01176471_filter_4_fs_param_Destination = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01568628_filter=0");
            param_player_0p01568628_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_0_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_0_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_0_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_0_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_0_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_0_fs_param_Destination = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01568628_filter=1");
            param_player_0p01568628_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_1_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_1_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_1_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_1_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_1_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_1_fs_param_Destination = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01568628_filter=2");
            param_player_0p01568628_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_2_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_2_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_2_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_2_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_2_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_2_fs_param_Destination = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01568628_filter=3");
            param_player_0p01568628_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_3_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_3_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_3_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_3_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_3_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_3_fs_param_Destination = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttackPoint_player=0.01568628_filter=4");
            param_player_0p01568628_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_4_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_4_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_4_fs_param_TargetData_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_TargetData_Texture"];
            param_player_0p01568628_filter_4_fs_param_TargetData_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_TargetData_size"];
            param_player_0p01568628_filter_4_fs_param_TargetData_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_TargetData_dxdy"];
            param_player_0p01568628_filter_4_fs_param_Destination = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Destination"];
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination, float player, float filter, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, TargetData, Destination, player, filter);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination, float player, float filter, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, TargetData, Destination, player, filter);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination, float player, float filter, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, TargetData, Destination, player, filter);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination, float player, float filter, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, TargetData, Destination, player, filter);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D TargetData, vec2 Destination, float player, float filter)
        {
            if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0_filter_0_fs_param_Data_Texture != null) param_player_0_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_0_fs_param_Data_size != null) param_player_0_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_0_fs_param_Data_dxdy != null) param_player_0_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_0_fs_param_Unit_Texture != null) param_player_0_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_0_fs_param_Unit_size != null) param_player_0_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_0_fs_param_Unit_dxdy != null) param_player_0_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_0_fs_param_TargetData_Texture != null) param_player_0_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_0_fs_param_TargetData_size != null) param_player_0_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_0_fs_param_TargetData_dxdy != null) param_player_0_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_0_fs_param_Destination != null) param_player_0_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0_filter_1_fs_param_Data_Texture != null) param_player_0_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_1_fs_param_Data_size != null) param_player_0_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_1_fs_param_Data_dxdy != null) param_player_0_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_1_fs_param_Unit_Texture != null) param_player_0_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_1_fs_param_Unit_size != null) param_player_0_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_1_fs_param_Unit_dxdy != null) param_player_0_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_1_fs_param_TargetData_Texture != null) param_player_0_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_1_fs_param_TargetData_size != null) param_player_0_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_1_fs_param_TargetData_dxdy != null) param_player_0_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_1_fs_param_Destination != null) param_player_0_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0_filter_2_fs_param_Data_Texture != null) param_player_0_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_2_fs_param_Data_size != null) param_player_0_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_2_fs_param_Data_dxdy != null) param_player_0_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_2_fs_param_Unit_Texture != null) param_player_0_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_2_fs_param_Unit_size != null) param_player_0_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_2_fs_param_Unit_dxdy != null) param_player_0_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_2_fs_param_TargetData_Texture != null) param_player_0_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_2_fs_param_TargetData_size != null) param_player_0_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_2_fs_param_TargetData_dxdy != null) param_player_0_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_2_fs_param_Destination != null) param_player_0_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0_filter_3_fs_param_Data_Texture != null) param_player_0_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_3_fs_param_Data_size != null) param_player_0_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_3_fs_param_Data_dxdy != null) param_player_0_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_3_fs_param_Unit_Texture != null) param_player_0_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_3_fs_param_Unit_size != null) param_player_0_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_3_fs_param_Unit_dxdy != null) param_player_0_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_3_fs_param_TargetData_Texture != null) param_player_0_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_3_fs_param_TargetData_size != null) param_player_0_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_3_fs_param_TargetData_dxdy != null) param_player_0_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_3_fs_param_Destination != null) param_player_0_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0_filter_4_fs_param_Data_Texture != null) param_player_0_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_4_fs_param_Data_size != null) param_player_0_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_4_fs_param_Data_dxdy != null) param_player_0_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_4_fs_param_Unit_Texture != null) param_player_0_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_4_fs_param_Unit_size != null) param_player_0_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_4_fs_param_Unit_dxdy != null) param_player_0_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_4_fs_param_TargetData_Texture != null) param_player_0_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0_filter_4_fs_param_TargetData_size != null) param_player_0_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_4_fs_param_TargetData_dxdy != null) param_player_0_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0_filter_4_fs_param_Destination != null) param_player_0_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p003921569_filter_0_fs_param_Data_Texture != null) param_player_0p003921569_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_0_fs_param_Data_size != null) param_player_0p003921569_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Data_dxdy != null) param_player_0p003921569_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Unit_Texture != null) param_player_0p003921569_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_0_fs_param_Unit_size != null) param_player_0p003921569_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_0_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_0_fs_param_TargetData_size != null) param_player_0p003921569_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_0_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Destination != null) param_player_0p003921569_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p003921569_filter_1_fs_param_Data_Texture != null) param_player_0p003921569_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_1_fs_param_Data_size != null) param_player_0p003921569_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Data_dxdy != null) param_player_0p003921569_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Unit_Texture != null) param_player_0p003921569_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_1_fs_param_Unit_size != null) param_player_0p003921569_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_1_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_1_fs_param_TargetData_size != null) param_player_0p003921569_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_1_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Destination != null) param_player_0p003921569_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p003921569_filter_2_fs_param_Data_Texture != null) param_player_0p003921569_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_2_fs_param_Data_size != null) param_player_0p003921569_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Data_dxdy != null) param_player_0p003921569_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Unit_Texture != null) param_player_0p003921569_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_2_fs_param_Unit_size != null) param_player_0p003921569_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_2_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_2_fs_param_TargetData_size != null) param_player_0p003921569_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_2_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Destination != null) param_player_0p003921569_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p003921569_filter_3_fs_param_Data_Texture != null) param_player_0p003921569_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_3_fs_param_Data_size != null) param_player_0p003921569_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Data_dxdy != null) param_player_0p003921569_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Unit_Texture != null) param_player_0p003921569_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_3_fs_param_Unit_size != null) param_player_0p003921569_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_3_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_3_fs_param_TargetData_size != null) param_player_0p003921569_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_3_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Destination != null) param_player_0p003921569_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p003921569_filter_4_fs_param_Data_Texture != null) param_player_0p003921569_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_4_fs_param_Data_size != null) param_player_0p003921569_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Data_dxdy != null) param_player_0p003921569_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Unit_Texture != null) param_player_0p003921569_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_4_fs_param_Unit_size != null) param_player_0p003921569_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_4_fs_param_TargetData_Texture != null) param_player_0p003921569_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p003921569_filter_4_fs_param_TargetData_size != null) param_player_0p003921569_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_4_fs_param_TargetData_dxdy != null) param_player_0p003921569_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Destination != null) param_player_0p003921569_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p007843138_filter_0_fs_param_Data_Texture != null) param_player_0p007843138_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_0_fs_param_Data_size != null) param_player_0p007843138_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Data_dxdy != null) param_player_0p007843138_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Unit_Texture != null) param_player_0p007843138_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_0_fs_param_Unit_size != null) param_player_0p007843138_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_0_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_0_fs_param_TargetData_size != null) param_player_0p007843138_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_0_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Destination != null) param_player_0p007843138_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p007843138_filter_1_fs_param_Data_Texture != null) param_player_0p007843138_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_1_fs_param_Data_size != null) param_player_0p007843138_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Data_dxdy != null) param_player_0p007843138_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Unit_Texture != null) param_player_0p007843138_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_1_fs_param_Unit_size != null) param_player_0p007843138_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_1_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_1_fs_param_TargetData_size != null) param_player_0p007843138_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_1_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Destination != null) param_player_0p007843138_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p007843138_filter_2_fs_param_Data_Texture != null) param_player_0p007843138_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_2_fs_param_Data_size != null) param_player_0p007843138_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Data_dxdy != null) param_player_0p007843138_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Unit_Texture != null) param_player_0p007843138_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_2_fs_param_Unit_size != null) param_player_0p007843138_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_2_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_2_fs_param_TargetData_size != null) param_player_0p007843138_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_2_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Destination != null) param_player_0p007843138_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p007843138_filter_3_fs_param_Data_Texture != null) param_player_0p007843138_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_3_fs_param_Data_size != null) param_player_0p007843138_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Data_dxdy != null) param_player_0p007843138_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Unit_Texture != null) param_player_0p007843138_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_3_fs_param_Unit_size != null) param_player_0p007843138_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_3_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_3_fs_param_TargetData_size != null) param_player_0p007843138_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_3_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Destination != null) param_player_0p007843138_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p007843138_filter_4_fs_param_Data_Texture != null) param_player_0p007843138_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_4_fs_param_Data_size != null) param_player_0p007843138_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Data_dxdy != null) param_player_0p007843138_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Unit_Texture != null) param_player_0p007843138_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_4_fs_param_Unit_size != null) param_player_0p007843138_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_4_fs_param_TargetData_Texture != null) param_player_0p007843138_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p007843138_filter_4_fs_param_TargetData_size != null) param_player_0p007843138_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_4_fs_param_TargetData_dxdy != null) param_player_0p007843138_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Destination != null) param_player_0p007843138_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p01176471_filter_0_fs_param_Data_Texture != null) param_player_0p01176471_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_0_fs_param_Data_size != null) param_player_0p01176471_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Data_dxdy != null) param_player_0p01176471_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Unit_Texture != null) param_player_0p01176471_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_0_fs_param_Unit_size != null) param_player_0p01176471_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_0_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_0_fs_param_TargetData_size != null) param_player_0p01176471_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_0_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Destination != null) param_player_0p01176471_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p01176471_filter_1_fs_param_Data_Texture != null) param_player_0p01176471_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_1_fs_param_Data_size != null) param_player_0p01176471_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Data_dxdy != null) param_player_0p01176471_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Unit_Texture != null) param_player_0p01176471_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_1_fs_param_Unit_size != null) param_player_0p01176471_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_1_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_1_fs_param_TargetData_size != null) param_player_0p01176471_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_1_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Destination != null) param_player_0p01176471_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p01176471_filter_2_fs_param_Data_Texture != null) param_player_0p01176471_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_2_fs_param_Data_size != null) param_player_0p01176471_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Data_dxdy != null) param_player_0p01176471_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Unit_Texture != null) param_player_0p01176471_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_2_fs_param_Unit_size != null) param_player_0p01176471_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_2_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_2_fs_param_TargetData_size != null) param_player_0p01176471_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_2_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Destination != null) param_player_0p01176471_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p01176471_filter_3_fs_param_Data_Texture != null) param_player_0p01176471_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_3_fs_param_Data_size != null) param_player_0p01176471_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Data_dxdy != null) param_player_0p01176471_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Unit_Texture != null) param_player_0p01176471_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_3_fs_param_Unit_size != null) param_player_0p01176471_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_3_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_3_fs_param_TargetData_size != null) param_player_0p01176471_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_3_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Destination != null) param_player_0p01176471_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p01176471_filter_4_fs_param_Data_Texture != null) param_player_0p01176471_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_4_fs_param_Data_size != null) param_player_0p01176471_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Data_dxdy != null) param_player_0p01176471_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Unit_Texture != null) param_player_0p01176471_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_4_fs_param_Unit_size != null) param_player_0p01176471_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_4_fs_param_TargetData_Texture != null) param_player_0p01176471_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01176471_filter_4_fs_param_TargetData_size != null) param_player_0p01176471_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_4_fs_param_TargetData_dxdy != null) param_player_0p01176471_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Destination != null) param_player_0p01176471_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p01568628_filter_0_fs_param_Data_Texture != null) param_player_0p01568628_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_0_fs_param_Data_size != null) param_player_0p01568628_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Data_dxdy != null) param_player_0p01568628_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Unit_Texture != null) param_player_0p01568628_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_0_fs_param_Unit_size != null) param_player_0p01568628_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_0_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_0_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_0_fs_param_TargetData_size != null) param_player_0p01568628_filter_0_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_0_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_0_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Destination != null) param_player_0p01568628_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p01568628_filter_1_fs_param_Data_Texture != null) param_player_0p01568628_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_1_fs_param_Data_size != null) param_player_0p01568628_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Data_dxdy != null) param_player_0p01568628_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Unit_Texture != null) param_player_0p01568628_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_1_fs_param_Unit_size != null) param_player_0p01568628_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_1_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_1_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_1_fs_param_TargetData_size != null) param_player_0p01568628_filter_1_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_1_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_1_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Destination != null) param_player_0p01568628_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p01568628_filter_2_fs_param_Data_Texture != null) param_player_0p01568628_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_2_fs_param_Data_size != null) param_player_0p01568628_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Data_dxdy != null) param_player_0p01568628_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Unit_Texture != null) param_player_0p01568628_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_2_fs_param_Unit_size != null) param_player_0p01568628_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_2_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_2_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_2_fs_param_TargetData_size != null) param_player_0p01568628_filter_2_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_2_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_2_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Destination != null) param_player_0p01568628_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p01568628_filter_3_fs_param_Data_Texture != null) param_player_0p01568628_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_3_fs_param_Data_size != null) param_player_0p01568628_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Data_dxdy != null) param_player_0p01568628_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Unit_Texture != null) param_player_0p01568628_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_3_fs_param_Unit_size != null) param_player_0p01568628_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_3_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_3_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_3_fs_param_TargetData_size != null) param_player_0p01568628_filter_3_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_3_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_3_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Destination != null) param_player_0p01568628_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p01568628_filter_4_fs_param_Data_Texture != null) param_player_0p01568628_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_4_fs_param_Data_size != null) param_player_0p01568628_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Data_dxdy != null) param_player_0p01568628_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Unit_Texture != null) param_player_0p01568628_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_4_fs_param_Unit_size != null) param_player_0p01568628_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_4_fs_param_TargetData_Texture != null) param_player_0p01568628_filter_4_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
                if (param_player_0p01568628_filter_4_fs_param_TargetData_size != null) param_player_0p01568628_filter_4_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_4_fs_param_TargetData_dxdy != null) param_player_0p01568628_filter_4_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Destination != null) param_player_0p01568628_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


























namespace Game
{
    public partial class ActionAttack2
    {
        private static Effect CompiledEffect_player_0_filter_0;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_Extra_Texture;
        private static EffectParameter param_player_0_filter_0_fs_param_Extra_size;
        private static EffectParameter param_player_0_filter_0_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_1;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_Extra_Texture;
        private static EffectParameter param_player_0_filter_1_fs_param_Extra_size;
        private static EffectParameter param_player_0_filter_1_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_2;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_Extra_Texture;
        private static EffectParameter param_player_0_filter_2_fs_param_Extra_size;
        private static EffectParameter param_player_0_filter_2_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_3;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_Extra_Texture;
        private static EffectParameter param_player_0_filter_3_fs_param_Extra_size;
        private static EffectParameter param_player_0_filter_3_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0_filter_4;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_Extra_Texture;
        private static EffectParameter param_player_0_filter_4_fs_param_Extra_size;
        private static EffectParameter param_player_0_filter_4_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_0;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Extra_size;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p003921569_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_1;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Extra_size;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p003921569_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_2;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Extra_size;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p003921569_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_3;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Extra_size;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p003921569_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p003921569_filter_4;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Extra_size;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p003921569_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_0;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Extra_size;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p007843138_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_1;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Extra_size;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p007843138_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_2;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Extra_size;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p007843138_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_3;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Extra_size;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p007843138_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p007843138_filter_4;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Extra_size;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p007843138_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_0;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Extra_size;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01176471_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_1;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Extra_size;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01176471_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_2;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Extra_size;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01176471_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_3;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Extra_size;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01176471_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01176471_filter_4;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Extra_size;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01176471_filter_4_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_0;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Extra_size;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01568628_filter_0_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_1;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Extra_size;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01568628_filter_1_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_2;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Extra_size;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01568628_filter_2_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_3;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Extra_size;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01568628_filter_3_fs_param_Destination;
        private static Effect CompiledEffect_player_0p01568628_filter_4;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Data_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Unit_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Extra_Texture;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Extra_size;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Extra_dxdy;
        private static EffectParameter param_player_0p01568628_filter_4_fs_param_Destination;

        public static void Init()
        {
            CompiledEffect_player_0_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0_filter=0");
            param_player_0_filter_0_fs_param_Data_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_0_fs_param_Data_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_size"];
            param_player_0_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_0_fs_param_Unit_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_0_fs_param_Extra_Texture = CompiledEffect_player_0_filter_0.Parameters["fs_param_Extra_Texture"];
            param_player_0_filter_0_fs_param_Extra_size = CompiledEffect_player_0_filter_0.Parameters["fs_param_Extra_size"];
            param_player_0_filter_0_fs_param_Extra_dxdy = CompiledEffect_player_0_filter_0.Parameters["fs_param_Extra_dxdy"];
            param_player_0_filter_0_fs_param_Destination = CompiledEffect_player_0_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0_filter=1");
            param_player_0_filter_1_fs_param_Data_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_1_fs_param_Data_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_size"];
            param_player_0_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_1_fs_param_Unit_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_1_fs_param_Extra_Texture = CompiledEffect_player_0_filter_1.Parameters["fs_param_Extra_Texture"];
            param_player_0_filter_1_fs_param_Extra_size = CompiledEffect_player_0_filter_1.Parameters["fs_param_Extra_size"];
            param_player_0_filter_1_fs_param_Extra_dxdy = CompiledEffect_player_0_filter_1.Parameters["fs_param_Extra_dxdy"];
            param_player_0_filter_1_fs_param_Destination = CompiledEffect_player_0_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0_filter=2");
            param_player_0_filter_2_fs_param_Data_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_2_fs_param_Data_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_size"];
            param_player_0_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_2_fs_param_Unit_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_2_fs_param_Extra_Texture = CompiledEffect_player_0_filter_2.Parameters["fs_param_Extra_Texture"];
            param_player_0_filter_2_fs_param_Extra_size = CompiledEffect_player_0_filter_2.Parameters["fs_param_Extra_size"];
            param_player_0_filter_2_fs_param_Extra_dxdy = CompiledEffect_player_0_filter_2.Parameters["fs_param_Extra_dxdy"];
            param_player_0_filter_2_fs_param_Destination = CompiledEffect_player_0_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0_filter=3");
            param_player_0_filter_3_fs_param_Data_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_3_fs_param_Data_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_size"];
            param_player_0_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_3_fs_param_Unit_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_3_fs_param_Extra_Texture = CompiledEffect_player_0_filter_3.Parameters["fs_param_Extra_Texture"];
            param_player_0_filter_3_fs_param_Extra_size = CompiledEffect_player_0_filter_3.Parameters["fs_param_Extra_size"];
            param_player_0_filter_3_fs_param_Extra_dxdy = CompiledEffect_player_0_filter_3.Parameters["fs_param_Extra_dxdy"];
            param_player_0_filter_3_fs_param_Destination = CompiledEffect_player_0_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0_filter=4");
            param_player_0_filter_4_fs_param_Data_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0_filter_4_fs_param_Data_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_size"];
            param_player_0_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0_filter_4_fs_param_Unit_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0_filter_4_fs_param_Extra_Texture = CompiledEffect_player_0_filter_4.Parameters["fs_param_Extra_Texture"];
            param_player_0_filter_4_fs_param_Extra_size = CompiledEffect_player_0_filter_4.Parameters["fs_param_Extra_size"];
            param_player_0_filter_4_fs_param_Extra_dxdy = CompiledEffect_player_0_filter_4.Parameters["fs_param_Extra_dxdy"];
            param_player_0_filter_4_fs_param_Destination = CompiledEffect_player_0_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.003921569_filter=0");
            param_player_0p003921569_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_0_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_0_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_0_fs_param_Extra_Texture = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Extra_Texture"];
            param_player_0p003921569_filter_0_fs_param_Extra_size = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Extra_size"];
            param_player_0p003921569_filter_0_fs_param_Extra_dxdy = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Extra_dxdy"];
            param_player_0p003921569_filter_0_fs_param_Destination = CompiledEffect_player_0p003921569_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.003921569_filter=1");
            param_player_0p003921569_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_1_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_1_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_1_fs_param_Extra_Texture = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Extra_Texture"];
            param_player_0p003921569_filter_1_fs_param_Extra_size = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Extra_size"];
            param_player_0p003921569_filter_1_fs_param_Extra_dxdy = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Extra_dxdy"];
            param_player_0p003921569_filter_1_fs_param_Destination = CompiledEffect_player_0p003921569_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.003921569_filter=2");
            param_player_0p003921569_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_2_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_2_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_2_fs_param_Extra_Texture = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Extra_Texture"];
            param_player_0p003921569_filter_2_fs_param_Extra_size = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Extra_size"];
            param_player_0p003921569_filter_2_fs_param_Extra_dxdy = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Extra_dxdy"];
            param_player_0p003921569_filter_2_fs_param_Destination = CompiledEffect_player_0p003921569_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.003921569_filter=3");
            param_player_0p003921569_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_3_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_3_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_3_fs_param_Extra_Texture = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Extra_Texture"];
            param_player_0p003921569_filter_3_fs_param_Extra_size = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Extra_size"];
            param_player_0p003921569_filter_3_fs_param_Extra_dxdy = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Extra_dxdy"];
            param_player_0p003921569_filter_3_fs_param_Destination = CompiledEffect_player_0p003921569_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p003921569_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.003921569_filter=4");
            param_player_0p003921569_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p003921569_filter_4_fs_param_Data_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p003921569_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p003921569_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p003921569_filter_4_fs_param_Unit_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p003921569_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p003921569_filter_4_fs_param_Extra_Texture = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Extra_Texture"];
            param_player_0p003921569_filter_4_fs_param_Extra_size = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Extra_size"];
            param_player_0p003921569_filter_4_fs_param_Extra_dxdy = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Extra_dxdy"];
            param_player_0p003921569_filter_4_fs_param_Destination = CompiledEffect_player_0p003921569_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.007843138_filter=0");
            param_player_0p007843138_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_0_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_0_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_0_fs_param_Extra_Texture = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Extra_Texture"];
            param_player_0p007843138_filter_0_fs_param_Extra_size = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Extra_size"];
            param_player_0p007843138_filter_0_fs_param_Extra_dxdy = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Extra_dxdy"];
            param_player_0p007843138_filter_0_fs_param_Destination = CompiledEffect_player_0p007843138_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.007843138_filter=1");
            param_player_0p007843138_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_1_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_1_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_1_fs_param_Extra_Texture = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Extra_Texture"];
            param_player_0p007843138_filter_1_fs_param_Extra_size = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Extra_size"];
            param_player_0p007843138_filter_1_fs_param_Extra_dxdy = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Extra_dxdy"];
            param_player_0p007843138_filter_1_fs_param_Destination = CompiledEffect_player_0p007843138_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.007843138_filter=2");
            param_player_0p007843138_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_2_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_2_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_2_fs_param_Extra_Texture = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Extra_Texture"];
            param_player_0p007843138_filter_2_fs_param_Extra_size = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Extra_size"];
            param_player_0p007843138_filter_2_fs_param_Extra_dxdy = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Extra_dxdy"];
            param_player_0p007843138_filter_2_fs_param_Destination = CompiledEffect_player_0p007843138_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.007843138_filter=3");
            param_player_0p007843138_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_3_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_3_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_3_fs_param_Extra_Texture = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Extra_Texture"];
            param_player_0p007843138_filter_3_fs_param_Extra_size = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Extra_size"];
            param_player_0p007843138_filter_3_fs_param_Extra_dxdy = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Extra_dxdy"];
            param_player_0p007843138_filter_3_fs_param_Destination = CompiledEffect_player_0p007843138_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p007843138_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.007843138_filter=4");
            param_player_0p007843138_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p007843138_filter_4_fs_param_Data_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p007843138_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p007843138_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p007843138_filter_4_fs_param_Unit_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p007843138_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p007843138_filter_4_fs_param_Extra_Texture = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Extra_Texture"];
            param_player_0p007843138_filter_4_fs_param_Extra_size = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Extra_size"];
            param_player_0p007843138_filter_4_fs_param_Extra_dxdy = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Extra_dxdy"];
            param_player_0p007843138_filter_4_fs_param_Destination = CompiledEffect_player_0p007843138_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01176471_filter=0");
            param_player_0p01176471_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_0_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_0_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_0_fs_param_Extra_Texture = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Extra_Texture"];
            param_player_0p01176471_filter_0_fs_param_Extra_size = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Extra_size"];
            param_player_0p01176471_filter_0_fs_param_Extra_dxdy = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01176471_filter_0_fs_param_Destination = CompiledEffect_player_0p01176471_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01176471_filter=1");
            param_player_0p01176471_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_1_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_1_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_1_fs_param_Extra_Texture = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Extra_Texture"];
            param_player_0p01176471_filter_1_fs_param_Extra_size = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Extra_size"];
            param_player_0p01176471_filter_1_fs_param_Extra_dxdy = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01176471_filter_1_fs_param_Destination = CompiledEffect_player_0p01176471_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01176471_filter=2");
            param_player_0p01176471_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_2_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_2_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_2_fs_param_Extra_Texture = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Extra_Texture"];
            param_player_0p01176471_filter_2_fs_param_Extra_size = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Extra_size"];
            param_player_0p01176471_filter_2_fs_param_Extra_dxdy = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01176471_filter_2_fs_param_Destination = CompiledEffect_player_0p01176471_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01176471_filter=3");
            param_player_0p01176471_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_3_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_3_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_3_fs_param_Extra_Texture = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Extra_Texture"];
            param_player_0p01176471_filter_3_fs_param_Extra_size = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Extra_size"];
            param_player_0p01176471_filter_3_fs_param_Extra_dxdy = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01176471_filter_3_fs_param_Destination = CompiledEffect_player_0p01176471_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01176471_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01176471_filter=4");
            param_player_0p01176471_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p01176471_filter_4_fs_param_Data_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p01176471_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p01176471_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p01176471_filter_4_fs_param_Unit_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p01176471_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01176471_filter_4_fs_param_Extra_Texture = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Extra_Texture"];
            param_player_0p01176471_filter_4_fs_param_Extra_size = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Extra_size"];
            param_player_0p01176471_filter_4_fs_param_Extra_dxdy = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01176471_filter_4_fs_param_Destination = CompiledEffect_player_0p01176471_filter_4.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01568628_filter=0");
            param_player_0p01568628_filter_0_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_0_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_0_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_0_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_0_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_0_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_0_fs_param_Extra_Texture = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Extra_Texture"];
            param_player_0p01568628_filter_0_fs_param_Extra_size = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Extra_size"];
            param_player_0p01568628_filter_0_fs_param_Extra_dxdy = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01568628_filter_0_fs_param_Destination = CompiledEffect_player_0p01568628_filter_0.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_1 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01568628_filter=1");
            param_player_0p01568628_filter_1_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_1_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_1_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_1_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_1_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_1_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_1_fs_param_Extra_Texture = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Extra_Texture"];
            param_player_0p01568628_filter_1_fs_param_Extra_size = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Extra_size"];
            param_player_0p01568628_filter_1_fs_param_Extra_dxdy = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01568628_filter_1_fs_param_Destination = CompiledEffect_player_0p01568628_filter_1.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_2 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01568628_filter=2");
            param_player_0p01568628_filter_2_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_2_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_2_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_2_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_2_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_2_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_2_fs_param_Extra_Texture = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Extra_Texture"];
            param_player_0p01568628_filter_2_fs_param_Extra_size = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Extra_size"];
            param_player_0p01568628_filter_2_fs_param_Extra_dxdy = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01568628_filter_2_fs_param_Destination = CompiledEffect_player_0p01568628_filter_2.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_3 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01568628_filter=3");
            param_player_0p01568628_filter_3_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_3_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_3_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_3_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_3_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_3_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_3_fs_param_Extra_Texture = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Extra_Texture"];
            param_player_0p01568628_filter_3_fs_param_Extra_size = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Extra_size"];
            param_player_0p01568628_filter_3_fs_param_Extra_dxdy = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01568628_filter_3_fs_param_Destination = CompiledEffect_player_0p01568628_filter_3.Parameters["fs_param_Destination"];
            CompiledEffect_player_0p01568628_filter_4 = FragSharp.Content.Load<Effect>("FragSharpShaders/ActionAttack2_player=0.01568628_filter=4");
            param_player_0p01568628_filter_4_fs_param_Data_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_Texture"];
            param_player_0p01568628_filter_4_fs_param_Data_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_size"];
            param_player_0p01568628_filter_4_fs_param_Data_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Data_dxdy"];
            param_player_0p01568628_filter_4_fs_param_Unit_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_Texture"];
            param_player_0p01568628_filter_4_fs_param_Unit_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_size"];
            param_player_0p01568628_filter_4_fs_param_Unit_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Unit_dxdy"];
            param_player_0p01568628_filter_4_fs_param_Extra_Texture = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Extra_Texture"];
            param_player_0p01568628_filter_4_fs_param_Extra_size = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Extra_size"];
            param_player_0p01568628_filter_4_fs_param_Extra_dxdy = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Extra_dxdy"];
            param_player_0p01568628_filter_4_fs_param_Destination = CompiledEffect_player_0p01568628_filter_4.Parameters["fs_param_Destination"];
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D Extra, vec2 Destination, float player, float filter, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, Extra, Destination, player, filter);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Unit, Texture2D Extra, vec2 Destination, float player, float filter, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, Extra, Destination, player, filter);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D Extra, vec2 Destination, float player, float filter, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Unit, Extra, Destination, player, filter);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D Extra, vec2 Destination, float player, float filter, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Unit, Extra, Destination, player, filter);
        }
        public static void Using(Texture2D Data, Texture2D Unit, Texture2D Extra, vec2 Destination, float player, float filter)
        {
            if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0_filter_0_fs_param_Data_Texture != null) param_player_0_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_0_fs_param_Data_size != null) param_player_0_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_0_fs_param_Data_dxdy != null) param_player_0_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_0_fs_param_Unit_Texture != null) param_player_0_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_0_fs_param_Unit_size != null) param_player_0_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_0_fs_param_Unit_dxdy != null) param_player_0_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_0_fs_param_Extra_Texture != null) param_player_0_filter_0_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0_filter_0_fs_param_Extra_size != null) param_player_0_filter_0_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_0_fs_param_Extra_dxdy != null) param_player_0_filter_0_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_0_fs_param_Destination != null) param_player_0_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0_filter_1_fs_param_Data_Texture != null) param_player_0_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_1_fs_param_Data_size != null) param_player_0_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_1_fs_param_Data_dxdy != null) param_player_0_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_1_fs_param_Unit_Texture != null) param_player_0_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_1_fs_param_Unit_size != null) param_player_0_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_1_fs_param_Unit_dxdy != null) param_player_0_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_1_fs_param_Extra_Texture != null) param_player_0_filter_1_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0_filter_1_fs_param_Extra_size != null) param_player_0_filter_1_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_1_fs_param_Extra_dxdy != null) param_player_0_filter_1_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_1_fs_param_Destination != null) param_player_0_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0_filter_2_fs_param_Data_Texture != null) param_player_0_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_2_fs_param_Data_size != null) param_player_0_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_2_fs_param_Data_dxdy != null) param_player_0_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_2_fs_param_Unit_Texture != null) param_player_0_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_2_fs_param_Unit_size != null) param_player_0_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_2_fs_param_Unit_dxdy != null) param_player_0_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_2_fs_param_Extra_Texture != null) param_player_0_filter_2_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0_filter_2_fs_param_Extra_size != null) param_player_0_filter_2_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_2_fs_param_Extra_dxdy != null) param_player_0_filter_2_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_2_fs_param_Destination != null) param_player_0_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0_filter_3_fs_param_Data_Texture != null) param_player_0_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_3_fs_param_Data_size != null) param_player_0_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_3_fs_param_Data_dxdy != null) param_player_0_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_3_fs_param_Unit_Texture != null) param_player_0_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_3_fs_param_Unit_size != null) param_player_0_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_3_fs_param_Unit_dxdy != null) param_player_0_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_3_fs_param_Extra_Texture != null) param_player_0_filter_3_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0_filter_3_fs_param_Extra_size != null) param_player_0_filter_3_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_3_fs_param_Extra_dxdy != null) param_player_0_filter_3_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_3_fs_param_Destination != null) param_player_0_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0_filter_4_fs_param_Data_Texture != null) param_player_0_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0_filter_4_fs_param_Data_size != null) param_player_0_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0_filter_4_fs_param_Data_dxdy != null) param_player_0_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0_filter_4_fs_param_Unit_Texture != null) param_player_0_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0_filter_4_fs_param_Unit_size != null) param_player_0_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_4_fs_param_Unit_dxdy != null) param_player_0_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0_filter_4_fs_param_Extra_Texture != null) param_player_0_filter_4_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0_filter_4_fs_param_Extra_size != null) param_player_0_filter_4_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_4_fs_param_Extra_dxdy != null) param_player_0_filter_4_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0_filter_4_fs_param_Destination != null) param_player_0_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p003921569_filter_0_fs_param_Data_Texture != null) param_player_0p003921569_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_0_fs_param_Data_size != null) param_player_0p003921569_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Data_dxdy != null) param_player_0p003921569_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Unit_Texture != null) param_player_0p003921569_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_0_fs_param_Unit_size != null) param_player_0p003921569_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Extra_Texture != null) param_player_0p003921569_filter_0_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p003921569_filter_0_fs_param_Extra_size != null) param_player_0p003921569_filter_0_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Extra_dxdy != null) param_player_0p003921569_filter_0_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_0_fs_param_Destination != null) param_player_0p003921569_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p003921569_filter_1_fs_param_Data_Texture != null) param_player_0p003921569_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_1_fs_param_Data_size != null) param_player_0p003921569_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Data_dxdy != null) param_player_0p003921569_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Unit_Texture != null) param_player_0p003921569_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_1_fs_param_Unit_size != null) param_player_0p003921569_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Extra_Texture != null) param_player_0p003921569_filter_1_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p003921569_filter_1_fs_param_Extra_size != null) param_player_0p003921569_filter_1_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Extra_dxdy != null) param_player_0p003921569_filter_1_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_1_fs_param_Destination != null) param_player_0p003921569_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p003921569_filter_2_fs_param_Data_Texture != null) param_player_0p003921569_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_2_fs_param_Data_size != null) param_player_0p003921569_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Data_dxdy != null) param_player_0p003921569_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Unit_Texture != null) param_player_0p003921569_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_2_fs_param_Unit_size != null) param_player_0p003921569_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Extra_Texture != null) param_player_0p003921569_filter_2_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p003921569_filter_2_fs_param_Extra_size != null) param_player_0p003921569_filter_2_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Extra_dxdy != null) param_player_0p003921569_filter_2_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_2_fs_param_Destination != null) param_player_0p003921569_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p003921569_filter_3_fs_param_Data_Texture != null) param_player_0p003921569_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_3_fs_param_Data_size != null) param_player_0p003921569_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Data_dxdy != null) param_player_0p003921569_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Unit_Texture != null) param_player_0p003921569_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_3_fs_param_Unit_size != null) param_player_0p003921569_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Extra_Texture != null) param_player_0p003921569_filter_3_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p003921569_filter_3_fs_param_Extra_size != null) param_player_0p003921569_filter_3_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Extra_dxdy != null) param_player_0p003921569_filter_3_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_3_fs_param_Destination != null) param_player_0p003921569_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p003921569_filter_4_fs_param_Data_Texture != null) param_player_0p003921569_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p003921569_filter_4_fs_param_Data_size != null) param_player_0p003921569_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Data_dxdy != null) param_player_0p003921569_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Unit_Texture != null) param_player_0p003921569_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p003921569_filter_4_fs_param_Unit_size != null) param_player_0p003921569_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Unit_dxdy != null) param_player_0p003921569_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Extra_Texture != null) param_player_0p003921569_filter_4_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p003921569_filter_4_fs_param_Extra_size != null) param_player_0p003921569_filter_4_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Extra_dxdy != null) param_player_0p003921569_filter_4_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p003921569_filter_4_fs_param_Destination != null) param_player_0p003921569_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p003921569_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p007843138_filter_0_fs_param_Data_Texture != null) param_player_0p007843138_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_0_fs_param_Data_size != null) param_player_0p007843138_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Data_dxdy != null) param_player_0p007843138_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Unit_Texture != null) param_player_0p007843138_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_0_fs_param_Unit_size != null) param_player_0p007843138_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Extra_Texture != null) param_player_0p007843138_filter_0_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p007843138_filter_0_fs_param_Extra_size != null) param_player_0p007843138_filter_0_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Extra_dxdy != null) param_player_0p007843138_filter_0_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_0_fs_param_Destination != null) param_player_0p007843138_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p007843138_filter_1_fs_param_Data_Texture != null) param_player_0p007843138_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_1_fs_param_Data_size != null) param_player_0p007843138_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Data_dxdy != null) param_player_0p007843138_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Unit_Texture != null) param_player_0p007843138_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_1_fs_param_Unit_size != null) param_player_0p007843138_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Extra_Texture != null) param_player_0p007843138_filter_1_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p007843138_filter_1_fs_param_Extra_size != null) param_player_0p007843138_filter_1_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Extra_dxdy != null) param_player_0p007843138_filter_1_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_1_fs_param_Destination != null) param_player_0p007843138_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p007843138_filter_2_fs_param_Data_Texture != null) param_player_0p007843138_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_2_fs_param_Data_size != null) param_player_0p007843138_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Data_dxdy != null) param_player_0p007843138_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Unit_Texture != null) param_player_0p007843138_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_2_fs_param_Unit_size != null) param_player_0p007843138_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Extra_Texture != null) param_player_0p007843138_filter_2_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p007843138_filter_2_fs_param_Extra_size != null) param_player_0p007843138_filter_2_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Extra_dxdy != null) param_player_0p007843138_filter_2_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_2_fs_param_Destination != null) param_player_0p007843138_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p007843138_filter_3_fs_param_Data_Texture != null) param_player_0p007843138_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_3_fs_param_Data_size != null) param_player_0p007843138_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Data_dxdy != null) param_player_0p007843138_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Unit_Texture != null) param_player_0p007843138_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_3_fs_param_Unit_size != null) param_player_0p007843138_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Extra_Texture != null) param_player_0p007843138_filter_3_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p007843138_filter_3_fs_param_Extra_size != null) param_player_0p007843138_filter_3_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Extra_dxdy != null) param_player_0p007843138_filter_3_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_3_fs_param_Destination != null) param_player_0p007843138_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p007843138_filter_4_fs_param_Data_Texture != null) param_player_0p007843138_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p007843138_filter_4_fs_param_Data_size != null) param_player_0p007843138_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Data_dxdy != null) param_player_0p007843138_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Unit_Texture != null) param_player_0p007843138_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p007843138_filter_4_fs_param_Unit_size != null) param_player_0p007843138_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Unit_dxdy != null) param_player_0p007843138_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Extra_Texture != null) param_player_0p007843138_filter_4_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p007843138_filter_4_fs_param_Extra_size != null) param_player_0p007843138_filter_4_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Extra_dxdy != null) param_player_0p007843138_filter_4_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p007843138_filter_4_fs_param_Destination != null) param_player_0p007843138_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p007843138_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p01176471_filter_0_fs_param_Data_Texture != null) param_player_0p01176471_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_0_fs_param_Data_size != null) param_player_0p01176471_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Data_dxdy != null) param_player_0p01176471_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Unit_Texture != null) param_player_0p01176471_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_0_fs_param_Unit_size != null) param_player_0p01176471_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Extra_Texture != null) param_player_0p01176471_filter_0_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01176471_filter_0_fs_param_Extra_size != null) param_player_0p01176471_filter_0_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Extra_dxdy != null) param_player_0p01176471_filter_0_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_0_fs_param_Destination != null) param_player_0p01176471_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p01176471_filter_1_fs_param_Data_Texture != null) param_player_0p01176471_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_1_fs_param_Data_size != null) param_player_0p01176471_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Data_dxdy != null) param_player_0p01176471_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Unit_Texture != null) param_player_0p01176471_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_1_fs_param_Unit_size != null) param_player_0p01176471_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Extra_Texture != null) param_player_0p01176471_filter_1_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01176471_filter_1_fs_param_Extra_size != null) param_player_0p01176471_filter_1_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Extra_dxdy != null) param_player_0p01176471_filter_1_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_1_fs_param_Destination != null) param_player_0p01176471_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p01176471_filter_2_fs_param_Data_Texture != null) param_player_0p01176471_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_2_fs_param_Data_size != null) param_player_0p01176471_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Data_dxdy != null) param_player_0p01176471_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Unit_Texture != null) param_player_0p01176471_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_2_fs_param_Unit_size != null) param_player_0p01176471_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Extra_Texture != null) param_player_0p01176471_filter_2_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01176471_filter_2_fs_param_Extra_size != null) param_player_0p01176471_filter_2_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Extra_dxdy != null) param_player_0p01176471_filter_2_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_2_fs_param_Destination != null) param_player_0p01176471_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p01176471_filter_3_fs_param_Data_Texture != null) param_player_0p01176471_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_3_fs_param_Data_size != null) param_player_0p01176471_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Data_dxdy != null) param_player_0p01176471_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Unit_Texture != null) param_player_0p01176471_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_3_fs_param_Unit_size != null) param_player_0p01176471_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Extra_Texture != null) param_player_0p01176471_filter_3_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01176471_filter_3_fs_param_Extra_size != null) param_player_0p01176471_filter_3_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Extra_dxdy != null) param_player_0p01176471_filter_3_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_3_fs_param_Destination != null) param_player_0p01176471_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p01176471_filter_4_fs_param_Data_Texture != null) param_player_0p01176471_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01176471_filter_4_fs_param_Data_size != null) param_player_0p01176471_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Data_dxdy != null) param_player_0p01176471_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Unit_Texture != null) param_player_0p01176471_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01176471_filter_4_fs_param_Unit_size != null) param_player_0p01176471_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Unit_dxdy != null) param_player_0p01176471_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Extra_Texture != null) param_player_0p01176471_filter_4_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01176471_filter_4_fs_param_Extra_size != null) param_player_0p01176471_filter_4_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Extra_dxdy != null) param_player_0p01176471_filter_4_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01176471_filter_4_fs_param_Destination != null) param_player_0p01176471_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01176471_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 0)) < .0019)
            {
                if (param_player_0p01568628_filter_0_fs_param_Data_Texture != null) param_player_0p01568628_filter_0_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_0_fs_param_Data_size != null) param_player_0p01568628_filter_0_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Data_dxdy != null) param_player_0p01568628_filter_0_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Unit_Texture != null) param_player_0p01568628_filter_0_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_0_fs_param_Unit_size != null) param_player_0p01568628_filter_0_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_0_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Extra_Texture != null) param_player_0p01568628_filter_0_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01568628_filter_0_fs_param_Extra_size != null) param_player_0p01568628_filter_0_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Extra_dxdy != null) param_player_0p01568628_filter_0_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_0_fs_param_Destination != null) param_player_0p01568628_filter_0_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 1)) < .0019)
            {
                if (param_player_0p01568628_filter_1_fs_param_Data_Texture != null) param_player_0p01568628_filter_1_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_1_fs_param_Data_size != null) param_player_0p01568628_filter_1_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Data_dxdy != null) param_player_0p01568628_filter_1_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Unit_Texture != null) param_player_0p01568628_filter_1_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_1_fs_param_Unit_size != null) param_player_0p01568628_filter_1_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_1_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Extra_Texture != null) param_player_0p01568628_filter_1_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01568628_filter_1_fs_param_Extra_size != null) param_player_0p01568628_filter_1_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Extra_dxdy != null) param_player_0p01568628_filter_1_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_1_fs_param_Destination != null) param_player_0p01568628_filter_1_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_1.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 2)) < .0019)
            {
                if (param_player_0p01568628_filter_2_fs_param_Data_Texture != null) param_player_0p01568628_filter_2_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_2_fs_param_Data_size != null) param_player_0p01568628_filter_2_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Data_dxdy != null) param_player_0p01568628_filter_2_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Unit_Texture != null) param_player_0p01568628_filter_2_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_2_fs_param_Unit_size != null) param_player_0p01568628_filter_2_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_2_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Extra_Texture != null) param_player_0p01568628_filter_2_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01568628_filter_2_fs_param_Extra_size != null) param_player_0p01568628_filter_2_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Extra_dxdy != null) param_player_0p01568628_filter_2_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_2_fs_param_Destination != null) param_player_0p01568628_filter_2_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_2.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 3)) < .0019)
            {
                if (param_player_0p01568628_filter_3_fs_param_Data_Texture != null) param_player_0p01568628_filter_3_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_3_fs_param_Data_size != null) param_player_0p01568628_filter_3_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Data_dxdy != null) param_player_0p01568628_filter_3_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Unit_Texture != null) param_player_0p01568628_filter_3_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_3_fs_param_Unit_size != null) param_player_0p01568628_filter_3_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_3_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Extra_Texture != null) param_player_0p01568628_filter_3_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01568628_filter_3_fs_param_Extra_size != null) param_player_0p01568628_filter_3_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Extra_dxdy != null) param_player_0p01568628_filter_3_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_3_fs_param_Destination != null) param_player_0p01568628_filter_3_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_3.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && abs((float)(filter - 4)) < .0019)
            {
                if (param_player_0p01568628_filter_4_fs_param_Data_Texture != null) param_player_0p01568628_filter_4_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
                if (param_player_0p01568628_filter_4_fs_param_Data_size != null) param_player_0p01568628_filter_4_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Data_dxdy != null) param_player_0p01568628_filter_4_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Unit_Texture != null) param_player_0p01568628_filter_4_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
                if (param_player_0p01568628_filter_4_fs_param_Unit_size != null) param_player_0p01568628_filter_4_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Unit_dxdy != null) param_player_0p01568628_filter_4_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Extra_Texture != null) param_player_0p01568628_filter_4_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
                if (param_player_0p01568628_filter_4_fs_param_Extra_size != null) param_player_0p01568628_filter_4_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Extra_dxdy != null) param_player_0p01568628_filter_4_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
                if (param_player_0p01568628_filter_4_fs_param_Destination != null) param_player_0p01568628_filter_4_fs_param_Destination.SetValue(FragSharpMarshal.Marshal(Destination));
                CompiledEffect_player_0p01568628_filter_4.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


namespace Game
{
    public partial class Pathfinding_ToSpecial
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Path_Texture;
        private static EffectParameter param_fs_param_Path_size;
        private static EffectParameter param_fs_param_Path_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Pathfinding_ToSpecial");
            param_fs_param_Path_Texture = CompiledEffect.Parameters["fs_param_Path_Texture"];
            param_fs_param_Path_size = CompiledEffect.Parameters["fs_param_Path_size"];
            param_fs_param_Path_dxdy = CompiledEffect.Parameters["fs_param_Path_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
        }
        public static void Apply(Texture2D Path, Texture2D Data, Texture2D Unit, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Path, Data, Unit);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Path, Texture2D Data, Texture2D Unit, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Path, Data, Unit);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Unit, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Path, Data, Unit);
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Unit, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Path, Data, Unit);
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Unit)
        {
            if (param_fs_param_Path_Texture != null) param_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
            if (param_fs_param_Path_size != null) param_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
            if (param_fs_param_Path_dxdy != null) param_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Pathfinding_ToPlayers
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Path_Texture;
        private static EffectParameter param_fs_param_Path_size;
        private static EffectParameter param_fs_param_Path_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Pathfinding_ToPlayers");
            param_fs_param_Path_Texture = CompiledEffect.Parameters["fs_param_Path_Texture"];
            param_fs_param_Path_size = CompiledEffect.Parameters["fs_param_Path_size"];
            param_fs_param_Path_dxdy = CompiledEffect.Parameters["fs_param_Path_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Path, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Path, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Path, Data, Units);
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Path, Data, Units);
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Units)
        {
            if (param_fs_param_Path_Texture != null) param_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
            if (param_fs_param_Path_size != null) param_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
            if (param_fs_param_Path_dxdy != null) param_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Pathfinding_ToOtherTeams
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Path_Texture;
        private static EffectParameter param_fs_param_Path_size;
        private static EffectParameter param_fs_param_Path_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Units_Texture;
        private static EffectParameter param_fs_param_Units_size;
        private static EffectParameter param_fs_param_Units_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Pathfinding_ToOtherTeams");
            param_fs_param_Path_Texture = CompiledEffect.Parameters["fs_param_Path_Texture"];
            param_fs_param_Path_size = CompiledEffect.Parameters["fs_param_Path_size"];
            param_fs_param_Path_dxdy = CompiledEffect.Parameters["fs_param_Path_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Units_Texture = CompiledEffect.Parameters["fs_param_Units_Texture"];
            param_fs_param_Units_size = CompiledEffect.Parameters["fs_param_Units_size"];
            param_fs_param_Units_dxdy = CompiledEffect.Parameters["fs_param_Units_dxdy"];
        }
        public static void Apply(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Path, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Path, Data, Units);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Path, Data, Units);
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Units, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Path, Data, Units);
        }
        public static void Using(Texture2D Path, Texture2D Data, Texture2D Units)
        {
            if (param_fs_param_Path_Texture != null) param_fs_param_Path_Texture.SetValue(FragSharpMarshal.Marshal(Path));
            if (param_fs_param_Path_size != null) param_fs_param_Path_size.SetValue(FragSharpMarshal.Marshal(vec(Path.Width, Path.Height)));
            if (param_fs_param_Path_dxdy != null) param_fs_param_Path_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Path.Width, Path.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Units_Texture != null) param_fs_param_Units_Texture.SetValue(FragSharpMarshal.Marshal(Units));
            if (param_fs_param_Units_size != null) param_fs_param_Units_size.SetValue(FragSharpMarshal.Marshal(vec(Units.Width, Units.Height)));
            if (param_fs_param_Units_dxdy != null) param_fs_param_Units_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Units.Width, Units.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Movement_Phase1
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Current_Texture;
        private static EffectParameter param_fs_param_Current_size;
        private static EffectParameter param_fs_param_Current_dxdy;
        private static EffectParameter param_fs_param_Random_Texture;
        private static EffectParameter param_fs_param_Random_size;
        private static EffectParameter param_fs_param_Random_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Movement_Phase1");
            param_fs_param_Current_Texture = CompiledEffect.Parameters["fs_param_Current_Texture"];
            param_fs_param_Current_size = CompiledEffect.Parameters["fs_param_Current_size"];
            param_fs_param_Current_dxdy = CompiledEffect.Parameters["fs_param_Current_dxdy"];
            param_fs_param_Random_Texture = CompiledEffect.Parameters["fs_param_Random_Texture"];
            param_fs_param_Random_size = CompiledEffect.Parameters["fs_param_Random_size"];
            param_fs_param_Random_dxdy = CompiledEffect.Parameters["fs_param_Random_dxdy"];
        }
        public static void Apply(Texture2D Current, Texture2D Random, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Random);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Current, Texture2D Random, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Random);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Current, Texture2D Random, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Random);
        }
        public static void Using(Texture2D Current, Texture2D Random, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Random);
        }
        public static void Using(Texture2D Current, Texture2D Random)
        {
            if (param_fs_param_Current_Texture != null) param_fs_param_Current_Texture.SetValue(FragSharpMarshal.Marshal(Current));
            if (param_fs_param_Current_size != null) param_fs_param_Current_size.SetValue(FragSharpMarshal.Marshal(vec(Current.Width, Current.Height)));
            if (param_fs_param_Current_dxdy != null) param_fs_param_Current_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Current.Width, Current.Height)));
            if (param_fs_param_Random_Texture != null) param_fs_param_Random_Texture.SetValue(FragSharpMarshal.Marshal(Random));
            if (param_fs_param_Random_size != null) param_fs_param_Random_size.SetValue(FragSharpMarshal.Marshal(vec(Random.Width, Random.Height)));
            if (param_fs_param_Random_dxdy != null) param_fs_param_Random_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Random.Width, Random.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Movement_Phase2
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Current_Texture;
        private static EffectParameter param_fs_param_Current_size;
        private static EffectParameter param_fs_param_Current_dxdy;
        private static EffectParameter param_fs_param_Next_Texture;
        private static EffectParameter param_fs_param_Next_size;
        private static EffectParameter param_fs_param_Next_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Movement_Phase2");
            param_fs_param_Current_Texture = CompiledEffect.Parameters["fs_param_Current_Texture"];
            param_fs_param_Current_size = CompiledEffect.Parameters["fs_param_Current_size"];
            param_fs_param_Current_dxdy = CompiledEffect.Parameters["fs_param_Current_dxdy"];
            param_fs_param_Next_Texture = CompiledEffect.Parameters["fs_param_Next_Texture"];
            param_fs_param_Next_size = CompiledEffect.Parameters["fs_param_Next_size"];
            param_fs_param_Next_dxdy = CompiledEffect.Parameters["fs_param_Next_dxdy"];
        }
        public static void Apply(Texture2D Current, Texture2D Next, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Next);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Current, Texture2D Next, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Next);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Current, Texture2D Next, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Current, Next);
        }
        public static void Using(Texture2D Current, Texture2D Next, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Current, Next);
        }
        public static void Using(Texture2D Current, Texture2D Next)
        {
            if (param_fs_param_Current_Texture != null) param_fs_param_Current_Texture.SetValue(FragSharpMarshal.Marshal(Current));
            if (param_fs_param_Current_size != null) param_fs_param_Current_size.SetValue(FragSharpMarshal.Marshal(vec(Current.Width, Current.Height)));
            if (param_fs_param_Current_dxdy != null) param_fs_param_Current_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Current.Width, Current.Height)));
            if (param_fs_param_Next_Texture != null) param_fs_param_Next_Texture.SetValue(FragSharpMarshal.Marshal(Next));
            if (param_fs_param_Next_size != null) param_fs_param_Next_size.SetValue(FragSharpMarshal.Marshal(vec(Next.Width, Next.Height)));
            if (param_fs_param_Next_dxdy != null) param_fs_param_Next_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Next.Width, Next.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Movement_Convect
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_CurrentData_Texture;
        private static EffectParameter param_fs_param_CurrentData_size;
        private static EffectParameter param_fs_param_CurrentData_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Movement_Convect");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_CurrentData_Texture = CompiledEffect.Parameters["fs_param_CurrentData_Texture"];
            param_fs_param_CurrentData_size = CompiledEffect.Parameters["fs_param_CurrentData_size"];
            param_fs_param_CurrentData_dxdy = CompiledEffect.Parameters["fs_param_CurrentData_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D CurrentData, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, CurrentData);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D CurrentData, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, CurrentData);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D CurrentData, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, CurrentData);
        }
        public static void Using(Texture2D Data, Texture2D CurrentData, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, CurrentData);
        }
        public static void Using(Texture2D Data, Texture2D CurrentData)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_CurrentData_Texture != null) param_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
            if (param_fs_param_CurrentData_size != null) param_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
            if (param_fs_param_CurrentData_dxdy != null) param_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Movement_UpdateDirection_RemoveDead
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_TargetData_Texture;
        private static EffectParameter param_fs_param_TargetData_size;
        private static EffectParameter param_fs_param_TargetData_dxdy;
        private static EffectParameter param_fs_param_Unit_Texture;
        private static EffectParameter param_fs_param_Unit_size;
        private static EffectParameter param_fs_param_Unit_dxdy;
        private static EffectParameter param_fs_param_Extra_Texture;
        private static EffectParameter param_fs_param_Extra_size;
        private static EffectParameter param_fs_param_Extra_dxdy;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_PrevData_Texture;
        private static EffectParameter param_fs_param_PrevData_size;
        private static EffectParameter param_fs_param_PrevData_dxdy;
        private static EffectParameter param_fs_param_PathToOtherTeams_Texture;
        private static EffectParameter param_fs_param_PathToOtherTeams_size;
        private static EffectParameter param_fs_param_PathToOtherTeams_dxdy;
        private static EffectParameter param_fs_param_RandomField_Texture;
        private static EffectParameter param_fs_param_RandomField_size;
        private static EffectParameter param_fs_param_RandomField_dxdy;
        private static EffectParameter param_fs_param_Magic_Texture;
        private static EffectParameter param_fs_param_Magic_size;
        private static EffectParameter param_fs_param_Magic_dxdy;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;
        private static EffectParameter param_fs_param_AntiGeo_Texture;
        private static EffectParameter param_fs_param_AntiGeo_size;
        private static EffectParameter param_fs_param_AntiGeo_dxdy;
        private static EffectParameter param_fs_param_DirwardRight_Texture;
        private static EffectParameter param_fs_param_DirwardRight_size;
        private static EffectParameter param_fs_param_DirwardRight_dxdy;
        private static EffectParameter param_fs_param_DirwardLeft_Texture;
        private static EffectParameter param_fs_param_DirwardLeft_size;
        private static EffectParameter param_fs_param_DirwardLeft_dxdy;
        private static EffectParameter param_fs_param_DirwardUp_Texture;
        private static EffectParameter param_fs_param_DirwardUp_size;
        private static EffectParameter param_fs_param_DirwardUp_dxdy;
        private static EffectParameter param_fs_param_DirwardDown_Texture;
        private static EffectParameter param_fs_param_DirwardDown_size;
        private static EffectParameter param_fs_param_DirwardDown_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Movement_UpdateDirection_RemoveDead");
            param_fs_param_TargetData_Texture = CompiledEffect.Parameters["fs_param_TargetData_Texture"];
            param_fs_param_TargetData_size = CompiledEffect.Parameters["fs_param_TargetData_size"];
            param_fs_param_TargetData_dxdy = CompiledEffect.Parameters["fs_param_TargetData_dxdy"];
            param_fs_param_Unit_Texture = CompiledEffect.Parameters["fs_param_Unit_Texture"];
            param_fs_param_Unit_size = CompiledEffect.Parameters["fs_param_Unit_size"];
            param_fs_param_Unit_dxdy = CompiledEffect.Parameters["fs_param_Unit_dxdy"];
            param_fs_param_Extra_Texture = CompiledEffect.Parameters["fs_param_Extra_Texture"];
            param_fs_param_Extra_size = CompiledEffect.Parameters["fs_param_Extra_size"];
            param_fs_param_Extra_dxdy = CompiledEffect.Parameters["fs_param_Extra_dxdy"];
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_PrevData_Texture = CompiledEffect.Parameters["fs_param_PrevData_Texture"];
            param_fs_param_PrevData_size = CompiledEffect.Parameters["fs_param_PrevData_size"];
            param_fs_param_PrevData_dxdy = CompiledEffect.Parameters["fs_param_PrevData_dxdy"];
            param_fs_param_PathToOtherTeams_Texture = CompiledEffect.Parameters["fs_param_PathToOtherTeams_Texture"];
            param_fs_param_PathToOtherTeams_size = CompiledEffect.Parameters["fs_param_PathToOtherTeams_size"];
            param_fs_param_PathToOtherTeams_dxdy = CompiledEffect.Parameters["fs_param_PathToOtherTeams_dxdy"];
            param_fs_param_RandomField_Texture = CompiledEffect.Parameters["fs_param_RandomField_Texture"];
            param_fs_param_RandomField_size = CompiledEffect.Parameters["fs_param_RandomField_size"];
            param_fs_param_RandomField_dxdy = CompiledEffect.Parameters["fs_param_RandomField_dxdy"];
            param_fs_param_Magic_Texture = CompiledEffect.Parameters["fs_param_Magic_Texture"];
            param_fs_param_Magic_size = CompiledEffect.Parameters["fs_param_Magic_size"];
            param_fs_param_Magic_dxdy = CompiledEffect.Parameters["fs_param_Magic_dxdy"];
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
            param_fs_param_AntiGeo_Texture = CompiledEffect.Parameters["fs_param_AntiGeo_Texture"];
            param_fs_param_AntiGeo_size = CompiledEffect.Parameters["fs_param_AntiGeo_size"];
            param_fs_param_AntiGeo_dxdy = CompiledEffect.Parameters["fs_param_AntiGeo_dxdy"];
            param_fs_param_DirwardRight_Texture = CompiledEffect.Parameters["fs_param_DirwardRight_Texture"];
            param_fs_param_DirwardRight_size = CompiledEffect.Parameters["fs_param_DirwardRight_size"];
            param_fs_param_DirwardRight_dxdy = CompiledEffect.Parameters["fs_param_DirwardRight_dxdy"];
            param_fs_param_DirwardLeft_Texture = CompiledEffect.Parameters["fs_param_DirwardLeft_Texture"];
            param_fs_param_DirwardLeft_size = CompiledEffect.Parameters["fs_param_DirwardLeft_size"];
            param_fs_param_DirwardLeft_dxdy = CompiledEffect.Parameters["fs_param_DirwardLeft_dxdy"];
            param_fs_param_DirwardUp_Texture = CompiledEffect.Parameters["fs_param_DirwardUp_Texture"];
            param_fs_param_DirwardUp_size = CompiledEffect.Parameters["fs_param_DirwardUp_size"];
            param_fs_param_DirwardUp_dxdy = CompiledEffect.Parameters["fs_param_DirwardUp_dxdy"];
            param_fs_param_DirwardDown_Texture = CompiledEffect.Parameters["fs_param_DirwardDown_Texture"];
            param_fs_param_DirwardDown_size = CompiledEffect.Parameters["fs_param_DirwardDown_size"];
            param_fs_param_DirwardDown_dxdy = CompiledEffect.Parameters["fs_param_DirwardDown_dxdy"];
        }
        public static void Apply(Texture2D TargetData, Texture2D Unit, Texture2D Extra, Texture2D Data, Texture2D PrevData, Texture2D PathToOtherTeams, Texture2D RandomField, Texture2D Magic, Texture2D Geo, Texture2D AntiGeo, Texture2D DirwardRight, Texture2D DirwardLeft, Texture2D DirwardUp, Texture2D DirwardDown, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(TargetData, Unit, Extra, Data, PrevData, PathToOtherTeams, RandomField, Magic, Geo, AntiGeo, DirwardRight, DirwardLeft, DirwardUp, DirwardDown);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D TargetData, Texture2D Unit, Texture2D Extra, Texture2D Data, Texture2D PrevData, Texture2D PathToOtherTeams, Texture2D RandomField, Texture2D Magic, Texture2D Geo, Texture2D AntiGeo, Texture2D DirwardRight, Texture2D DirwardLeft, Texture2D DirwardUp, Texture2D DirwardDown, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(TargetData, Unit, Extra, Data, PrevData, PathToOtherTeams, RandomField, Magic, Geo, AntiGeo, DirwardRight, DirwardLeft, DirwardUp, DirwardDown);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D TargetData, Texture2D Unit, Texture2D Extra, Texture2D Data, Texture2D PrevData, Texture2D PathToOtherTeams, Texture2D RandomField, Texture2D Magic, Texture2D Geo, Texture2D AntiGeo, Texture2D DirwardRight, Texture2D DirwardLeft, Texture2D DirwardUp, Texture2D DirwardDown, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(TargetData, Unit, Extra, Data, PrevData, PathToOtherTeams, RandomField, Magic, Geo, AntiGeo, DirwardRight, DirwardLeft, DirwardUp, DirwardDown);
        }
        public static void Using(Texture2D TargetData, Texture2D Unit, Texture2D Extra, Texture2D Data, Texture2D PrevData, Texture2D PathToOtherTeams, Texture2D RandomField, Texture2D Magic, Texture2D Geo, Texture2D AntiGeo, Texture2D DirwardRight, Texture2D DirwardLeft, Texture2D DirwardUp, Texture2D DirwardDown, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(TargetData, Unit, Extra, Data, PrevData, PathToOtherTeams, RandomField, Magic, Geo, AntiGeo, DirwardRight, DirwardLeft, DirwardUp, DirwardDown);
        }
        public static void Using(Texture2D TargetData, Texture2D Unit, Texture2D Extra, Texture2D Data, Texture2D PrevData, Texture2D PathToOtherTeams, Texture2D RandomField, Texture2D Magic, Texture2D Geo, Texture2D AntiGeo, Texture2D DirwardRight, Texture2D DirwardLeft, Texture2D DirwardUp, Texture2D DirwardDown)
        {
            if (param_fs_param_TargetData_Texture != null) param_fs_param_TargetData_Texture.SetValue(FragSharpMarshal.Marshal(TargetData));
            if (param_fs_param_TargetData_size != null) param_fs_param_TargetData_size.SetValue(FragSharpMarshal.Marshal(vec(TargetData.Width, TargetData.Height)));
            if (param_fs_param_TargetData_dxdy != null) param_fs_param_TargetData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(TargetData.Width, TargetData.Height)));
            if (param_fs_param_Unit_Texture != null) param_fs_param_Unit_Texture.SetValue(FragSharpMarshal.Marshal(Unit));
            if (param_fs_param_Unit_size != null) param_fs_param_Unit_size.SetValue(FragSharpMarshal.Marshal(vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Unit_dxdy != null) param_fs_param_Unit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Unit.Width, Unit.Height)));
            if (param_fs_param_Extra_Texture != null) param_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
            if (param_fs_param_Extra_size != null) param_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
            if (param_fs_param_Extra_dxdy != null) param_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_PrevData_Texture != null) param_fs_param_PrevData_Texture.SetValue(FragSharpMarshal.Marshal(PrevData));
            if (param_fs_param_PrevData_size != null) param_fs_param_PrevData_size.SetValue(FragSharpMarshal.Marshal(vec(PrevData.Width, PrevData.Height)));
            if (param_fs_param_PrevData_dxdy != null) param_fs_param_PrevData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PrevData.Width, PrevData.Height)));
            if (param_fs_param_PathToOtherTeams_Texture != null) param_fs_param_PathToOtherTeams_Texture.SetValue(FragSharpMarshal.Marshal(PathToOtherTeams));
            if (param_fs_param_PathToOtherTeams_size != null) param_fs_param_PathToOtherTeams_size.SetValue(FragSharpMarshal.Marshal(vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
            if (param_fs_param_PathToOtherTeams_dxdy != null) param_fs_param_PathToOtherTeams_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PathToOtherTeams.Width, PathToOtherTeams.Height)));
            if (param_fs_param_RandomField_Texture != null) param_fs_param_RandomField_Texture.SetValue(FragSharpMarshal.Marshal(RandomField));
            if (param_fs_param_RandomField_size != null) param_fs_param_RandomField_size.SetValue(FragSharpMarshal.Marshal(vec(RandomField.Width, RandomField.Height)));
            if (param_fs_param_RandomField_dxdy != null) param_fs_param_RandomField_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(RandomField.Width, RandomField.Height)));
            if (param_fs_param_Magic_Texture != null) param_fs_param_Magic_Texture.SetValue(FragSharpMarshal.Marshal(Magic));
            if (param_fs_param_Magic_size != null) param_fs_param_Magic_size.SetValue(FragSharpMarshal.Marshal(vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Magic_dxdy != null) param_fs_param_Magic_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Magic.Width, Magic.Height)));
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            if (param_fs_param_AntiGeo_Texture != null) param_fs_param_AntiGeo_Texture.SetValue(FragSharpMarshal.Marshal(AntiGeo));
            if (param_fs_param_AntiGeo_size != null) param_fs_param_AntiGeo_size.SetValue(FragSharpMarshal.Marshal(vec(AntiGeo.Width, AntiGeo.Height)));
            if (param_fs_param_AntiGeo_dxdy != null) param_fs_param_AntiGeo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiGeo.Width, AntiGeo.Height)));
            if (param_fs_param_DirwardRight_Texture != null) param_fs_param_DirwardRight_Texture.SetValue(FragSharpMarshal.Marshal(DirwardRight));
            if (param_fs_param_DirwardRight_size != null) param_fs_param_DirwardRight_size.SetValue(FragSharpMarshal.Marshal(vec(DirwardRight.Width, DirwardRight.Height)));
            if (param_fs_param_DirwardRight_dxdy != null) param_fs_param_DirwardRight_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(DirwardRight.Width, DirwardRight.Height)));
            if (param_fs_param_DirwardLeft_Texture != null) param_fs_param_DirwardLeft_Texture.SetValue(FragSharpMarshal.Marshal(DirwardLeft));
            if (param_fs_param_DirwardLeft_size != null) param_fs_param_DirwardLeft_size.SetValue(FragSharpMarshal.Marshal(vec(DirwardLeft.Width, DirwardLeft.Height)));
            if (param_fs_param_DirwardLeft_dxdy != null) param_fs_param_DirwardLeft_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(DirwardLeft.Width, DirwardLeft.Height)));
            if (param_fs_param_DirwardUp_Texture != null) param_fs_param_DirwardUp_Texture.SetValue(FragSharpMarshal.Marshal(DirwardUp));
            if (param_fs_param_DirwardUp_size != null) param_fs_param_DirwardUp_size.SetValue(FragSharpMarshal.Marshal(vec(DirwardUp.Width, DirwardUp.Height)));
            if (param_fs_param_DirwardUp_dxdy != null) param_fs_param_DirwardUp_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(DirwardUp.Width, DirwardUp.Height)));
            if (param_fs_param_DirwardDown_Texture != null) param_fs_param_DirwardDown_Texture.SetValue(FragSharpMarshal.Marshal(DirwardDown));
            if (param_fs_param_DirwardDown_size != null) param_fs_param_DirwardDown_size.SetValue(FragSharpMarshal.Marshal(vec(DirwardDown.Width, DirwardDown.Height)));
            if (param_fs_param_DirwardDown_dxdy != null) param_fs_param_DirwardDown_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(DirwardDown.Width, DirwardDown.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Movement_SetPolarity_Phase1
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;
        private static EffectParameter param_fs_param_Extra_Texture;
        private static EffectParameter param_fs_param_Extra_size;
        private static EffectParameter param_fs_param_Extra_dxdy;
        private static EffectParameter param_fs_param_Geo_Texture;
        private static EffectParameter param_fs_param_Geo_size;
        private static EffectParameter param_fs_param_Geo_dxdy;
        private static EffectParameter param_fs_param_AntiGeo_Texture;
        private static EffectParameter param_fs_param_AntiGeo_size;
        private static EffectParameter param_fs_param_AntiGeo_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Movement_SetPolarity_Phase1");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
            param_fs_param_Extra_Texture = CompiledEffect.Parameters["fs_param_Extra_Texture"];
            param_fs_param_Extra_size = CompiledEffect.Parameters["fs_param_Extra_size"];
            param_fs_param_Extra_dxdy = CompiledEffect.Parameters["fs_param_Extra_dxdy"];
            param_fs_param_Geo_Texture = CompiledEffect.Parameters["fs_param_Geo_Texture"];
            param_fs_param_Geo_size = CompiledEffect.Parameters["fs_param_Geo_size"];
            param_fs_param_Geo_dxdy = CompiledEffect.Parameters["fs_param_Geo_dxdy"];
            param_fs_param_AntiGeo_Texture = CompiledEffect.Parameters["fs_param_AntiGeo_Texture"];
            param_fs_param_AntiGeo_size = CompiledEffect.Parameters["fs_param_AntiGeo_size"];
            param_fs_param_AntiGeo_dxdy = CompiledEffect.Parameters["fs_param_AntiGeo_dxdy"];
        }
        public static void Apply(Texture2D Data, Texture2D Extra, Texture2D Geo, Texture2D AntiGeo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Extra, Geo, AntiGeo);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, Texture2D Extra, Texture2D Geo, Texture2D AntiGeo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Extra, Geo, AntiGeo);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, Texture2D Extra, Texture2D Geo, Texture2D AntiGeo, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data, Extra, Geo, AntiGeo);
        }
        public static void Using(Texture2D Data, Texture2D Extra, Texture2D Geo, Texture2D AntiGeo, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data, Extra, Geo, AntiGeo);
        }
        public static void Using(Texture2D Data, Texture2D Extra, Texture2D Geo, Texture2D AntiGeo)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            if (param_fs_param_Extra_Texture != null) param_fs_param_Extra_Texture.SetValue(FragSharpMarshal.Marshal(Extra));
            if (param_fs_param_Extra_size != null) param_fs_param_Extra_size.SetValue(FragSharpMarshal.Marshal(vec(Extra.Width, Extra.Height)));
            if (param_fs_param_Extra_dxdy != null) param_fs_param_Extra_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Extra.Width, Extra.Height)));
            if (param_fs_param_Geo_Texture != null) param_fs_param_Geo_Texture.SetValue(FragSharpMarshal.Marshal(Geo));
            if (param_fs_param_Geo_size != null) param_fs_param_Geo_size.SetValue(FragSharpMarshal.Marshal(vec(Geo.Width, Geo.Height)));
            if (param_fs_param_Geo_dxdy != null) param_fs_param_Geo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Geo.Width, Geo.Height)));
            if (param_fs_param_AntiGeo_Texture != null) param_fs_param_AntiGeo_Texture.SetValue(FragSharpMarshal.Marshal(AntiGeo));
            if (param_fs_param_AntiGeo_size != null) param_fs_param_AntiGeo_size.SetValue(FragSharpMarshal.Marshal(vec(AntiGeo.Width, AntiGeo.Height)));
            if (param_fs_param_AntiGeo_dxdy != null) param_fs_param_AntiGeo_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(AntiGeo.Width, AntiGeo.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}


namespace Game
{
    public partial class Movement_SetPolarity_Phase2
    {
        private static Effect CompiledEffect;
        private static EffectParameter param_fs_param_Data_Texture;
        private static EffectParameter param_fs_param_Data_size;
        private static EffectParameter param_fs_param_Data_dxdy;

        public static void Init()
        {
            CompiledEffect = FragSharp.Content.Load<Effect>("FragSharpShaders/Movement_SetPolarity_Phase2");
            param_fs_param_Data_Texture = CompiledEffect.Parameters["fs_param_Data_Texture"];
            param_fs_param_Data_size = CompiledEffect.Parameters["fs_param_Data_size"];
            param_fs_param_Data_dxdy = CompiledEffect.Parameters["fs_param_Data_dxdy"];
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Apply(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
            GridHelper.DrawGrid();
        }
        public static void Using(Texture2D Data, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(Data);
        }
        public static void Using(Texture2D Data, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(Data);
        }
        public static void Using(Texture2D Data)
        {
            if (param_fs_param_Data_Texture != null) param_fs_param_Data_Texture.SetValue(FragSharpMarshal.Marshal(Data));
            if (param_fs_param_Data_size != null) param_fs_param_Data_size.SetValue(FragSharpMarshal.Marshal(vec(Data.Width, Data.Height)));
            if (param_fs_param_Data_dxdy != null) param_fs_param_Data_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(Data.Width, Data.Height)));
            CompiledEffect.CurrentTechnique.Passes[0].Apply();
        }
    }
}






namespace Game
{
    public partial class DrawUnitsZoomedOutBlur
    {
        private static Effect CompiledEffect_player_0;
        private static EffectParameter param_player_0_vs_param_cameraPos;
        private static EffectParameter param_player_0_vs_param_cameraAspect;
        private static EffectParameter param_player_0_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0_fs_param_CurrentData_size;
        private static EffectParameter param_player_0_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0_fs_param_CurrentUnit_Texture;
        private static EffectParameter param_player_0_fs_param_CurrentUnit_size;
        private static EffectParameter param_player_0_fs_param_CurrentUnit_dxdy;
        private static EffectParameter param_player_0_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0_fs_param_FarColor_size;
        private static EffectParameter param_player_0_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p003921569;
        private static EffectParameter param_player_0p003921569_vs_param_cameraPos;
        private static EffectParameter param_player_0p003921569_vs_param_cameraAspect;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentUnit_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentUnit_size;
        private static EffectParameter param_player_0p003921569_fs_param_CurrentUnit_dxdy;
        private static EffectParameter param_player_0p003921569_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p003921569_fs_param_FarColor_size;
        private static EffectParameter param_player_0p003921569_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p007843138;
        private static EffectParameter param_player_0p007843138_vs_param_cameraPos;
        private static EffectParameter param_player_0p007843138_vs_param_cameraAspect;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentUnit_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentUnit_size;
        private static EffectParameter param_player_0p007843138_fs_param_CurrentUnit_dxdy;
        private static EffectParameter param_player_0p007843138_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p007843138_fs_param_FarColor_size;
        private static EffectParameter param_player_0p007843138_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01176471;
        private static EffectParameter param_player_0p01176471_vs_param_cameraPos;
        private static EffectParameter param_player_0p01176471_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentUnit_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentUnit_size;
        private static EffectParameter param_player_0p01176471_fs_param_CurrentUnit_dxdy;
        private static EffectParameter param_player_0p01176471_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01176471_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01176471_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01568628;
        private static EffectParameter param_player_0p01568628_vs_param_cameraPos;
        private static EffectParameter param_player_0p01568628_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentUnit_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentUnit_size;
        private static EffectParameter param_player_0p01568628_fs_param_CurrentUnit_dxdy;
        private static EffectParameter param_player_0p01568628_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01568628_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01568628_fs_param_FarColor_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnitsZoomedOutBlur_player=0");
            param_player_0_vs_param_cameraPos = CompiledEffect_player_0.Parameters["vs_param_cameraPos"];
            param_player_0_vs_param_cameraAspect = CompiledEffect_player_0.Parameters["vs_param_cameraAspect"];
            param_player_0_fs_param_CurrentData_Texture = CompiledEffect_player_0.Parameters["fs_param_CurrentData_Texture"];
            param_player_0_fs_param_CurrentData_size = CompiledEffect_player_0.Parameters["fs_param_CurrentData_size"];
            param_player_0_fs_param_CurrentData_dxdy = CompiledEffect_player_0.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0_fs_param_CurrentUnit_Texture = CompiledEffect_player_0.Parameters["fs_param_CurrentUnit_Texture"];
            param_player_0_fs_param_CurrentUnit_size = CompiledEffect_player_0.Parameters["fs_param_CurrentUnit_size"];
            param_player_0_fs_param_CurrentUnit_dxdy = CompiledEffect_player_0.Parameters["fs_param_CurrentUnit_dxdy"];
            param_player_0_fs_param_FarColor_Texture = CompiledEffect_player_0.Parameters["fs_param_FarColor_Texture"];
            param_player_0_fs_param_FarColor_size = CompiledEffect_player_0.Parameters["fs_param_FarColor_size"];
            param_player_0_fs_param_FarColor_dxdy = CompiledEffect_player_0.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p003921569 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnitsZoomedOutBlur_player=0.003921569");
            param_player_0p003921569_vs_param_cameraPos = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraPos"];
            param_player_0p003921569_vs_param_cameraAspect = CompiledEffect_player_0p003921569.Parameters["vs_param_cameraAspect"];
            param_player_0p003921569_fs_param_CurrentData_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p003921569_fs_param_CurrentData_size = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentData_size"];
            param_player_0p003921569_fs_param_CurrentData_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p003921569_fs_param_CurrentUnit_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentUnit_Texture"];
            param_player_0p003921569_fs_param_CurrentUnit_size = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentUnit_size"];
            param_player_0p003921569_fs_param_CurrentUnit_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_CurrentUnit_dxdy"];
            param_player_0p003921569_fs_param_FarColor_Texture = CompiledEffect_player_0p003921569.Parameters["fs_param_FarColor_Texture"];
            param_player_0p003921569_fs_param_FarColor_size = CompiledEffect_player_0p003921569.Parameters["fs_param_FarColor_size"];
            param_player_0p003921569_fs_param_FarColor_dxdy = CompiledEffect_player_0p003921569.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p007843138 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnitsZoomedOutBlur_player=0.007843138");
            param_player_0p007843138_vs_param_cameraPos = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraPos"];
            param_player_0p007843138_vs_param_cameraAspect = CompiledEffect_player_0p007843138.Parameters["vs_param_cameraAspect"];
            param_player_0p007843138_fs_param_CurrentData_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p007843138_fs_param_CurrentData_size = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentData_size"];
            param_player_0p007843138_fs_param_CurrentData_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p007843138_fs_param_CurrentUnit_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentUnit_Texture"];
            param_player_0p007843138_fs_param_CurrentUnit_size = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentUnit_size"];
            param_player_0p007843138_fs_param_CurrentUnit_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_CurrentUnit_dxdy"];
            param_player_0p007843138_fs_param_FarColor_Texture = CompiledEffect_player_0p007843138.Parameters["fs_param_FarColor_Texture"];
            param_player_0p007843138_fs_param_FarColor_size = CompiledEffect_player_0p007843138.Parameters["fs_param_FarColor_size"];
            param_player_0p007843138_fs_param_FarColor_dxdy = CompiledEffect_player_0p007843138.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01176471 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnitsZoomedOutBlur_player=0.01176471");
            param_player_0p01176471_vs_param_cameraPos = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraPos"];
            param_player_0p01176471_vs_param_cameraAspect = CompiledEffect_player_0p01176471.Parameters["vs_param_cameraAspect"];
            param_player_0p01176471_fs_param_CurrentData_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p01176471_fs_param_CurrentData_size = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentData_size"];
            param_player_0p01176471_fs_param_CurrentData_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p01176471_fs_param_CurrentUnit_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentUnit_Texture"];
            param_player_0p01176471_fs_param_CurrentUnit_size = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentUnit_size"];
            param_player_0p01176471_fs_param_CurrentUnit_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_CurrentUnit_dxdy"];
            param_player_0p01176471_fs_param_FarColor_Texture = CompiledEffect_player_0p01176471.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01176471_fs_param_FarColor_size = CompiledEffect_player_0p01176471.Parameters["fs_param_FarColor_size"];
            param_player_0p01176471_fs_param_FarColor_dxdy = CompiledEffect_player_0p01176471.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01568628 = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnitsZoomedOutBlur_player=0.01568628");
            param_player_0p01568628_vs_param_cameraPos = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraPos"];
            param_player_0p01568628_vs_param_cameraAspect = CompiledEffect_player_0p01568628.Parameters["vs_param_cameraAspect"];
            param_player_0p01568628_fs_param_CurrentData_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p01568628_fs_param_CurrentData_size = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentData_size"];
            param_player_0p01568628_fs_param_CurrentData_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p01568628_fs_param_CurrentUnit_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentUnit_Texture"];
            param_player_0p01568628_fs_param_CurrentUnit_size = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentUnit_size"];
            param_player_0p01568628_fs_param_CurrentUnit_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_CurrentUnit_dxdy"];
            param_player_0p01568628_fs_param_FarColor_Texture = CompiledEffect_player_0p01568628.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01568628_fs_param_FarColor_size = CompiledEffect_player_0p01568628.Parameters["fs_param_FarColor_size"];
            param_player_0p01568628_fs_param_FarColor_dxdy = CompiledEffect_player_0p01568628.Parameters["fs_param_FarColor_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D CurrentUnit, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, CurrentData, CurrentUnit, player);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D CurrentUnit, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, CurrentData, CurrentUnit, player);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D CurrentUnit, float player, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, CurrentData, CurrentUnit, player);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D CurrentUnit, float player, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, CurrentData, CurrentUnit, player);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D CurrentUnit, float player)
        {
            if (abs((float)(player - 0)) < .0019)
            {
                if (param_player_0_vs_param_cameraPos != null) param_player_0_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0_vs_param_cameraAspect != null) param_player_0_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0_fs_param_CurrentData_Texture != null) param_player_0_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0_fs_param_CurrentData_size != null) param_player_0_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0_fs_param_CurrentData_dxdy != null) param_player_0_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0_fs_param_CurrentUnit_Texture != null) param_player_0_fs_param_CurrentUnit_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnit));
                if (param_player_0_fs_param_CurrentUnit_size != null) param_player_0_fs_param_CurrentUnit_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0_fs_param_CurrentUnit_dxdy != null) param_player_0_fs_param_CurrentUnit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0_fs_param_FarColor_Texture != null) param_player_0_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0_fs_param_FarColor_size != null) param_player_0_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0_fs_param_FarColor_dxdy != null) param_player_0_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019)
            {
                if (param_player_0p003921569_vs_param_cameraPos != null) param_player_0p003921569_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p003921569_vs_param_cameraAspect != null) param_player_0p003921569_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p003921569_fs_param_CurrentData_Texture != null) param_player_0p003921569_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p003921569_fs_param_CurrentData_size != null) param_player_0p003921569_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p003921569_fs_param_CurrentData_dxdy != null) param_player_0p003921569_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p003921569_fs_param_CurrentUnit_Texture != null) param_player_0p003921569_fs_param_CurrentUnit_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnit));
                if (param_player_0p003921569_fs_param_CurrentUnit_size != null) param_player_0p003921569_fs_param_CurrentUnit_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p003921569_fs_param_CurrentUnit_dxdy != null) param_player_0p003921569_fs_param_CurrentUnit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p003921569_fs_param_FarColor_Texture != null) param_player_0p003921569_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p003921569_fs_param_FarColor_size != null) param_player_0p003921569_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p003921569_fs_param_FarColor_dxdy != null) param_player_0p003921569_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p003921569.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019)
            {
                if (param_player_0p007843138_vs_param_cameraPos != null) param_player_0p007843138_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p007843138_vs_param_cameraAspect != null) param_player_0p007843138_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p007843138_fs_param_CurrentData_Texture != null) param_player_0p007843138_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p007843138_fs_param_CurrentData_size != null) param_player_0p007843138_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p007843138_fs_param_CurrentData_dxdy != null) param_player_0p007843138_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p007843138_fs_param_CurrentUnit_Texture != null) param_player_0p007843138_fs_param_CurrentUnit_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnit));
                if (param_player_0p007843138_fs_param_CurrentUnit_size != null) param_player_0p007843138_fs_param_CurrentUnit_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p007843138_fs_param_CurrentUnit_dxdy != null) param_player_0p007843138_fs_param_CurrentUnit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p007843138_fs_param_FarColor_Texture != null) param_player_0p007843138_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p007843138_fs_param_FarColor_size != null) param_player_0p007843138_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p007843138_fs_param_FarColor_dxdy != null) param_player_0p007843138_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p007843138.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019)
            {
                if (param_player_0p01176471_vs_param_cameraPos != null) param_player_0p01176471_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01176471_vs_param_cameraAspect != null) param_player_0p01176471_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01176471_fs_param_CurrentData_Texture != null) param_player_0p01176471_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p01176471_fs_param_CurrentData_size != null) param_player_0p01176471_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01176471_fs_param_CurrentData_dxdy != null) param_player_0p01176471_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01176471_fs_param_CurrentUnit_Texture != null) param_player_0p01176471_fs_param_CurrentUnit_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnit));
                if (param_player_0p01176471_fs_param_CurrentUnit_size != null) param_player_0p01176471_fs_param_CurrentUnit_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p01176471_fs_param_CurrentUnit_dxdy != null) param_player_0p01176471_fs_param_CurrentUnit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p01176471_fs_param_FarColor_Texture != null) param_player_0p01176471_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01176471_fs_param_FarColor_size != null) param_player_0p01176471_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01176471_fs_param_FarColor_dxdy != null) param_player_0p01176471_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01176471.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019)
            {
                if (param_player_0p01568628_vs_param_cameraPos != null) param_player_0p01568628_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01568628_vs_param_cameraAspect != null) param_player_0p01568628_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01568628_fs_param_CurrentData_Texture != null) param_player_0p01568628_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p01568628_fs_param_CurrentData_size != null) param_player_0p01568628_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01568628_fs_param_CurrentData_dxdy != null) param_player_0p01568628_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01568628_fs_param_CurrentUnit_Texture != null) param_player_0p01568628_fs_param_CurrentUnit_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnit));
                if (param_player_0p01568628_fs_param_CurrentUnit_size != null) param_player_0p01568628_fs_param_CurrentUnit_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p01568628_fs_param_CurrentUnit_dxdy != null) param_player_0p01568628_fs_param_CurrentUnit_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnit.Width, CurrentUnit.Height)));
                if (param_player_0p01568628_fs_param_FarColor_Texture != null) param_player_0p01568628_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01568628_fs_param_FarColor_size != null) param_player_0p01568628_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01568628_fs_param_FarColor_dxdy != null) param_player_0p01568628_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01568628.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}











namespace Game
{
    public partial class DrawUnits
    {
        private static Effect CompiledEffect_player_0_solid_blend_flag_true;
        private static EffectParameter param_player_0_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_player_0_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_CurrentData_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_PreviousData_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_s;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_t;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_selection_blend;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_selection_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_player_0_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0_solid_blend_flag_false;
        private static EffectParameter param_player_0_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_player_0_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_CurrentData_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_PreviousData_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_s;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_t;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_selection_blend;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_selection_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_player_0_solid_blend_flag_false_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p003921569_solid_blend_flag_true;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_s;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_t;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_selection_blend;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_selection_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p003921569_solid_blend_flag_false;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_s;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_t;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_selection_blend;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_selection_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p007843138_solid_blend_flag_true;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_s;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_t;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_selection_blend;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_selection_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p007843138_solid_blend_flag_false;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_s;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_t;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_selection_blend;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_selection_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01176471_solid_blend_flag_true;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_s;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_t;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_selection_blend;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_selection_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01176471_solid_blend_flag_false;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_s;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_t;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_selection_blend;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_selection_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01568628_solid_blend_flag_true;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_vs_param_cameraPos;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_s;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_t;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_selection_blend;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_selection_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_solid_blend;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_dxdy;
        private static Effect CompiledEffect_player_0p01568628_solid_blend_flag_false;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_vs_param_cameraPos;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_vs_param_cameraAspect;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_dxdy;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_s;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_t;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_selection_blend;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_selection_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_solid_blend;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_Texture;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_size;
        private static EffectParameter param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_dxdy;

        public static void Init()
        {
            CompiledEffect_player_0_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0_solid_blend_flag=true");
            param_player_0_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_player_0_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_player_0_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_player_0_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_player_0_solid_blend_flag_true_fs_param_CurrentData_Texture = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_CurrentData_Texture"];
            param_player_0_solid_blend_flag_true_fs_param_CurrentData_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_CurrentData_size"];
            param_player_0_solid_blend_flag_true_fs_param_CurrentData_dxdy = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0_solid_blend_flag_true_fs_param_PreviousData_Texture = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_PreviousData_Texture"];
            param_player_0_solid_blend_flag_true_fs_param_PreviousData_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_PreviousData_size"];
            param_player_0_solid_blend_flag_true_fs_param_PreviousData_dxdy = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_Texture = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_size"];
            param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_Texture = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_size"];
            param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0_solid_blend_flag_true_fs_param_UnitTexture_Texture = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0_solid_blend_flag_true_fs_param_UnitTexture_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_UnitTexture_size"];
            param_player_0_solid_blend_flag_true_fs_param_UnitTexture_dxdy = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_Texture = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_size"];
            param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0_solid_blend_flag_true_fs_param_s = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_s"];
            param_player_0_solid_blend_flag_true_fs_param_t = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_t"];
            param_player_0_solid_blend_flag_true_fs_param_selection_blend = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_selection_blend"];
            param_player_0_solid_blend_flag_true_fs_param_selection_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_selection_size"];
            param_player_0_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_player_0_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_player_0_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_player_0_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_player_0_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0_solid_blend_flag=false");
            param_player_0_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_player_0_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_player_0_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_player_0_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_player_0_solid_blend_flag_false_fs_param_CurrentData_Texture = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_CurrentData_Texture"];
            param_player_0_solid_blend_flag_false_fs_param_CurrentData_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_CurrentData_size"];
            param_player_0_solid_blend_flag_false_fs_param_CurrentData_dxdy = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0_solid_blend_flag_false_fs_param_PreviousData_Texture = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_PreviousData_Texture"];
            param_player_0_solid_blend_flag_false_fs_param_PreviousData_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_PreviousData_size"];
            param_player_0_solid_blend_flag_false_fs_param_PreviousData_dxdy = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_Texture = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_size"];
            param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_Texture = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_size"];
            param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0_solid_blend_flag_false_fs_param_UnitTexture_Texture = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0_solid_blend_flag_false_fs_param_UnitTexture_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_UnitTexture_size"];
            param_player_0_solid_blend_flag_false_fs_param_UnitTexture_dxdy = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_Texture = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_size"];
            param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0_solid_blend_flag_false_fs_param_s = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_s"];
            param_player_0_solid_blend_flag_false_fs_param_t = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_t"];
            param_player_0_solid_blend_flag_false_fs_param_selection_blend = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_selection_blend"];
            param_player_0_solid_blend_flag_false_fs_param_selection_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_selection_size"];
            param_player_0_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_player_0_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_player_0_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_player_0_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_player_0_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p003921569_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.003921569_solid_blend_flag=true");
            param_player_0p003921569_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_player_0p003921569_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_CurrentData_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_PreviousData_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_UnitTexture_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_s = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_s"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_t = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_t"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_selection_blend = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_selection_blend"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_selection_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_selection_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p003921569_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.003921569_solid_blend_flag=false");
            param_player_0p003921569_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_player_0p003921569_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_CurrentData_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_PreviousData_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_UnitTexture_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_s = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_s"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_t = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_t"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_selection_blend = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_selection_blend"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_selection_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_selection_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_player_0p003921569_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p007843138_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.007843138_solid_blend_flag=true");
            param_player_0p007843138_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_player_0p007843138_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_CurrentData_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_PreviousData_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_UnitTexture_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_s = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_s"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_t = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_t"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_selection_blend = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_selection_blend"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_selection_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_selection_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p007843138_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.007843138_solid_blend_flag=false");
            param_player_0p007843138_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_player_0p007843138_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_CurrentData_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_PreviousData_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_UnitTexture_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_s = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_s"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_t = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_t"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_selection_blend = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_selection_blend"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_selection_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_selection_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_player_0p007843138_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01176471_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.01176471_solid_blend_flag=true");
            param_player_0p01176471_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_player_0p01176471_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_CurrentData_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_PreviousData_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_UnitTexture_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_s = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_s"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_t = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_t"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_selection_blend = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_selection_blend"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_selection_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_selection_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01176471_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.01176471_solid_blend_flag=false");
            param_player_0p01176471_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_player_0p01176471_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_CurrentData_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_PreviousData_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_UnitTexture_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_s = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_s"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_t = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_t"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_selection_blend = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_selection_blend"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_selection_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_selection_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_player_0p01176471_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01568628_solid_blend_flag_true = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.01568628_solid_blend_flag=true");
            param_player_0p01568628_solid_blend_flag_true_vs_param_cameraPos = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["vs_param_cameraPos"];
            param_player_0p01568628_solid_blend_flag_true_vs_param_cameraAspect = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["vs_param_cameraAspect"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_CurrentData_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_PreviousData_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_UnitTexture_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_s = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_s"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_t = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_t"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_selection_blend = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_selection_blend"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_selection_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_selection_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_solid_blend = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_solid_blend"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_size = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_FarColor_size"];
            param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_true.Parameters["fs_param_FarColor_dxdy"];
            CompiledEffect_player_0p01568628_solid_blend_flag_false = FragSharp.Content.Load<Effect>("FragSharpShaders/DrawUnits_player=0.01568628_solid_blend_flag=false");
            param_player_0p01568628_solid_blend_flag_false_vs_param_cameraPos = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["vs_param_cameraPos"];
            param_player_0p01568628_solid_blend_flag_false_vs_param_cameraAspect = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["vs_param_cameraAspect"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_CurrentData_Texture"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_CurrentData_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_CurrentData_dxdy"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_PreviousData_Texture"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_PreviousData_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_PreviousData_dxdy"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_Texture"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_CurrentUnits_dxdy"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_Texture"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_PreviousUnits_dxdy"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_UnitTexture_Texture"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_UnitTexture_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_UnitTexture_dxdy"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_Texture"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_ShadowTexture_dxdy"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_s = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_s"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_t = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_t"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_selection_blend = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_selection_blend"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_selection_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_selection_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_solid_blend = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_solid_blend"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_Texture = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_FarColor_Texture"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_size = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_FarColor_size"];
            param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_dxdy = CompiledEffect_player_0p01568628_solid_blend_flag_false.Parameters["fs_param_FarColor_dxdy"];
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D PreviousData, Texture2D CurrentUnits, Texture2D PreviousUnits, Texture2D UnitTexture, Texture2D ShadowTexture, float player, float s, float t, float selection_blend, float selection_size, bool solid_blend_flag, float solid_blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, CurrentData, PreviousData, CurrentUnits, PreviousUnits, UnitTexture, ShadowTexture, player, s, t, selection_blend, selection_size, solid_blend_flag, solid_blend);
            GridHelper.DrawGrid();
        }
        public static void Apply(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D PreviousData, Texture2D CurrentUnits, Texture2D PreviousUnits, Texture2D UnitTexture, Texture2D ShadowTexture, float player, float s, float t, float selection_blend, float selection_size, bool solid_blend_flag, float solid_blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, CurrentData, PreviousData, CurrentUnits, PreviousUnits, UnitTexture, ShadowTexture, player, s, t, selection_blend, selection_size, solid_blend_flag, solid_blend);
            GridHelper.DrawGrid();
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D PreviousData, Texture2D CurrentUnits, Texture2D PreviousUnits, Texture2D UnitTexture, Texture2D ShadowTexture, float player, float s, float t, float selection_blend, float selection_size, bool solid_blend_flag, float solid_blend, RenderTarget2D Output, Color Clear)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Clear);
            Using(cameraPos, cameraAspect, CurrentData, PreviousData, CurrentUnits, PreviousUnits, UnitTexture, ShadowTexture, player, s, t, selection_blend, selection_size, solid_blend_flag, solid_blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D PreviousData, Texture2D CurrentUnits, Texture2D PreviousUnits, Texture2D UnitTexture, Texture2D ShadowTexture, float player, float s, float t, float selection_blend, float selection_size, bool solid_blend_flag, float solid_blend, RenderTarget2D Output)
        {
            GridHelper.GraphicsDevice.SetRenderTarget(Output);
            GridHelper.GraphicsDevice.Clear(Color.Transparent);
            Using(cameraPos, cameraAspect, CurrentData, PreviousData, CurrentUnits, PreviousUnits, UnitTexture, ShadowTexture, player, s, t, selection_blend, selection_size, solid_blend_flag, solid_blend);
        }
        public static void Using(vec4 cameraPos, float cameraAspect, Texture2D CurrentData, Texture2D PreviousData, Texture2D CurrentUnits, Texture2D PreviousUnits, Texture2D UnitTexture, Texture2D ShadowTexture, float player, float s, float t, float selection_blend, float selection_size, bool solid_blend_flag, float solid_blend)
        {
            if (abs((float)(player - 0)) < .0019 && solid_blend_flag == true)
            {
                if (param_player_0_solid_blend_flag_true_vs_param_cameraPos != null) param_player_0_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0_solid_blend_flag_true_vs_param_cameraAspect != null) param_player_0_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0_solid_blend_flag_true_fs_param_CurrentData_Texture != null) param_player_0_solid_blend_flag_true_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0_solid_blend_flag_true_fs_param_CurrentData_size != null) param_player_0_solid_blend_flag_true_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_CurrentData_dxdy != null) param_player_0_solid_blend_flag_true_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_PreviousData_Texture != null) param_player_0_solid_blend_flag_true_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0_solid_blend_flag_true_fs_param_PreviousData_size != null) param_player_0_solid_blend_flag_true_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_PreviousData_dxdy != null) param_player_0_solid_blend_flag_true_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_Texture != null) param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_size != null) param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_dxdy != null) param_player_0_solid_blend_flag_true_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_Texture != null) param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_size != null) param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_dxdy != null) param_player_0_solid_blend_flag_true_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_UnitTexture_Texture != null) param_player_0_solid_blend_flag_true_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0_solid_blend_flag_true_fs_param_UnitTexture_size != null) param_player_0_solid_blend_flag_true_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_UnitTexture_dxdy != null) param_player_0_solid_blend_flag_true_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_Texture != null) param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_size != null) param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_dxdy != null) param_player_0_solid_blend_flag_true_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_s != null) param_player_0_solid_blend_flag_true_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0_solid_blend_flag_true_fs_param_t != null) param_player_0_solid_blend_flag_true_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0_solid_blend_flag_true_fs_param_selection_blend != null) param_player_0_solid_blend_flag_true_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0_solid_blend_flag_true_fs_param_selection_size != null) param_player_0_solid_blend_flag_true_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0_solid_blend_flag_true_fs_param_solid_blend != null) param_player_0_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_player_0_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0_solid_blend_flag_true_fs_param_FarColor_size != null) param_player_0_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_player_0_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0)) < .0019 && solid_blend_flag == false)
            {
                if (param_player_0_solid_blend_flag_false_vs_param_cameraPos != null) param_player_0_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0_solid_blend_flag_false_vs_param_cameraAspect != null) param_player_0_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0_solid_blend_flag_false_fs_param_CurrentData_Texture != null) param_player_0_solid_blend_flag_false_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0_solid_blend_flag_false_fs_param_CurrentData_size != null) param_player_0_solid_blend_flag_false_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_CurrentData_dxdy != null) param_player_0_solid_blend_flag_false_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_PreviousData_Texture != null) param_player_0_solid_blend_flag_false_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0_solid_blend_flag_false_fs_param_PreviousData_size != null) param_player_0_solid_blend_flag_false_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_PreviousData_dxdy != null) param_player_0_solid_blend_flag_false_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_Texture != null) param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_size != null) param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_dxdy != null) param_player_0_solid_blend_flag_false_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_Texture != null) param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_size != null) param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_dxdy != null) param_player_0_solid_blend_flag_false_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_UnitTexture_Texture != null) param_player_0_solid_blend_flag_false_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0_solid_blend_flag_false_fs_param_UnitTexture_size != null) param_player_0_solid_blend_flag_false_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_UnitTexture_dxdy != null) param_player_0_solid_blend_flag_false_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_Texture != null) param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_size != null) param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_dxdy != null) param_player_0_solid_blend_flag_false_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_s != null) param_player_0_solid_blend_flag_false_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0_solid_blend_flag_false_fs_param_t != null) param_player_0_solid_blend_flag_false_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0_solid_blend_flag_false_fs_param_selection_blend != null) param_player_0_solid_blend_flag_false_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0_solid_blend_flag_false_fs_param_selection_size != null) param_player_0_solid_blend_flag_false_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0_solid_blend_flag_false_fs_param_solid_blend != null) param_player_0_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_player_0_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0_solid_blend_flag_false_fs_param_FarColor_size != null) param_player_0_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_player_0_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && solid_blend_flag == true)
            {
                if (param_player_0p003921569_solid_blend_flag_true_vs_param_cameraPos != null) param_player_0p003921569_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p003921569_solid_blend_flag_true_vs_param_cameraAspect != null) param_player_0p003921569_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_Texture != null) param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_dxdy != null) param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_Texture != null) param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_dxdy != null) param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_Texture != null) param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_dxdy != null) param_player_0p003921569_solid_blend_flag_true_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_Texture != null) param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_dxdy != null) param_player_0p003921569_solid_blend_flag_true_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_Texture != null) param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_dxdy != null) param_player_0p003921569_solid_blend_flag_true_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_Texture != null) param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_dxdy != null) param_player_0p003921569_solid_blend_flag_true_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_s != null) param_player_0p003921569_solid_blend_flag_true_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_t != null) param_player_0p003921569_solid_blend_flag_true_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_selection_blend != null) param_player_0p003921569_solid_blend_flag_true_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_selection_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_solid_blend != null) param_player_0p003921569_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_size != null) param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_player_0p003921569_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p003921569_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.003921569)) < .0019 && solid_blend_flag == false)
            {
                if (param_player_0p003921569_solid_blend_flag_false_vs_param_cameraPos != null) param_player_0p003921569_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p003921569_solid_blend_flag_false_vs_param_cameraAspect != null) param_player_0p003921569_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_Texture != null) param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_dxdy != null) param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_Texture != null) param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_dxdy != null) param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_Texture != null) param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_dxdy != null) param_player_0p003921569_solid_blend_flag_false_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_Texture != null) param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_dxdy != null) param_player_0p003921569_solid_blend_flag_false_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_Texture != null) param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_dxdy != null) param_player_0p003921569_solid_blend_flag_false_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_Texture != null) param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_dxdy != null) param_player_0p003921569_solid_blend_flag_false_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_s != null) param_player_0p003921569_solid_blend_flag_false_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_t != null) param_player_0p003921569_solid_blend_flag_false_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_selection_blend != null) param_player_0p003921569_solid_blend_flag_false_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_selection_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_solid_blend != null) param_player_0p003921569_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_size != null) param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_player_0p003921569_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p003921569_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && solid_blend_flag == true)
            {
                if (param_player_0p007843138_solid_blend_flag_true_vs_param_cameraPos != null) param_player_0p007843138_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p007843138_solid_blend_flag_true_vs_param_cameraAspect != null) param_player_0p007843138_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_Texture != null) param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_dxdy != null) param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_Texture != null) param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_dxdy != null) param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_Texture != null) param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_dxdy != null) param_player_0p007843138_solid_blend_flag_true_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_Texture != null) param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_dxdy != null) param_player_0p007843138_solid_blend_flag_true_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_Texture != null) param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_dxdy != null) param_player_0p007843138_solid_blend_flag_true_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_Texture != null) param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_dxdy != null) param_player_0p007843138_solid_blend_flag_true_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_s != null) param_player_0p007843138_solid_blend_flag_true_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_t != null) param_player_0p007843138_solid_blend_flag_true_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_selection_blend != null) param_player_0p007843138_solid_blend_flag_true_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_selection_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_solid_blend != null) param_player_0p007843138_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_size != null) param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_player_0p007843138_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p007843138_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.007843138)) < .0019 && solid_blend_flag == false)
            {
                if (param_player_0p007843138_solid_blend_flag_false_vs_param_cameraPos != null) param_player_0p007843138_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p007843138_solid_blend_flag_false_vs_param_cameraAspect != null) param_player_0p007843138_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_Texture != null) param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_dxdy != null) param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_Texture != null) param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_dxdy != null) param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_Texture != null) param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_dxdy != null) param_player_0p007843138_solid_blend_flag_false_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_Texture != null) param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_dxdy != null) param_player_0p007843138_solid_blend_flag_false_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_Texture != null) param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_dxdy != null) param_player_0p007843138_solid_blend_flag_false_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_Texture != null) param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_dxdy != null) param_player_0p007843138_solid_blend_flag_false_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_s != null) param_player_0p007843138_solid_blend_flag_false_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_t != null) param_player_0p007843138_solid_blend_flag_false_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_selection_blend != null) param_player_0p007843138_solid_blend_flag_false_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_selection_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_solid_blend != null) param_player_0p007843138_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_size != null) param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_player_0p007843138_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p007843138_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && solid_blend_flag == true)
            {
                if (param_player_0p01176471_solid_blend_flag_true_vs_param_cameraPos != null) param_player_0p01176471_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01176471_solid_blend_flag_true_vs_param_cameraAspect != null) param_player_0p01176471_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_Texture != null) param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_dxdy != null) param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_Texture != null) param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_dxdy != null) param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_Texture != null) param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_dxdy != null) param_player_0p01176471_solid_blend_flag_true_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_Texture != null) param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_dxdy != null) param_player_0p01176471_solid_blend_flag_true_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_Texture != null) param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_dxdy != null) param_player_0p01176471_solid_blend_flag_true_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_Texture != null) param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_dxdy != null) param_player_0p01176471_solid_blend_flag_true_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_s != null) param_player_0p01176471_solid_blend_flag_true_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_t != null) param_player_0p01176471_solid_blend_flag_true_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_selection_blend != null) param_player_0p01176471_solid_blend_flag_true_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_selection_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_solid_blend != null) param_player_0p01176471_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_size != null) param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_player_0p01176471_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01176471_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01176471)) < .0019 && solid_blend_flag == false)
            {
                if (param_player_0p01176471_solid_blend_flag_false_vs_param_cameraPos != null) param_player_0p01176471_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01176471_solid_blend_flag_false_vs_param_cameraAspect != null) param_player_0p01176471_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_Texture != null) param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_dxdy != null) param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_Texture != null) param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_dxdy != null) param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_Texture != null) param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_dxdy != null) param_player_0p01176471_solid_blend_flag_false_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_Texture != null) param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_dxdy != null) param_player_0p01176471_solid_blend_flag_false_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_Texture != null) param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_dxdy != null) param_player_0p01176471_solid_blend_flag_false_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_Texture != null) param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_dxdy != null) param_player_0p01176471_solid_blend_flag_false_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_s != null) param_player_0p01176471_solid_blend_flag_false_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_t != null) param_player_0p01176471_solid_blend_flag_false_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_selection_blend != null) param_player_0p01176471_solid_blend_flag_false_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_selection_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_solid_blend != null) param_player_0p01176471_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_size != null) param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_player_0p01176471_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01176471_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && solid_blend_flag == true)
            {
                if (param_player_0p01568628_solid_blend_flag_true_vs_param_cameraPos != null) param_player_0p01568628_solid_blend_flag_true_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01568628_solid_blend_flag_true_vs_param_cameraAspect != null) param_player_0p01568628_solid_blend_flag_true_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_Texture != null) param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_dxdy != null) param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_Texture != null) param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_dxdy != null) param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_Texture != null) param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_dxdy != null) param_player_0p01568628_solid_blend_flag_true_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_Texture != null) param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_dxdy != null) param_player_0p01568628_solid_blend_flag_true_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_Texture != null) param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_dxdy != null) param_player_0p01568628_solid_blend_flag_true_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_Texture != null) param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_dxdy != null) param_player_0p01568628_solid_blend_flag_true_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_s != null) param_player_0p01568628_solid_blend_flag_true_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_t != null) param_player_0p01568628_solid_blend_flag_true_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_selection_blend != null) param_player_0p01568628_solid_blend_flag_true_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_selection_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_solid_blend != null) param_player_0p01568628_solid_blend_flag_true_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_Texture != null) param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_size != null) param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_dxdy != null) param_player_0p01568628_solid_blend_flag_true_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01568628_solid_blend_flag_true.CurrentTechnique.Passes[0].Apply();
            }
            else if (abs((float)(player - 0.01568628)) < .0019 && solid_blend_flag == false)
            {
                if (param_player_0p01568628_solid_blend_flag_false_vs_param_cameraPos != null) param_player_0p01568628_solid_blend_flag_false_vs_param_cameraPos.SetValue(FragSharpMarshal.Marshal(cameraPos));
                if (param_player_0p01568628_solid_blend_flag_false_vs_param_cameraAspect != null) param_player_0p01568628_solid_blend_flag_false_vs_param_cameraAspect.SetValue(FragSharpMarshal.Marshal(cameraAspect));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_Texture != null) param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_Texture.SetValue(FragSharpMarshal.Marshal(CurrentData));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_dxdy != null) param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentData.Width, CurrentData.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_Texture != null) param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_Texture.SetValue(FragSharpMarshal.Marshal(PreviousData));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_dxdy != null) param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousData_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousData.Width, PreviousData.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_Texture != null) param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_Texture.SetValue(FragSharpMarshal.Marshal(CurrentUnits));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_size.SetValue(FragSharpMarshal.Marshal(vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_dxdy != null) param_player_0p01568628_solid_blend_flag_false_fs_param_CurrentUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(CurrentUnits.Width, CurrentUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_Texture != null) param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_Texture.SetValue(FragSharpMarshal.Marshal(PreviousUnits));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_size.SetValue(FragSharpMarshal.Marshal(vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_dxdy != null) param_player_0p01568628_solid_blend_flag_false_fs_param_PreviousUnits_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(PreviousUnits.Width, PreviousUnits.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_Texture != null) param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_Texture.SetValue(FragSharpMarshal.Marshal(UnitTexture));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_size.SetValue(FragSharpMarshal.Marshal(vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_dxdy != null) param_player_0p01568628_solid_blend_flag_false_fs_param_UnitTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(UnitTexture.Width, UnitTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_Texture != null) param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_Texture.SetValue(FragSharpMarshal.Marshal(ShadowTexture));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_size.SetValue(FragSharpMarshal.Marshal(vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_dxdy != null) param_player_0p01568628_solid_blend_flag_false_fs_param_ShadowTexture_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(ShadowTexture.Width, ShadowTexture.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_s != null) param_player_0p01568628_solid_blend_flag_false_fs_param_s.SetValue(FragSharpMarshal.Marshal(s));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_t != null) param_player_0p01568628_solid_blend_flag_false_fs_param_t.SetValue(FragSharpMarshal.Marshal(t));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_selection_blend != null) param_player_0p01568628_solid_blend_flag_false_fs_param_selection_blend.SetValue(FragSharpMarshal.Marshal(selection_blend));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_selection_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_selection_size.SetValue(FragSharpMarshal.Marshal(selection_size));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_solid_blend != null) param_player_0p01568628_solid_blend_flag_false_fs_param_solid_blend.SetValue(FragSharpMarshal.Marshal(solid_blend));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_Texture != null) param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_Texture.SetValue(FragSharpMarshal.Marshal(FarColor));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_size != null) param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_size.SetValue(FragSharpMarshal.Marshal(vec(FarColor.Width, FarColor.Height)));
                if (param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_dxdy != null) param_player_0p01568628_solid_blend_flag_false_fs_param_FarColor_dxdy.SetValue(FragSharpMarshal.Marshal(1.0f / vec(FarColor.Width, FarColor.Height)));
                CompiledEffect_player_0p01568628_solid_blend_flag_false.CurrentTechnique.Passes[0].Apply();
            }
            else throw new Exception("Parameters do not match any specified specialization.");
        }
    }
}


